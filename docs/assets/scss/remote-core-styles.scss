// IMPORTANT All Remote Styles MUST be kept in sync.

// Import Order =======================

// Global Styles
// Colours



//  SARD Colours ===============
$sa-turq:                  #00B2B2;
$sa-pink:                  #E50073;
$sa-orange:                #FF6A00;
$sa-yellow:                #FFB200;
$sa-lime:                  #A7BF30;
$sa-green:                 #359E00;
$sa-teal:                  #004D4D;
$sa-blue:                  #003CB8;
$sa-ink:                   #000078;
$sa-purple:                #52008C;
$sa-plum:                  #990099;
$sa-red:                   #BF0000;
$sa-white:                 #FFFFFF;

$sa-MRv:                       $sa-turq;
$sa-NRv:                       $sa-orange;
$sa-360:                    $sa-yellow;
$sa-eLeave:                    $sa-lime;
$sa-A4A:                       $sa-plum;
$sa-JPL:                       $sa-pink;
$sa-eRo:                       $sa-teal;
$sa-CPL:                       $sa-red;


// RAG Colours =================
$RAG-danger:                $sa-red;
$RAG-warning:               $sa-yellow;
$RAG-success:               $sa-green;
$RAG-approved:              $sa-green;
$RAG-complete:              $sa-green;
$RAG-recommended:           $sa-orange;
$RAG-archived:              $sa-teal;
$RAG-draft:                 $sa-yellow;
$RAG-submitted:             $sa-lime;
$RAG-due:                   $sa-orange;
$RAG-abandoned:             $sa-red;

// Dark Colours ================
$sa-turq-dark:              #007C7C;
$sa-pink-dark:              #A00050;
$sa-orange-dark:            #B24A00;
$sa-yellow-dark:            #B27C00;
$sa-lime-dark:              #758522;
$sa-green-dark:             #256E00;
$sa-teal-dark:              #003636;
$sa-blue-dark:              #002A7C;
$sa-ink-dark:               #000050;
$sa-purple-dark:            #390062;
$sa-plum-dark:              #6B006B;
$sa-red-dark:               #850000;


// Light Colours ===============
$sa-turq-light:             #4DC9C9;
$sa-pink-light:             #ED4D9D;
$sa-orange-light:           #FF974D;
$sa-yellow-light:           #FFC94D;
$sa-lime-light:             #C2D26F;
$sa-green-light:            #72BB4D;
$sa-teal-light:             #4D8383;
$sa-blue-light:             #4D77C9;
$sa-ink-light:              #4D5DAB;
$sa-purple-light:           #864DAF;
$sa-plum-light:             #B84DB8;
$sa-red-light:              #D24D4D;


//  Greys ======================
$sa-grey-00:                #f6f5f5;
$sa-grey-01:                #F0F0F0;
$sa-grey-02:                #EDEBEB;
$sa-grey-03:                #E3E1E1;
$sa-grey-04:                #D9D6D6;
$sa-grey-05:                #d0cecd;
$sa-grey-06:                #C7C4C2;
$sa-grey-07:                #bdbab9;
$sa-grey-08:                #B5B0B0;
$sa-grey-09:                #aba6a5;
$sa-grey-10:                #A39E9C;
$sa-grey-11:                #918d8b;
$sa-grey-12:                #827D7D;
$sa-grey-13:                #716d6c;
$sa-grey-14:                #615E5C;
$sa-grey-15:                #514e4d;
$sa-grey-16:                #403D3D;
$sa-grey-17:                #302f2e;
$sa-grey-18:                #211F0F;
$sa-grey-19:                #0e0e0e;

//  Other Colours ==============
$sa-active:                $sa-grey-04; // Used in Bootstrap Overrides Table Hover line 1030.
$sa-success:               $sa-green;
$sa-info:                  #00a0e0;
$sa-warning:               $sa-yellow;
$sa-danger:                $sa-red;
$sa-alert:                 $sa-pink;

//colours used for admin Options Menu buttons
$index_colour: #BF14AE;
$view_colour: #83C8EE;
$edit_colour: #E81E6F;
$export_colour: #1ba7dc;

// Job Plan Colours ====================
$jp_trav:               #ED4D9D;
$jp_fps:                #D24D4D;
$jp_ms:                 #FF974D;
$jp_ed:                 #FFC94D;
$jp_spa:                #72BB4D;
$jp_dcc:                #4DC9C9;
$jp_priv:               #4D77C9;
$jp_ar:                 #B84DB8;
$jp_uni:                #C2D26F;

// Global Mixins ===================

$text:                        $sa-grey-18;
$bodytext:                    $sa-grey-18;




// Trust Colours ================================
// $trust-primary-colour:                $sa-yellow;
$trust-primary-colour:                #999966 ; // Used for Testing - Swap with above
$trust-primary-colour-light:          lighten($trust-primary-colour, 5%);
$trust-primary-colour-very-light:     lighten($trust-primary-colour, 10%);
$trust-primary-colour-dark:           darken($trust-primary-colour, 10%);
$trust-primary-colour-very-dark:      darken($trust-primary-colour, 20%);

// $trust-secondary-colour:              $sa-orange;
$trust-secondary-colour:              #996633; // Used for Testing - Swap with above
$trust-secondary-colour-light:        lighten($trust-secondary-colour, 5%);
$trust-secondary-colour-very-light:   lighten($trust-secondary-colour, 10%);
$trust-secondary-colour-dark:         darken($trust-secondary-colour, 10%);
$trust-secondary-colour-very-dark:    darken($trust-secondary-colour, 20%);

// Trust User Colours ===========================
$user-primary-colour:                 $sa-turq;
$user-primary-colour-light:           lighten($user-primary-colour, 5%);
$user-primary-colour-very-light:      lighten($user-primary-colour, 10%);
$user-primary-colour-dark:            darken($user-primary-colour, 10%);
$user-primary-colour-very-dark:       darken($user-primary-colour, 20%);

$user-secondary-colour:               $sa-teal;
$user-secondary-colour-light:         lighten($user-secondary-colour, 5%);
$user-secondary-colour-very-light:    lighten($user-secondary-colour, 10%);
$user-secondary-colour-dark:          darken($user-secondary-colour, 10%);
$user-secondary-colour-very-dark:     darken($user-secondary-colour, 20%);

// Trust Admin Colours ==========================
$admin-primary-colour:               $sa-pink;
$admin-primary-colour-light:         lighten($admin-primary-colour, 5%);
$admin-primary-colour-very-light:    lighten($admin-primary-colour, 10%);
$admin-primary-colour-dark:          darken($admin-primary-colour, 10%);
$admin-primary-colour-very-dark:     darken($admin-primary-colour, 20%);

$admin-secondary-colour:             $sa-plum;
$admin-secondary-colour-light:       lighten($admin-secondary-colour, 5%);
$admin-secondary-colour-very-light:  lighten($admin-secondary-colour, 10%);
$admin-secondary-colour-dark:        darken($admin-secondary-colour, 10%);
$admin-secondary-colour-very-dark:   darken($admin-secondary-colour, 20%);


// Other Colour Mixins ==========================
$medic:                       $sa-turq;
$non-medic:                   $sa-ink;


$link-color:                  $sa-turq;




// Navbar Admin =================================

$navAdminBase        : $admin-secondary-colour;
$navAdminHover       : darken($navAdminBase, 10%);
$navAdminFocus       : darken($navAdminBase, 15%);
$navAdminActive      : darken($navAdminBase, 15%);
$navAdminText        : white;
$navAdminActiveFocus : darken($navAdminBase, 15%);
$navAdminDropdown    : darken($navAdminBase, 15%);
$navAdminDropdownBG  : darken($navAdminBase, 15%);


// Text Colours =================================

.text-default {color: $text!important;}

.text-client {color: $user-primary-colour;}
.text-admin {color: $admin-primary-colour;}
.text-admin-2 {color: $admin-secondary-colour;}

.text-turq{ color: $sa-turq;}
.text-pink{ color: $sa-pink;}
.text-orange{ color: $sa-orange;}
.text-yellow{ color: $sa-yellow;}
.text-lime{ color: $sa-lime;}
.text-green{ color: $sa-green;}
.text-teal{ color: $sa-teal;}
.text-blue{ color: $sa-blue;}
.text-ink{ color: $sa-ink;}
.text-purple{ color: $sa-purple;}
.text-plum{ color: $sa-plum;}
.text-red{ color: $sa-red;}
.text-white{ color: $sa-white;}

.text-MRv{ color: $sa-MRv;}
.text-NRv{ color: $sa-NRv;}
.text-sa-360{ color: $sa-360;}
.text-eLeave{ color: $sa-eLeave;}
.text-A4A{ color: $sa-A4A;}
.text-JPL{ color: $sa-JPL;}
.text-eRo{ color: $sa-eRo;}
.text-CPL{ color: $sa-CPL;}

.text-grey-02{ color: $sa-grey-02;}
.text-grey-03{ color: $sa-grey-03;}
.text-grey-04{ color: $sa-grey-04;}
.text-grey-06{ color: $sa-grey-06;}
.text-grey-08{ color: $sa-grey-08;}
.text-grey-10{ color: $sa-grey-10;}
.text-grey-10{ color: $sa-grey-10;}
.text-grey-12{ color: $sa-grey-12;}
.text-grey-14{ color: $sa-grey-14;}
.text-grey-16{ color: $sa-grey-16;}
.text-grey-18{ color: $sa-grey-18;}

.text-success{ color: $sa-success;}
.text-info{ color: $sa-info;}
.text-warning{ color: $sa-warning;}
.text-danger{ color: $sa-danger;}
.text-alarm{ color: $sa-alert;}

// Background Colours ====================

.bg-sa-turq{ background-color: $sa-turq !important;}
.bg-sa-pink{ background-color: $sa-pink !important;}
.bg-sa-orange{ background-color: $sa-orange !important;}
.bg-sa-yellow{ background-color: $sa-yellow !important;}
.bg-sa-lime{ background-color: $sa-lime !important;}
.bg-sa-green{ background-color: $sa-green !important;}
.bg-sa-teal{ background-color: $sa-teal !important;}
.bg-sa-blue{ background-color: $sa-blue !important;}
.bg-sa-ink{ background-color: $sa-ink !important;}
.bg-sa-purple{ background-color: $sa-purple !important;}
.bg-sa-plum{ background-color: $sa-plum !important;}
.bg-sa-red{ background-color: $sa-red !important;}
.bg-sa-white{ background-color: $sa-white !important;}

.bg-sa-MRv{ background-color: $sa-MRv !important;}
.bg-sa-NRv{ background-color: $sa-NRv !important;}
.bg-sa-sa-360{ background-color: $sa-360 !important;}
.bg-sa-eLeave{ background-color: $sa-eLeave !important;}
.bg-sa-A4A{ background-color: $sa-A4A !important;}
.bg-sa-JPL{ background-color: $sa-JPL !important;}
.bg-sa-eRo{ background-color: $sa-eRo !important;}
.bg-sa-CPL{ background-color: $sa-CPL !important;}

// Background Colours Dark ===============

.bg-sa-turq-dark{ background-color: $sa-turq-dark !important;}
.bg-sa-pink-dark{ background-color: $sa-pink-dark !important;}
.bg-sa-orange-dark{ background-color: $sa-orange-dark !important;}
.bg-sa-yellow-dark{ background-color: $sa-yellow-dark !important;}
.bg-sa-lime-dark{ background-color: $sa-lime-dark !important;}
.bg-sa-green-dark{ background-color: $sa-green-dark !important;}
.bg-sa-teal-dark{ background-color: $sa-teal-dark !important;}
.bg-sa-blue-dark{ background-color: $sa-blue-dark !important;}
.bg-sa-ink-dark{ background-color: $sa-ink-dark !important;}
.bg-sa-purple-dark{ background-color: $sa-purple-dark !important;}
.bg-sa-plum-dark{ background-color: $sa-plum-dark !important;}
.bg-sa-red-dark{ background-color: $sa-red-dark !important;}
// Background Colours Light ==============
.bg-sa-turq-light{ background-color: $sa-turq-light !important;}
.bg-sa-pink-light{ background-color: $sa-pink-light !important;}
.bg-sa-orange-light{ background-color: $sa-orange-light !important;}
.bg-sa-yellow-light{ background-color: $sa-yellow-light !important;}
.bg-sa-lime-light{ background-color: $sa-lime-light !important;}
.bg-sa-green-light{ background-color: $sa-green-light !important;}
.bg-sa-teal-light{ background-color: $sa-teal-light !important;}
.bg-sa-blue-light{ background-color: $sa-blue-light !important;}
.bg-sa-ink-light{ background-color: $sa-ink-light !important;}
.bg-sa-purple-light{ background-color: $sa-purple-light !important;}
.bg-sa-plum-light{ background-color: $sa-plum-light !important;}
.bg-sa-red-light{ background-color: $sa-red-light !important;}

// Background Greys ======================
.bg-sa-grey-00{ background-color: $sa-grey-00 !important;}
.bg-sa-grey-01{ background-color: $sa-grey-01 !important;}
.bg-sa-grey-02{ background-color: $sa-grey-02 !important;}
.bg-sa-grey-03{ background-color: $sa-grey-03 !important;}
.bg-sa-grey-04{ background-color: $sa-grey-04 !important;}
.bg-sa-grey-05{ background-color: $sa-grey-05 !important;}
.bg-sa-grey-06{ background-color: $sa-grey-06 !important;}
.bg-sa-grey-07{ background-color: $sa-grey-07 !important;}
.bg-sa-grey-08{ background-color: $sa-grey-08 !important;}
.bg-sa-grey-09{ background-color: $sa-grey-09 !important;}
.bg-sa-grey-10{ background-color: $sa-grey-10 !important;}
.bg-sa-grey-11{ background-color: $sa-grey-11 !important;}
.bg-sa-grey-12{ background-color: $sa-grey-12 !important;}
.bg-sa-grey-13{ background-color: $sa-grey-13 !important;}
.bg-sa-grey-14{ background-color: $sa-grey-14 !important;}
.bg-sa-grey-15{ background-color: $sa-grey-15 !important;}
.bg-sa-grey-16{ background-color: $sa-grey-16 !important;}
.bg-sa-grey-17{ background-color: $sa-grey-17 !important;}
.bg-sa-grey-18{ background-color: $sa-grey-18 !important;}
.bg-sa-grey-19{ background-color: $sa-grey-19 !important;}

.bg-sa-success{ background-color: $sa-success !important;}
.bg-sa-info{ background-color: $sa-info !important;}
.bg-sa-warning{ background-color: $sa-warning !important;}
.bg-sa-danger{ background-color: $sa-danger !important;}
.bg-sa-alarm{ background-color: $sa-alert !important;}

// Trust Colours ================================
// Used on Colours page =========================
// Backgrounds
.bg-trust-primary{ background-color: $user-primary-colour !important;}
.bg-trust-primary-dark{ background-color: darken($user-primary-colour, 10%) !important;}
.bg-trust-primary-light{ background-color: lighten($user-primary-colour, 4%) !important;}

.bg-trust-secondary{ background-color: $user-secondary-colour !important;}
.bg-trust-secondary-dark{ background-color: darken($user-secondary-colour, 10%) !important;}
.bg-trust-secondary-light{ background-color: lighten($user-secondary-colour, 10%) !important;}

.bg-user{ background-color: $user-primary-colour !important;}
.bg-user-dark{ background-color: darken($user-primary-colour, 10%) !important;}
.bg-user-light{ background-color: lighten($user-primary-colour, 4%) !important;}

.bg-user-2{ background-color: $user-secondary-colour !important;}
.bg-user-2-dark{ background-color: darken($user-secondary-colour, 7%) !important;}
.bg-user-2-light{ background-color: lighten($user-secondary-colour, 10%) !important;}

.bg-admin{ background-color: $admin-primary-colour !important;}
.bg-admin-dark{ background-color: darken($admin-primary-colour, 10%) !important;}
.bg-admin-light{ background-color: lighten($admin-primary-colour, 12%) !important;}

.bg-admin-2{ background-color: $admin-secondary-colour !important;}
.bg-admin-2-dark{ background-color: darken($admin-secondary-colour, 10%) !important;}
.bg-admin-2-light{ background-color: lighten($admin-secondary-colour, 10%) !important;}

// Foregrounds
.text-trust{ color: $user-primary-colour !important;}
.text-trust-dark{ color: darken($user-primary-colour, 10%) !important;}
.text-trust-light{ color: lighten($user-primary-colour, 4%) !important;}

.text-trust-2{ color: $user-secondary-colour !important;}
.text-trust-2-dark{ color: darken($user-secondary-colour, 10%) !important;}
.text-trust-2-light{ color: lighten($user-secondary-colour, 10%) !important;}

.text-user{ color: $user-primary-colour !important;}
.text-user-dark{ color: darken($user-primary-colour, 10%) !important;}
.text-user-light{ color: lighten($user-primary-colour, 4%) !important;}

.text-user-2{ color: $user-secondary-colour !important;}
.text-user-2-dark{ color: darken($user-secondary-colour, 7%) !important;}
.text-user-2-light{ color: lighten($user-secondary-colour, 10%) !important;}

.text-admin{ color: $admin-primary-colour !important;}
.text-admin-dark{ color: darken($admin-primary-colour, 10%) !important;}
.text-admin-light{ color: lighten($admin-primary-colour, 12%) !important;}

.text-admin-2{ color: $admin-secondary-colour !important;}
.text-admin-2-dark{ color: darken($admin-secondary-colour, 10%) !important;}
.text-admin-2-light{ color: lighten($admin-secondary-colour, 10%) !important;}


// Bootstrap
// Bootstrap Vaiables override
// MUST come before Bootstrap Import

// Color system

$white:    #fff;
$gray-100: $sa-grey-02;
$gray-200: $sa-grey-04;
$gray-300: $sa-grey-06;
$gray-400: $sa-grey-08;
$gray-500: $sa-grey-10;
$gray-600: $sa-grey-12;
$gray-700: $sa-grey-14;
$gray-800: $sa-grey-16;
$gray-900: $sa-grey-18;
$black:    #000;

$grays: ();
// stylelint-disable-next-line scss/dollar-variable-default
$grays: map-merge(
  (
    "100": $gray-100,
    "200": $gray-200,
    "300": $gray-300,
    "400": $gray-400,
    "500": $gray-500,
    "600": $gray-600,
    "700": $gray-700,
    "800": $gray-800,
    "900": $gray-900
  ),
  $grays
);

$blue:    $sa-blue;
$indigo:  $sa-ink;
$purple:  $sa-purple;
$pink:    $sa-pink;
$red:     $sa-red;
$orange:  $sa-orange;
$yellow:  $sa-yellow;
$green:   $sa-green;
$teal:    $sa-teal;
$cyan:    $sa-turq;

$colors: ();
// stylelint-disable-next-line scss/dollar-variable-default
$colors: map-merge(
  (
    "blue":       $blue,
    "indigo":     $indigo,
    "purple":     $purple,
    "pink":       $pink,
    "red":        $red,
    "orange":     $orange,
    "yellow":     $yellow,
    "green":      $green,
    "teal":       $teal,
    "cyan":       $cyan,
    "white":      $white,
    "gray":       $gray-600,
    "gray-dark":  $gray-800
  ),
  $colors
);

$primary:       $user-primary-colour;
$secondary:     $user-secondary-colour;
$success:       $green;
$info:          $sa-info;
$warning:       $sa-yellow;
$danger:        $sa-red;
$light:         $sa-grey-02;
$dark:          $sa-grey-16;

$theme-colors: ();
// stylelint-disable-next-line scss/dollar-variable-default
$theme-colors: map-merge(
  (
    "primary":    $primary,
    "secondary":  $secondary,
    "success":    $success,
    "info":       $info,
    "warning":    $warning,
    "danger":     $danger,
    "light":      $light,
    "dark":       $dark
  ),
  $theme-colors
);

// ==================================================================

// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1590px // Added
);

// Originals
// $container-max-widths: (
//   sm: 540px,
//   md: 720px,
//   lg: 960px,
//   xl: 1140px,
//   xxl: 1560px // Added
// );
// Amended to allow for Side Tabs
$container-max-widths: (
  sm: 504px,
  md: 697px,
  lg: 920px,
  xl: 1128px,
  xxl: 1518px // Added
);

// Responsive Media Queries ---------------------
// See sa-variables



/* Small devices (landscape phones, 576px and up) */
$font-size-base:              0.9375rem; //  `15px`
// Reduced from 1rem - Assumes the browser default, typically `16px`


// Grid columns
$grid-gutter-width:           16px;

// Components
//
// Define common padding and border radius sizes and more.
$border-radius:               .375rem ;
$border-radius-lg:            .5rem ;
$border-radius-sm:            .2rem ;





// ==================================================================


// Typography
$font-family-base: 'Roboto', -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; 

$enable-responsive-font-sizes:                true;




$breadcrumb-divider: quote("|");


/*!
 * Bootstrap v4.3.1 (https://getbootstrap.com/)
 * Copyright 2011-2019 The Bootstrap Authors
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

// Bootstrap functions
//
// Utility mixins and functions for evaluating source code across our variables, maps, and mixins.

// Ascending
// Used to evaluate Sass maps like our grid breakpoints.
@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null or unit($num) == "%" {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

// Starts at zero
// Used to ensure the min-width of the lowest breakpoint starts at 0.
@mixin _assert-starts-at-zero($map, $map-name: "$grid-breakpoints") {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 0 {
    @warn "First breakpoint in #{$map-name} must start at 0, but starts at #{$first-value}.";
  }
}

// Replace `$search` with `$replace` in `$string`
// Used on our SVG icon backgrounds for custom forms.
//
// @author Hugo Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ('') - New value
// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// Color contrast
@function color-yiq($color, $dark: $yiq-text-dark, $light: $yiq-text-light) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);

  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;

  @if ($yiq >= $yiq-contrasted-threshold) {
    @return $dark;
  } @else {
    @return $light;
  }
}

// Retrieve color Sass maps
@function color($key: "blue") {
  @return map-get($colors, $key);
}

@function theme-color($key: "primary") {
  @return map-get($theme-colors, $key);
}

@function gray($key: "100") {
  @return map-get($grays, $key);
}

// Request a theme color level
@function theme-color-level($color-name: "primary", $level: 0) {
  $color: theme-color($color-name);
  $color-base: if($level > 0, $black, $white);
  $level: abs($level);

  @return mix($color-base, $color, $level * $theme-color-interval);
}

// Variables
//
// Variables should follow the `$component-state-property-size` formula for
// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.

// Color system

$white:    #fff !default;
$gray-100: #f8f9fa !default;
$gray-200: #e9ecef !default;
$gray-300: #dee2e6 !default;
$gray-400: #ced4da !default;
$gray-500: #adb5bd !default;
$gray-600: #6c757d !default;
$gray-700: #495057 !default;
$gray-800: #343a40 !default;
$gray-900: #212529 !default;
$black:    #000 !default;

$grays: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$grays: map-merge(
  (
    "100": $gray-100,
    "200": $gray-200,
    "300": $gray-300,
    "400": $gray-400,
    "500": $gray-500,
    "600": $gray-600,
    "700": $gray-700,
    "800": $gray-800,
    "900": $gray-900
  ),
  $grays
);

$blue:    #007bff !default;
$indigo:  #6610f2 !default;
$purple:  #6f42c1 !default;
$pink:    #e83e8c !default;
$red:     #dc3545 !default;
$orange:  #fd7e14 !default;
$yellow:  #ffc107 !default;
$green:   #28a745 !default;
$teal:    #20c997 !default;
$cyan:    #17a2b8 !default;

$colors: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$colors: map-merge(
  (
    "blue":       $blue,
    "indigo":     $indigo,
    "purple":     $purple,
    "pink":       $pink,
    "red":        $red,
    "orange":     $orange,
    "yellow":     $yellow,
    "green":      $green,
    "teal":       $teal,
    "cyan":       $cyan,
    "white":      $white,
    "gray":       $gray-600,
    "gray-dark":  $gray-800
  ),
  $colors
);

$primary:       $blue !default;
$secondary:     $gray-600 !default;
$success:       $green !default;
$info:          $cyan !default;
$warning:       $yellow !default;
$danger:        $red !default;
$light:         $gray-100 !default;
$dark:          $gray-800 !default;

$theme-colors: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$theme-colors: map-merge(
  (
    "primary":    $primary,
    "secondary":  $secondary,
    "success":    $success,
    "info":       $info,
    "warning":    $warning,
    "danger":     $danger,
    "light":      $light,
    "dark":       $dark
  ),
  $theme-colors
);

// Set a specific jump point for requesting color jumps
$theme-color-interval:      8% !default;

// The yiq lightness value that determines when the lightness of color changes from "dark" to "light". Acceptable values are between 0 and 255.
$yiq-contrasted-threshold:  150 !default;

// Customize the light and dark text colors for use in our YIQ color contrast function.
$yiq-text-dark:             $gray-900 !default;
$yiq-text-light:            $white !default;


// Options
//
// Quickly modify global styling by enabling or disabling optional features.

$enable-caret:                                true !default;
$enable-rounded:                              true !default;
$enable-shadows:                              false !default;
$enable-gradients:                            false !default;
$enable-transitions:                          true !default;
$enable-prefers-reduced-motion-media-query:   true !default;
$enable-hover-media-query:                    false !default; // Deprecated, no longer affects any compiled CSS
$enable-grid-classes:                         true !default;
$enable-pointer-cursor-for-buttons:           true !default;
$enable-print-styles:                         true !default;
$enable-responsive-font-sizes:                false !default;
$enable-validation-icons:                     true !default;
$enable-deprecation-messages:                 true !default;


// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

$spacer: 1rem !default;
$spacers: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$spacers: map-merge(
  (
    0: 0,
    1: ($spacer * .25),
    2: ($spacer * .5),
    3: $spacer,
    4: ($spacer * 1.5),
    5: ($spacer * 3)
  ),
  $spacers
);

// This variable affects the `.h-*` and `.w-*` classes.
$sizes: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$sizes: map-merge(
  (
    25: 25%,
    50: 50%,
    75: 75%,
    100: 100%,
    auto: auto
  ),
  $sizes
);


// Body
//
// Settings for the `<body>` element.

$body-bg:                   $white !default;
$body-color:                $gray-900 !default;


// Links
//
// Style anchor elements.

$link-color:                              theme-color("primary") !default;
$link-decoration:                         none !default;
$link-hover-color:                        darken($link-color, 15%) !default;
$link-hover-decoration:                   underline !default;
// Darken percentage for links with `.text-*` class (e.g. `.text-success`)
$emphasized-link-hover-darken-percentage: 15% !default;

// Paragraphs
//
// Style p element.

$paragraph-margin-bottom:   1rem !default;


// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
) !default;

@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints, "$grid-breakpoints");


// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px
) !default;

@include _assert-ascending($container-max-widths, "$container-max-widths");


// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-columns:                12 !default;
$grid-gutter-width:           30px !default;


// Components
//
// Define common padding and border radius sizes and more.

$line-height-lg:              1.5 !default;
$line-height-sm:              1.5 !default;

$border-width:                1px !default;
$border-color:                $gray-300 !default;

$border-radius:               .25rem !default;
$border-radius-lg:            .3rem !default;
$border-radius-sm:            .2rem !default;

$rounded-pill:                50rem !default;

$box-shadow-sm:               0 .125rem .25rem rgba($black, .075) !default;
$box-shadow:                  0 .5rem 1rem rgba($black, .15) !default;
$box-shadow-lg:               0 1rem 3rem rgba($black, .175) !default;

$component-active-color:      $white !default;
$component-active-bg:         theme-color("primary") !default;

$caret-width:                 .3em !default;
$caret-vertical-align:        $caret-width * .85 !default;
$caret-spacing:               $caret-width * .85 !default;

$transition-base:             all .2s ease-in-out !default;
$transition-fade:             opacity .15s linear !default;
$transition-collapse:         height .35s ease !default;

$embed-responsive-aspect-ratios: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$embed-responsive-aspect-ratios: join(
  (
    (21 9),
    (16 9),
    (4 3),
    (1 1),
  ),
  $embed-responsive-aspect-ratios
);

// Typography
//
// Font, line-height, and color for body text, headings, and more.

// stylelint-disable value-keyword-case
$font-family-sans-serif:      -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
$font-family-monospace:       SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !default;
$font-family-base:            $font-family-sans-serif !default;
// stylelint-enable value-keyword-case

$font-size-base:              1rem !default; // Assumes the browser default, typically `16px`
$font-size-lg:                $font-size-base * 1.25 !default;
$font-size-sm:                $font-size-base * .875 !default;

$font-weight-lighter:         lighter !default;
$font-weight-light:           300 !default;
$font-weight-normal:          400 !default;
$font-weight-bold:            700 !default;
$font-weight-bolder:          bolder !default;

$font-weight-base:            $font-weight-normal !default;
$line-height-base:            1.5 !default;

$h1-font-size:                $font-size-base * 2.5 !default;
$h2-font-size:                $font-size-base * 2 !default;
$h3-font-size:                $font-size-base * 1.75 !default;
$h4-font-size:                $font-size-base * 1.5 !default;
$h5-font-size:                $font-size-base * 1.25 !default;
$h6-font-size:                $font-size-base !default;

$headings-margin-bottom:      $spacer / 2 !default;
$headings-font-family:        null !default;
$headings-font-weight:        500 !default;
$headings-line-height:        1.2 !default;
$headings-color:              null !default;

$display1-size:               6rem !default;
$display2-size:               5.5rem !default;
$display3-size:               4.5rem !default;
$display4-size:               3.5rem !default;

$display1-weight:             300 !default;
$display2-weight:             300 !default;
$display3-weight:             300 !default;
$display4-weight:             300 !default;
$display-line-height:         $headings-line-height !default;

$lead-font-size:              $font-size-base * 1.25 !default;
$lead-font-weight:            300 !default;

$small-font-size:             80% !default;

$text-muted:                  $gray-600 !default;

$blockquote-small-color:      $gray-600 !default;
$blockquote-small-font-size:  $small-font-size !default;
$blockquote-font-size:        $font-size-base * 1.25 !default;

$hr-border-color:             rgba($black, .1) !default;
$hr-border-width:             $border-width !default;

$mark-padding:                .2em !default;

$dt-font-weight:              $font-weight-bold !default;

$kbd-box-shadow:              inset 0 -.1rem 0 rgba($black, .25) !default;
$nested-kbd-font-weight:      $font-weight-bold !default;

$list-inline-padding:         .5rem !default;

$mark-bg:                     #fcf8e3 !default;

$hr-margin-y:                 $spacer !default;


// Tables
//
// Customizes the `.table` component with basic values, each used across all table variations.

$table-cell-padding:          .75rem !default;
$table-cell-padding-sm:       .3rem !default;

$table-color:                 $body-color !default;
$table-bg:                    null !default;
$table-accent-bg:             rgba($black, .05) !default;
$table-hover-color:           $table-color !default;
$table-hover-bg:              rgba($black, .075) !default;
$table-active-bg:             $table-hover-bg !default;

$table-border-width:          $border-width !default;
$table-border-color:          $border-color !default;

$table-head-bg:               $gray-200 !default;
$table-head-color:            $gray-700 !default;

$table-dark-color:            $white !default;
$table-dark-bg:               $gray-800 !default;
$table-dark-accent-bg:        rgba($white, .05) !default;
$table-dark-hover-color:      $table-dark-color !default;
$table-dark-hover-bg:         rgba($white, .075) !default;
$table-dark-border-color:     lighten($table-dark-bg, 7.5%) !default;
$table-dark-color:            $white !default;

$table-striped-order:         odd !default;

$table-caption-color:         $text-muted !default;

$table-bg-level:              -9 !default;
$table-border-level:          -6 !default;


// Buttons + Forms
//
// Shared variables that are reassigned to `$input-` and `$btn-` specific variables.

$input-btn-padding-y:         .375rem !default;
$input-btn-padding-x:         .75rem !default;
$input-btn-font-family:       null !default;
$input-btn-font-size:         $font-size-base !default;
$input-btn-line-height:       $line-height-base !default;

$input-btn-focus-width:       .2rem !default;
$input-btn-focus-color:       rgba($component-active-bg, .25) !default;
$input-btn-focus-box-shadow:  0 0 0 $input-btn-focus-width $input-btn-focus-color !default;

$input-btn-padding-y-sm:      .25rem !default;
$input-btn-padding-x-sm:      .5rem !default;
$input-btn-font-size-sm:      $font-size-sm !default;
$input-btn-line-height-sm:    $line-height-sm !default;

$input-btn-padding-y-lg:      .5rem !default;
$input-btn-padding-x-lg:      1rem !default;
$input-btn-font-size-lg:      $font-size-lg !default;
$input-btn-line-height-lg:    $line-height-lg !default;

$input-btn-border-width:      $border-width !default;


// Buttons
//
// For each of Bootstrap's buttons, define text, background, and border color.

$btn-padding-y:               $input-btn-padding-y !default;
$btn-padding-x:               $input-btn-padding-x !default;
$btn-font-family:             $input-btn-font-family !default;
$btn-font-size:               $input-btn-font-size !default;
$btn-line-height:             $input-btn-line-height !default;

$btn-padding-y-sm:            $input-btn-padding-y-sm !default;
$btn-padding-x-sm:            $input-btn-padding-x-sm !default;
$btn-font-size-sm:            $input-btn-font-size-sm !default;
$btn-line-height-sm:          $input-btn-line-height-sm !default;

$btn-padding-y-lg:            $input-btn-padding-y-lg !default;
$btn-padding-x-lg:            $input-btn-padding-x-lg !default;
$btn-font-size-lg:            $input-btn-font-size-lg !default;
$btn-line-height-lg:          $input-btn-line-height-lg !default;

$btn-border-width:            $input-btn-border-width !default;

$btn-font-weight:             $font-weight-normal !default;
$btn-box-shadow:              inset 0 1px 0 rgba($white, .15), 0 1px 1px rgba($black, .075) !default;
$btn-focus-width:             $input-btn-focus-width !default;
$btn-focus-box-shadow:        $input-btn-focus-box-shadow !default;
$btn-disabled-opacity:        .65 !default;
$btn-active-box-shadow:       inset 0 3px 5px rgba($black, .125) !default;

$btn-link-disabled-color:     $gray-600 !default;

$btn-block-spacing-y:         .5rem !default;

// Allows for customizing button radius independently from global border radius
$btn-border-radius:           $border-radius !default;
$btn-border-radius-lg:        $border-radius-lg !default;
$btn-border-radius-sm:        $border-radius-sm !default;

$btn-transition:              color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;


// Forms

$label-margin-bottom:                   .5rem !default;

$input-padding-y:                       $input-btn-padding-y !default;
$input-padding-x:                       $input-btn-padding-x !default;
$input-font-family:                     $input-btn-font-family !default;
$input-font-size:                       $input-btn-font-size !default;
$input-font-weight:                     $font-weight-base !default;
$input-line-height:                     $input-btn-line-height !default;

$input-padding-y-sm:                    $input-btn-padding-y-sm !default;
$input-padding-x-sm:                    $input-btn-padding-x-sm !default;
$input-font-size-sm:                    $input-btn-font-size-sm !default;
$input-line-height-sm:                  $input-btn-line-height-sm !default;

$input-padding-y-lg:                    $input-btn-padding-y-lg !default;
$input-padding-x-lg:                    $input-btn-padding-x-lg !default;
$input-font-size-lg:                    $input-btn-font-size-lg !default;
$input-line-height-lg:                  $input-btn-line-height-lg !default;

$input-bg:                              $white !default;
$input-disabled-bg:                     $gray-200 !default;

$input-color:                           $gray-700 !default;
$input-border-color:                    $gray-400 !default;
$input-border-width:                    $input-btn-border-width !default;
$input-box-shadow:                      inset 0 1px 1px rgba($black, .075) !default;

$input-border-radius:                   $border-radius !default;
$input-border-radius-lg:                $border-radius-lg !default;
$input-border-radius-sm:                $border-radius-sm !default;

$input-focus-bg:                        $input-bg !default;
$input-focus-border-color:              lighten($component-active-bg, 25%) !default;
$input-focus-color:                     $input-color !default;
$input-focus-width:                     $input-btn-focus-width !default;
$input-focus-box-shadow:                $input-btn-focus-box-shadow !default;

$input-placeholder-color:               $gray-600 !default;
$input-plaintext-color:                 $body-color !default;

$input-height-border:                   $input-border-width * 2 !default;

$input-height-inner:                    calc(#{$input-line-height * 1em} + #{$input-padding-y * 2}) !default;
$input-height-inner-half:               calc(#{$input-line-height * .5em} + #{$input-padding-y}) !default;
$input-height-inner-quarter:            calc(#{$input-line-height * .25em} + #{$input-padding-y / 2}) !default;

$input-height:                          calc(#{$input-line-height * 1em} + #{$input-padding-y * 2} + #{$input-height-border}) !default;
$input-height-sm:                       calc(#{$input-line-height-sm * 1em} + #{$input-btn-padding-y-sm * 2} + #{$input-height-border}) !default;
$input-height-lg:                       calc(#{$input-line-height-lg * 1em} + #{$input-btn-padding-y-lg * 2} + #{$input-height-border}) !default;

$input-transition:                      border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;

$form-text-margin-top:                  .25rem !default;

$form-check-input-gutter:               1.25rem !default;
$form-check-input-margin-y:             .3rem !default;
$form-check-input-margin-x:             .25rem !default;

$form-check-inline-margin-x:            .75rem !default;
$form-check-inline-input-margin-x:      .3125rem !default;

$form-grid-gutter-width:                10px !default;
$form-group-margin-bottom:              1rem !default;

$input-group-addon-color:               $input-color !default;
$input-group-addon-bg:                  $gray-200 !default;
$input-group-addon-border-color:        $input-border-color !default;

$custom-forms-transition:               background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;

$custom-control-gutter:                 .5rem !default;
$custom-control-spacer-x:               1rem !default;

$custom-control-indicator-size:         1rem !default;
$custom-control-indicator-bg:           $input-bg !default;

$custom-control-indicator-bg-size:      50% 50% !default;
$custom-control-indicator-box-shadow:   $input-box-shadow !default;
$custom-control-indicator-border-color: $gray-500 !default;
$custom-control-indicator-border-width: $input-border-width !default;

$custom-control-indicator-disabled-bg:          $input-disabled-bg !default;
$custom-control-label-disabled-color:           $gray-600 !default;

$custom-control-indicator-checked-color:        $component-active-color !default;
$custom-control-indicator-checked-bg:           $component-active-bg !default;
$custom-control-indicator-checked-disabled-bg:  rgba(theme-color("primary"), .5) !default;
$custom-control-indicator-checked-box-shadow:   none !default;
$custom-control-indicator-checked-border-color: $custom-control-indicator-checked-bg !default;

$custom-control-indicator-focus-box-shadow:     $input-focus-box-shadow !default;
$custom-control-indicator-focus-border-color:   $input-focus-border-color !default;

$custom-control-indicator-active-color:         $component-active-color !default;
$custom-control-indicator-active-bg:            lighten($component-active-bg, 35%) !default;
$custom-control-indicator-active-box-shadow:    none !default;
$custom-control-indicator-active-border-color:  $custom-control-indicator-active-bg !default;

$custom-checkbox-indicator-border-radius:       $border-radius !default;
$custom-checkbox-indicator-icon-checked:        str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='#{$custom-control-indicator-checked-color}' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3e%3c/svg%3e"), "#", "%23") !default;

$custom-checkbox-indicator-indeterminate-bg:           $component-active-bg !default;
$custom-checkbox-indicator-indeterminate-color:        $custom-control-indicator-checked-color !default;
$custom-checkbox-indicator-icon-indeterminate:         str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3e%3cpath stroke='#{$custom-checkbox-indicator-indeterminate-color}' d='M0 2h4'/%3e%3c/svg%3e"), "#", "%23") !default;
$custom-checkbox-indicator-indeterminate-box-shadow:   none !default;
$custom-checkbox-indicator-indeterminate-border-color: $custom-checkbox-indicator-indeterminate-bg !default;

$custom-radio-indicator-border-radius:          50% !default;
$custom-radio-indicator-icon-checked:           str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='#{$custom-control-indicator-checked-color}'/%3e%3c/svg%3e"), "#", "%23") !default;

$custom-switch-width:                           $custom-control-indicator-size * 1.75 !default;
$custom-switch-indicator-border-radius:         $custom-control-indicator-size / 2 !default;
$custom-switch-indicator-size:                  calc(#{$custom-control-indicator-size} - #{$custom-control-indicator-border-width * 4}) !default;

$custom-select-padding-y:           $input-padding-y !default;
$custom-select-padding-x:           $input-padding-x !default;
$custom-select-font-family:         $input-font-family !default;
$custom-select-font-size:           $input-font-size !default;
$custom-select-height:              $input-height !default;
$custom-select-indicator-padding:   1rem !default; // Extra padding to account for the presence of the background-image based indicator
$custom-select-font-weight:         $input-font-weight !default;
$custom-select-line-height:         $input-line-height !default;
$custom-select-color:               $input-color !default;
$custom-select-disabled-color:      $gray-600 !default;
$custom-select-bg:                  $input-bg !default;
$custom-select-disabled-bg:         $gray-200 !default;
$custom-select-bg-size:             8px 10px !default; // In pixels because image dimensions
$custom-select-indicator-color:     $gray-800 !default;
$custom-select-indicator:           str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='#{$custom-select-indicator-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e"), "#", "%23") !default;
$custom-select-background:          $custom-select-indicator no-repeat right $custom-select-padding-x center / $custom-select-bg-size !default; // Used so we can have multiple background elements (e.g., arrow and feedback icon)

$custom-select-feedback-icon-padding-right: calc((1em + #{2 * $custom-select-padding-y}) * 3 / 4 + #{$custom-select-padding-x + $custom-select-indicator-padding}) !default;
$custom-select-feedback-icon-position:      center right ($custom-select-padding-x + $custom-select-indicator-padding) !default;
$custom-select-feedback-icon-size:          $input-height-inner-half $input-height-inner-half !default;

$custom-select-border-width:        $input-border-width !default;
$custom-select-border-color:        $input-border-color !default;
$custom-select-border-radius:       $border-radius !default;
$custom-select-box-shadow:          inset 0 1px 2px rgba($black, .075) !default;

$custom-select-focus-border-color:  $input-focus-border-color !default;
$custom-select-focus-width:         $input-focus-width !default;
$custom-select-focus-box-shadow:    0 0 0 $custom-select-focus-width $input-btn-focus-color !default;

$custom-select-padding-y-sm:        $input-padding-y-sm !default;
$custom-select-padding-x-sm:        $input-padding-x-sm !default;
$custom-select-font-size-sm:        $input-font-size-sm !default;
$custom-select-height-sm:           $input-height-sm !default;

$custom-select-padding-y-lg:        $input-padding-y-lg !default;
$custom-select-padding-x-lg:        $input-padding-x-lg !default;
$custom-select-font-size-lg:        $input-font-size-lg !default;
$custom-select-height-lg:           $input-height-lg !default;

$custom-range-track-width:          100% !default;
$custom-range-track-height:         .5rem !default;
$custom-range-track-cursor:         pointer !default;
$custom-range-track-bg:             $gray-300 !default;
$custom-range-track-border-radius:  1rem !default;
$custom-range-track-box-shadow:     inset 0 .25rem .25rem rgba($black, .1) !default;

$custom-range-thumb-width:                   1rem !default;
$custom-range-thumb-height:                  $custom-range-thumb-width !default;
$custom-range-thumb-bg:                      $component-active-bg !default;
$custom-range-thumb-border:                  0 !default;
$custom-range-thumb-border-radius:           1rem !default;
$custom-range-thumb-box-shadow:              0 .1rem .25rem rgba($black, .1) !default;
$custom-range-thumb-focus-box-shadow:        0 0 0 1px $body-bg, $input-focus-box-shadow !default;
$custom-range-thumb-focus-box-shadow-width:  $input-focus-width !default; // For focus box shadow issue in IE/Edge
$custom-range-thumb-active-bg:               lighten($component-active-bg, 35%) !default;
$custom-range-thumb-disabled-bg:             $gray-500 !default;

$custom-file-height:                $input-height !default;
$custom-file-height-inner:          $input-height-inner !default;
$custom-file-focus-border-color:    $input-focus-border-color !default;
$custom-file-focus-box-shadow:      $input-focus-box-shadow !default;
$custom-file-disabled-bg:           $input-disabled-bg !default;

$custom-file-padding-y:             $input-padding-y !default;
$custom-file-padding-x:             $input-padding-x !default;
$custom-file-line-height:           $input-line-height !default;
$custom-file-font-family:           $input-font-family !default;
$custom-file-font-weight:           $input-font-weight !default;
$custom-file-color:                 $input-color !default;
$custom-file-bg:                    $input-bg !default;
$custom-file-border-width:          $input-border-width !default;
$custom-file-border-color:          $input-border-color !default;
$custom-file-border-radius:         $input-border-radius !default;
$custom-file-box-shadow:            $input-box-shadow !default;
$custom-file-button-color:          $custom-file-color !default;
$custom-file-button-bg:             $input-group-addon-bg !default;
$custom-file-text: (
  en: "Browse"
) !default;


// Form validation

$form-feedback-margin-top:          $form-text-margin-top !default;
$form-feedback-font-size:           $small-font-size !default;
$form-feedback-valid-color:         theme-color("success") !default;
$form-feedback-invalid-color:       theme-color("danger") !default;

$form-feedback-icon-valid-color:    $form-feedback-valid-color !default;
$form-feedback-icon-valid:          str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='#{$form-feedback-icon-valid-color}' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e"), "#", "%23") !default;
$form-feedback-icon-invalid-color:  $form-feedback-invalid-color !default;
$form-feedback-icon-invalid:        str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='#{$form-feedback-icon-invalid-color}' viewBox='-2 -2 7 7'%3e%3cpath stroke='#{$form-feedback-icon-invalid-color}' d='M0 0l3 3m0-3L0 3'/%3e%3ccircle r='.5'/%3e%3ccircle cx='3' r='.5'/%3e%3ccircle cy='3' r='.5'/%3e%3ccircle cx='3' cy='3' r='.5'/%3e%3c/svg%3E"), "#", "%23") !default;

$form-validation-states: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$form-validation-states: map-merge(
  (
    "valid": (
      "color": $form-feedback-valid-color,
      "icon": $form-feedback-icon-valid
    ),
    "invalid": (
      "color": $form-feedback-invalid-color,
      "icon": $form-feedback-icon-invalid
    ),
  ),
  $form-validation-states
);

// Z-index master list
//
// Warning: Avoid customizing these values. They're used for a bird's eye view
// of components dependent on the z-axis and are designed to all work together.

$zindex-dropdown:                   1000 !default;
$zindex-sticky:                     1020 !default;
$zindex-fixed:                      1030 !default;
$zindex-modal-backdrop:             1040 !default;
$zindex-modal:                      1050 !default;
$zindex-popover:                    1060 !default;
$zindex-tooltip:                    1070 !default;


// Navs

$nav-link-padding-y:                .5rem !default;
$nav-link-padding-x:                1rem !default;
$nav-link-disabled-color:           $gray-600 !default;

$nav-tabs-border-color:             $gray-300 !default;
$nav-tabs-border-width:             $border-width !default;
$nav-tabs-border-radius:            $border-radius !default;
$nav-tabs-link-hover-border-color:  $gray-200 $gray-200 $nav-tabs-border-color !default;
$nav-tabs-link-active-color:        $gray-700 !default;
$nav-tabs-link-active-bg:           $body-bg !default;
$nav-tabs-link-active-border-color: $gray-300 $gray-300 $nav-tabs-link-active-bg !default;

$nav-pills-border-radius:           $border-radius !default;
$nav-pills-link-active-color:       $component-active-color !default;
$nav-pills-link-active-bg:          $component-active-bg !default;

$nav-divider-color:                 $gray-200 !default;
$nav-divider-margin-y:              $spacer / 2 !default;


// Navbar

$navbar-padding-y:                  $spacer / 2 !default;
$navbar-padding-x:                  $spacer !default;

$navbar-nav-link-padding-x:         .5rem !default;

$navbar-brand-font-size:            $font-size-lg !default;
// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link
$nav-link-height:                   $font-size-base * $line-height-base + $nav-link-padding-y * 2 !default;
$navbar-brand-height:               $navbar-brand-font-size * $line-height-base !default;
$navbar-brand-padding-y:            ($nav-link-height - $navbar-brand-height) / 2 !default;

$navbar-toggler-padding-y:          .25rem !default;
$navbar-toggler-padding-x:          .75rem !default;
$navbar-toggler-font-size:          $font-size-lg !default;
$navbar-toggler-border-radius:      $btn-border-radius !default;

$navbar-dark-color:                 rgba($white, .5) !default;
$navbar-dark-hover-color:           rgba($white, .75) !default;
$navbar-dark-active-color:          $white !default;
$navbar-dark-disabled-color:        rgba($white, .25) !default;
$navbar-dark-toggler-icon-bg:       str-replace(url("data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='#{$navbar-dark-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e"), "#", "%23") !default;
$navbar-dark-toggler-border-color:  rgba($white, .1) !default;

$navbar-light-color:                rgba($black, .5) !default;
$navbar-light-hover-color:          rgba($black, .7) !default;
$navbar-light-active-color:         rgba($black, .9) !default;
$navbar-light-disabled-color:       rgba($black, .3) !default;
$navbar-light-toggler-icon-bg:      str-replace(url("data:image/svg+xml,%3csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3e%3cpath stroke='#{$navbar-light-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e"), "#", "%23") !default;
$navbar-light-toggler-border-color: rgba($black, .1) !default;

$navbar-light-brand-color:                $navbar-light-active-color !default;
$navbar-light-brand-hover-color:          $navbar-light-active-color !default;
$navbar-dark-brand-color:                 $navbar-dark-active-color !default;
$navbar-dark-brand-hover-color:           $navbar-dark-active-color !default;


// Dropdowns
//
// Dropdown menu container and contents.

$dropdown-min-width:                10rem !default;
$dropdown-padding-y:                .5rem !default;
$dropdown-spacer:                   .125rem !default;
$dropdown-font-size:                $font-size-base !default;
$dropdown-color:                    $body-color !default;
$dropdown-bg:                       $white !default;
$dropdown-border-color:             rgba($black, .15) !default;
$dropdown-border-radius:            $border-radius !default;
$dropdown-border-width:             $border-width !default;
$dropdown-inner-border-radius:      calc(#{$dropdown-border-radius} - #{$dropdown-border-width}) !default;
$dropdown-divider-bg:               $gray-200 !default;
$dropdown-divider-margin-y:         $nav-divider-margin-y !default;
$dropdown-box-shadow:               0 .5rem 1rem rgba($black, .175) !default;

$dropdown-link-color:               $gray-900 !default;
$dropdown-link-hover-color:         darken($gray-900, 5%) !default;
$dropdown-link-hover-bg:            $gray-100 !default;

$dropdown-link-active-color:        $component-active-color !default;
$dropdown-link-active-bg:           $component-active-bg !default;

$dropdown-link-disabled-color:      $gray-600 !default;

$dropdown-item-padding-y:           .25rem !default;
$dropdown-item-padding-x:           1.5rem !default;

$dropdown-header-color:             $gray-600 !default;


// Pagination

$pagination-padding-y:              .5rem !default;
$pagination-padding-x:              .75rem !default;
$pagination-padding-y-sm:           .25rem !default;
$pagination-padding-x-sm:           .5rem !default;
$pagination-padding-y-lg:           .75rem !default;
$pagination-padding-x-lg:           1.5rem !default;
$pagination-line-height:            1.25 !default;

$pagination-color:                  $link-color !default;
$pagination-bg:                     $white !default;
$pagination-border-width:           $border-width !default;
$pagination-border-color:           $gray-300 !default;

$pagination-focus-box-shadow:       $input-btn-focus-box-shadow !default;
$pagination-focus-outline:          0 !default;

$pagination-hover-color:            $link-hover-color !default;
$pagination-hover-bg:               $gray-200 !default;
$pagination-hover-border-color:     $gray-300 !default;

$pagination-active-color:           $component-active-color !default;
$pagination-active-bg:              $component-active-bg !default;
$pagination-active-border-color:    $pagination-active-bg !default;

$pagination-disabled-color:         $gray-600 !default;
$pagination-disabled-bg:            $white !default;
$pagination-disabled-border-color:  $gray-300 !default;


// Jumbotron

$jumbotron-padding:                 2rem !default;
$jumbotron-color:                   null !default;
$jumbotron-bg:                      $gray-200 !default;


// Cards

$card-spacer-y:                     .75rem !default;
$card-spacer-x:                     1.25rem !default;
$card-border-width:                 $border-width !default;
$card-border-radius:                $border-radius !default;
$card-border-color:                 rgba($black, .125) !default;
$card-inner-border-radius:          calc(#{$card-border-radius} - #{$card-border-width}) !default;
$card-cap-bg:                       rgba($black, .03) !default;
$card-cap-color:                    null !default;
$card-color:                        null !default;
$card-bg:                           $white !default;

$card-img-overlay-padding:          1.25rem !default;

$card-group-margin:                 $grid-gutter-width / 2 !default;
$card-deck-margin:                  $card-group-margin !default;

$card-columns-count:                3 !default;
$card-columns-gap:                  1.25rem !default;
$card-columns-margin:               $card-spacer-y !default;


// Tooltips

$tooltip-font-size:                 $font-size-sm !default;
$tooltip-max-width:                 200px !default;
$tooltip-color:                     $white !default;
$tooltip-bg:                        $black !default;
$tooltip-border-radius:             $border-radius !default;
$tooltip-opacity:                   .9 !default;
$tooltip-padding-y:                 .25rem !default;
$tooltip-padding-x:                 .5rem !default;
$tooltip-margin:                    0 !default;

$tooltip-arrow-width:               .8rem !default;
$tooltip-arrow-height:              .4rem !default;
$tooltip-arrow-color:               $tooltip-bg !default;

// Form tooltips must come after regular tooltips
$form-feedback-tooltip-padding-y:     $tooltip-padding-y !default;
$form-feedback-tooltip-padding-x:     $tooltip-padding-x !default;
$form-feedback-tooltip-font-size:     $tooltip-font-size !default;
$form-feedback-tooltip-line-height:   $line-height-base !default;
$form-feedback-tooltip-opacity:       $tooltip-opacity !default;
$form-feedback-tooltip-border-radius: $tooltip-border-radius !default;


// Popovers

$popover-font-size:                 $font-size-sm !default;
$popover-bg:                        $white !default;
$popover-max-width:                 276px !default;
$popover-border-width:              $border-width !default;
$popover-border-color:              rgba($black, .2) !default;
$popover-border-radius:             $border-radius-lg !default;
$popover-box-shadow:                0 .25rem .5rem rgba($black, .2) !default;

$popover-header-bg:                 darken($popover-bg, 3%) !default;
$popover-header-color:              $headings-color !default;
$popover-header-padding-y:          .5rem !default;
$popover-header-padding-x:          .75rem !default;

$popover-body-color:                $body-color !default;
$popover-body-padding-y:            $popover-header-padding-y !default;
$popover-body-padding-x:            $popover-header-padding-x !default;

$popover-arrow-width:               1rem !default;
$popover-arrow-height:              .5rem !default;
$popover-arrow-color:               $popover-bg !default;

$popover-arrow-outer-color:         fade-in($popover-border-color, .05) !default;


// Toasts

$toast-max-width:                   350px !default;
$toast-padding-x:                   .75rem !default;
$toast-padding-y:                   .25rem !default;
$toast-font-size:                   .875rem !default;
$toast-color:                       null !default;
$toast-background-color:            rgba($white, .85) !default;
$toast-border-width:                1px !default;
$toast-border-color:                rgba(0, 0, 0, .1) !default;
$toast-border-radius:               .25rem !default;
$toast-box-shadow:                  0 .25rem .75rem rgba($black, .1) !default;

$toast-header-color:                $gray-600 !default;
$toast-header-background-color:     rgba($white, .85) !default;
$toast-header-border-color:         rgba(0, 0, 0, .05) !default;


// Badges

$badge-font-size:                   75% !default;
$badge-font-weight:                 $font-weight-bold !default;
$badge-padding-y:                   .25em !default;
$badge-padding-x:                   .4em !default;
$badge-border-radius:               $border-radius !default;

$badge-transition:                  $btn-transition !default;
$badge-focus-width:                 $input-btn-focus-width !default;

$badge-pill-padding-x:              .6em !default;
// Use a higher than normal value to ensure completely rounded edges when
// customizing padding or font-size on labels.
$badge-pill-border-radius:          10rem !default;


// Modals

// Padding applied to the modal body
$modal-inner-padding:               1rem !default;

$modal-dialog-margin:               .5rem !default;
$modal-dialog-margin-y-sm-up:       1.75rem !default;

$modal-title-line-height:           $line-height-base !default;

$modal-content-color:               null !default;
$modal-content-bg:                  $white !default;
$modal-content-border-color:        rgba($black, .2) !default;
$modal-content-border-width:        $border-width !default;
$modal-content-border-radius:       $border-radius-lg !default;
$modal-content-box-shadow-xs:       0 .25rem .5rem rgba($black, .5) !default;
$modal-content-box-shadow-sm-up:    0 .5rem 1rem rgba($black, .5) !default;

$modal-backdrop-bg:                 $black !default;
$modal-backdrop-opacity:            .5 !default;
$modal-header-border-color:         $border-color !default;
$modal-footer-border-color:         $modal-header-border-color !default;
$modal-header-border-width:         $modal-content-border-width !default;
$modal-footer-border-width:         $modal-header-border-width !default;
$modal-header-padding-y:            1rem !default;
$modal-header-padding-x:            1rem !default;
$modal-header-padding:              $modal-header-padding-y $modal-header-padding-x !default; // Keep this for backwards compatibility

$modal-xl:                          1140px !default;
$modal-lg:                          800px !default;
$modal-md:                          500px !default;
$modal-sm:                          300px !default;

$modal-fade-transform:              translate(0, -50px) !default;
$modal-show-transform:              none !default;
$modal-transition:                  transform .3s ease-out !default;


// Alerts
//
// Define alert colors, border radius, and padding.

$alert-padding-y:                   .75rem !default;
$alert-padding-x:                   1.25rem !default;
$alert-margin-bottom:               1rem !default;
$alert-border-radius:               $border-radius !default;
$alert-link-font-weight:            $font-weight-bold !default;
$alert-border-width:                $border-width !default;

$alert-bg-level:                    -10 !default;
$alert-border-level:                -9 !default;
$alert-color-level:                 6 !default;


// Progress bars

$progress-height:                   1rem !default;
$progress-font-size:                $font-size-base * .75 !default;
$progress-bg:                       $gray-200 !default;
$progress-border-radius:            $border-radius !default;
$progress-box-shadow:               inset 0 .1rem .1rem rgba($black, .1) !default;
$progress-bar-color:                $white !default;
$progress-bar-bg:                   theme-color("primary") !default;
$progress-bar-animation-timing:     1s linear infinite !default;
$progress-bar-transition:           width .6s ease !default;


// List group

$list-group-color:                  null !default;
$list-group-bg:                     $white !default;
$list-group-border-color:           rgba($black, .125) !default;
$list-group-border-width:           $border-width !default;
$list-group-border-radius:          $border-radius !default;

$list-group-item-padding-y:         .75rem !default;
$list-group-item-padding-x:         1.25rem !default;

$list-group-hover-bg:               $gray-100 !default;
$list-group-active-color:           $component-active-color !default;
$list-group-active-bg:              $component-active-bg !default;
$list-group-active-border-color:    $list-group-active-bg !default;

$list-group-disabled-color:         $gray-600 !default;
$list-group-disabled-bg:            $list-group-bg !default;

$list-group-action-color:           $gray-700 !default;
$list-group-action-hover-color:     $list-group-action-color !default;

$list-group-action-active-color:    $body-color !default;
$list-group-action-active-bg:       $gray-200 !default;


// Image thumbnails

$thumbnail-padding:                 .25rem !default;
$thumbnail-bg:                      $body-bg !default;
$thumbnail-border-width:            $border-width !default;
$thumbnail-border-color:            $gray-300 !default;
$thumbnail-border-radius:           $border-radius !default;
$thumbnail-box-shadow:              0 1px 2px rgba($black, .075) !default;


// Figures

$figure-caption-font-size:          90% !default;
$figure-caption-color:              $gray-600 !default;


// Breadcrumbs

$breadcrumb-padding-y:              .75rem !default;
$breadcrumb-padding-x:              1rem !default;
$breadcrumb-item-padding:           .5rem !default;

$breadcrumb-margin-bottom:          1rem !default;

$breadcrumb-bg:                     $gray-200 !default;
$breadcrumb-divider-color:          $gray-600 !default;
$breadcrumb-active-color:           $gray-600 !default;
$breadcrumb-divider:                quote("/") !default;

$breadcrumb-border-radius:          $border-radius !default;


// Carousel

$carousel-control-color:             $white !default;
$carousel-control-width:             15% !default;
$carousel-control-opacity:           .5 !default;
$carousel-control-hover-opacity:     .9 !default;
$carousel-control-transition:        opacity .15s ease !default;

$carousel-indicator-width:           30px !default;
$carousel-indicator-height:          3px !default;
$carousel-indicator-hit-area-height: 10px !default;
$carousel-indicator-spacer:          3px !default;
$carousel-indicator-active-bg:       $white !default;
$carousel-indicator-transition:      opacity .6s ease !default;

$carousel-caption-width:             70% !default;
$carousel-caption-color:             $white !default;

$carousel-control-icon-width:        20px !default;

$carousel-control-prev-icon-bg:      str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3e%3c/svg%3e"), "#", "%23") !default;
$carousel-control-next-icon-bg:      str-replace(url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3e%3c/svg%3e"), "#", "%23") !default;

$carousel-transition-duration:       .6s !default;
$carousel-transition:                transform $carousel-transition-duration ease-in-out !default; // Define transform transition first if using multiple transitions (e.g., `transform 2s ease, opacity .5s ease-out`)


// Spinners

$spinner-width:         2rem !default;
$spinner-height:        $spinner-width !default;
$spinner-border-width:  .25em !default;

$spinner-width-sm:        1rem !default;
$spinner-height-sm:       $spinner-width-sm !default;
$spinner-border-width-sm: .2em !default;


// Close

$close-font-size:                   $font-size-base * 1.5 !default;
$close-font-weight:                 $font-weight-bold !default;
$close-color:                       $black !default;
$close-text-shadow:                 0 1px 0 $white !default;


// Code

$code-font-size:                    87.5% !default;
$code-color:                        $pink !default;

$kbd-padding-y:                     .2rem !default;
$kbd-padding-x:                     .4rem !default;
$kbd-font-size:                     $code-font-size !default;
$kbd-color:                         $white !default;
$kbd-bg:                            $gray-900 !default;

$pre-color:                         $gray-900 !default;
$pre-scrollable-max-height:         340px !default;


// Utilities

$displays: none, inline, inline-block, block, table, table-row, table-cell, flex, inline-flex !default;
$overflows: auto, hidden !default;
$positions: static, relative, absolute, fixed, sticky !default;


// Printing

$print-page-size:                   a3 !default;
$print-body-min-width:              map-get($grid-breakpoints, "lg") !default;

// Toggles
//
// Used in conjunction with global variables to enable certain theme features.

// Vendor
// stylelint-disable property-blacklist, scss/dollar-variable-default

// SCSS RFS mixin
//
// Automated font-resizing
//
// See https://github.com/twbs/rfs

// Configuration

// Base font size
$rfs-base-font-size: 1.25rem !default;
$rfs-font-size-unit: rem !default;

// Breakpoint at where font-size starts decreasing if screen width is smaller
$rfs-breakpoint: 1200px !default;
$rfs-breakpoint-unit: px !default;

// Resize font-size based on screen height and width
$rfs-two-dimensional: false !default;

// Factor of decrease
$rfs-factor: 10 !default;

@if type-of($rfs-factor) != "number" or $rfs-factor <= 1 {
  @error "`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.";
}

// Generate enable or disable classes. Possibilities: false, "enable" or "disable"
$rfs-class: false !default;

// 1 rem = $rfs-rem-value px
$rfs-rem-value: 16 !default;

// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14
$rfs-safari-iframe-resize-bug-fix: false !default;

// Disable RFS by setting $enable-responsive-font-sizes to false
$enable-responsive-font-sizes: true !default;

// Cache $rfs-base-font-size unit
$rfs-base-font-size-unit: unit($rfs-base-font-size);

// Remove px-unit from $rfs-base-font-size for calculations
@if $rfs-base-font-size-unit == "px" {
  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);
}
@else if $rfs-base-font-size-unit == "rem" {
  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);
}

// Cache $rfs-breakpoint unit to prevent multiple calls
$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);

// Remove unit from $rfs-breakpoint for calculations
@if $rfs-breakpoint-unit-cache == "px" {
  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);
}
@else if $rfs-breakpoint-unit-cache == "rem" or $rfs-breakpoint-unit-cache == "em" {
  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);
}

// Responsive font-size mixin
@mixin rfs($fs, $important: false) {
  // Cache $fs unit
  $fs-unit: if(type-of($fs) == "number", unit($fs), false);

  // Add !important suffix if needed
  $rfs-suffix: if($important, " !important", "");

  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value
  @if not $fs-unit or $fs-unit != "" and $fs-unit != "px" and $fs-unit != "rem" or $fs == 0 {
    font-size: #{$fs}#{$rfs-suffix};
  }
  @else {
    // Variables for storing static and fluid rescaling
    $rfs-static: null;
    $rfs-fluid: null;

    // Remove px-unit from $fs for calculations
    @if $fs-unit == "px" {
      $fs: $fs / ($fs * 0 + 1);
    }
    @else if $fs-unit == "rem" {
      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);
    }

    // Set default font-size
    @if $rfs-font-size-unit == rem {
      $rfs-static: #{$fs / $rfs-rem-value}rem#{$rfs-suffix};
    }
    @else if $rfs-font-size-unit == px {
      $rfs-static: #{$fs}px#{$rfs-suffix};
    }
    @else {
      @error "`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.";
    }

    // Only add media query if font-size is bigger as the minimum font-size
    // If $rfs-factor == 1, no rescaling will take place
    @if $fs > $rfs-base-font-size and $enable-responsive-font-sizes {
      $min-width: null;
      $variable-unit: null;

      // Calculate minimum font-size for given font-size
      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;

      // Calculate difference between given font-size and minimum font-size for given font-size
      $fs-diff: $fs - $fs-min;

      // Base font-size formatting
      // No need to check if the unit is valid, because we did that before
      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);

      // If two-dimensional, use smallest of screen width and height
      $variable-unit: if($rfs-two-dimensional, vmin, vw);

      // Calculate the variable width between 0 and $rfs-breakpoint
      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};

      // Set the calculated font-size.
      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};
    }

    // Rendering
    @if $rfs-fluid == null {
      // Only render static font-size if no fluid font-size is available
      font-size: $rfs-static;
    }
    @else {
      $mq-value: null;

      // RFS breakpoint formatting
      @if $rfs-breakpoint-unit == em or $rfs-breakpoint-unit == rem {
        $mq-value: #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit};
      }
      @else if $rfs-breakpoint-unit == px {
        $mq-value: #{$rfs-breakpoint}px;
      }
      @else {
        @error "`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.";
      }

      @if $rfs-class == "disable" {
        // Adding an extra class increases specificity,
        // which prevents the media query to override the font size
        &,
        .disable-responsive-font-size &,
        &.disable-responsive-font-size {
          font-size: $rfs-static;
        }
      }
      @else {
        font-size: $rfs-static;
      }

      @if $rfs-two-dimensional {
        @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {
          @if $rfs-class == "enable" {
            .enable-responsive-font-size &,
            &.enable-responsive-font-size {
              font-size: $rfs-fluid;
            }
          }
          @else {
            font-size: $rfs-fluid;
          }

          @if $rfs-safari-iframe-resize-bug-fix {
            // stylelint-disable-next-line length-zero-no-unit
            min-width: 0vw;
          }
        }
      }
      @else {
        @media (max-width: #{$mq-value}) {
          @if $rfs-class == "enable" {
            .enable-responsive-font-size &,
            &.enable-responsive-font-size {
              font-size: $rfs-fluid;
            }
          }
          @else {
            font-size: $rfs-fluid;
          }

          @if $rfs-safari-iframe-resize-bug-fix {
            // stylelint-disable-next-line length-zero-no-unit
            min-width: 0vw;
          }
        }
      }
    }
  }
}

// The font-size & responsive-font-size mixin uses RFS to rescale font sizes
@mixin font-size($fs, $important: false) {
  @include rfs($fs, $important);
}

@mixin responsive-font-size($fs, $important: false) {
  @include rfs($fs, $important);
}


// Deprecate
// Deprecate mixin
//
// This mixin can be used to deprecate mixins or functions.
// `$enable-deprecation-messages` is a global variable, `$ignore-warning` is a variable that can be passed to
// some deprecated mixins to suppress the warning (for example if the mixin is still be used in the current version of Bootstrap)
@mixin deprecate($name, $deprecate-version, $remove-version, $ignore-warning: false) {
  @if ($enable-deprecation-messages != false and $ignore-warning != true) {
    @warn "#{$name} has been deprecated as of #{$deprecate-version}. It will be removed entirely in #{$remove-version}.";
  }
}


// Utilities
// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.02px
// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767.98px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($lower, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($upper, $breakpoints) {
      @content;
    }
  }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $max: breakpoint-max($name, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($name, $breakpoints) {
      @content;
    }
  }
}

// Hover mixin and `$enable-hover-media-query` are deprecated.
//
// Originally added during our alphas and maintained during betas, this mixin was
// designed to prevent `:hover` stickiness on iOS-an issue where hover styles
// would persist after initial touch.
//
// For backward compatibility, we've kept these mixins and updated them to
// always return their regular pseudo-classes instead of a shimmed media query.
//
// Issue: https://github.com/twbs/bootstrap/issues/25195

@mixin hover {
  &:hover { @content; }
}

@mixin hover-focus {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin plain-hover-focus {
  &,
  &:hover,
  &:focus {
    @content;
  }
}

@mixin hover-focus-active {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}

// Image Mixins
// - Responsive image
// - Retina image


// Responsive image
//
// Keep images from scaling beyond the width of their parents.

@mixin img-fluid {
  // Part 1: Set a maximum relative to the parent
  max-width: 100%;
  // Part 2: Override the height to auto, otherwise images will be stretched
  // when setting a width and height attribute on the img element.
  height: auto;
}


// Retina image
//
// Short retina mixin for setting background-image and -size.

@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {
  background-image: url($file-1x);

  // Autoprefixer takes care of adding -webkit-min-device-pixel-ratio and -o-min-device-pixel-ratio,
  // but doesn't convert dppx=>dpi.
  // There's no such thing as unprefixed min-device-pixel-ratio since it's nonstandard.
  // Compatibility info: https://caniuse.com/#feat=css-media-resolution
  @media only screen and (min-resolution: 192dpi), // IE9-11 don't support dppx
    only screen and (min-resolution: 2dppx) { // Standardized
    background-image: url($file-2x);
    background-size: $width-1x $height-1x;
  }
  @include deprecate("`img-retina()`", "v4.3.0", "v5");
}

@mixin badge-variant($bg) {
  color: color-yiq($bg);
  background-color: $bg;

  @at-root a#{&} {
    @include hover-focus {
      color: color-yiq($bg);
      background-color: darken($bg, 10%);
    }

    &:focus,
    &.focus {
      outline: 0;
      box-shadow: 0 0 0 $badge-focus-width rgba($bg, .5);
    }
  }
}

// Resize anything

@mixin resizable($direction) {
  overflow: auto; // Per CSS3 UI, `resize` only applies when `overflow` isn't `visible`
  resize: $direction; // Options: horizontal, vertical, both
}

// Only display content to screen readers
//
// See: https://a11yproject.com/posts/how-to-hide-content/
// See: https://hugogiraudel.com/2016/10/13/css-hide-and-seek/

@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
//
// Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
//
// Credit: HTML5 Boilerplate

@mixin sr-only-focusable {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
}

// Sizing shortcuts

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
  @include deprecate("`size()`", "v4.3.0", "v5");
}

@mixin reset-text {
  font-family: $font-family-base;
  // We deliberately do NOT reset font-size or word-wrap.
  font-style: normal;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
  text-align: left; // Fallback for where `start` is not supported
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  word-spacing: normal;
  white-space: normal;
  line-break: auto;
}

// stylelint-disable declaration-no-important

// Typography

@mixin text-emphasis-variant($parent, $color) {
  #{$parent} {
    color: $color !important;
  }
  @if $emphasized-link-hover-darken-percentage != 0 {
    a#{$parent} {
      @include hover-focus {
        color: darken($color, $emphasized-link-hover-darken-percentage) !important;
      }
    }
  }
}

// CSS image replacement
@mixin text-hide($ignore-warning: false) {
  // stylelint-disable-next-line font-family-no-missing-generic-family-keyword
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;

  @include deprecate("`text-hide()`", "v4.1.0", "v5", $ignore-warning);
}

// Text truncate
// Requires inline-block or block for proper styling

@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// stylelint-disable declaration-no-important

// Visibility

@mixin invisible($visibility) {
  visibility: $visibility !important;
  @include deprecate("`invisible()`", "v4.3.0", "v5");
}


// // Components
@mixin alert-variant($background, $border, $color) {
  color: $color;
  @include gradient-bg($background);
  border-color: $border;

  hr {
    border-top-color: darken($border, 5%);
  }

  .alert-link {
    color: darken($color, 10%);
  }
}

// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
  color: color-yiq($background);
  @include gradient-bg($background);
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: color-yiq($hover-background);
    @include gradient-bg($hover-background);
    border-color: $hover-border;
  }

  &:focus,
  &.focus {
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
    } @else {
      box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;
    // Remove CSS gradients if they're enabled
    @if $enable-gradients {
      background-image: none;
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    @if $enable-gradients {
      background-image: none; // Remove the gradient for the pressed/active state
    }
    border-color: $active-border;

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows and $btn-active-box-shadow != none {
        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
      } @else {
        box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
      }
    }
  }
}

@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  border-color: $color;

  @include hover {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows and $btn-active-box-shadow != none {
        box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);
      } @else {
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
      }
    }
  }
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  @include font-size($font-size);
  line-height: $line-height;
  // Manually declare to provide an override to the browser default
  @include border-radius($border-radius, 0);
}

@mixin caret-down {
  border-top: $caret-width solid;
  border-right: $caret-width solid transparent;
  border-bottom: 0;
  border-left: $caret-width solid transparent;
}

@mixin caret-up {
  border-top: 0;
  border-right: $caret-width solid transparent;
  border-bottom: $caret-width solid;
  border-left: $caret-width solid transparent;
}

@mixin caret-right {
  border-top: $caret-width solid transparent;
  border-right: 0;
  border-bottom: $caret-width solid transparent;
  border-left: $caret-width solid;
}

@mixin caret-left {
  border-top: $caret-width solid transparent;
  border-right: $caret-width solid;
  border-bottom: $caret-width solid transparent;
}

@mixin caret($direction: down) {
  @if $enable-caret {
    &::after {
      display: inline-block;
      margin-left: $caret-spacing;
      vertical-align: $caret-vertical-align;
      content: "";
      @if $direction == down {
        @include caret-down;
      } @else if $direction == up {
        @include caret-up;
      } @else if $direction == right {
        @include caret-right;
      }
    }

    @if $direction == left {
      &::after {
        display: none;
      }

      &::before {
        display: inline-block;
        margin-right: $caret-spacing;
        vertical-align: $caret-vertical-align;
        content: "";
        @include caret-left;
      }
    }

    &:empty::after {
      margin-left: 0;
    }
  }
}

// Pagination

@mixin pagination-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  .page-link {
    padding: $padding-y $padding-x;
    @include font-size($font-size);
    line-height: $line-height;
  }

  .page-item {
    &:first-child {
      .page-link {
        @include border-left-radius($border-radius);
      }
    }
    &:last-child {
      .page-link {
        @include border-right-radius($border-radius);
      }
    }
  }
}

// Lists

// Unstyled keeps list items block level, just removes default browser padding and list-style
@mixin list-unstyled {
  padding-left: 0;
  list-style: none;
}

// List Groups

@mixin list-group-item-variant($state, $background, $color) {
  .list-group-item-#{$state} {
    color: $color;
    background-color: $background;

    &.list-group-item-action {
      @include hover-focus {
        color: $color;
        background-color: darken($background, 5%);
      }

      &.active {
        color: $white;
        background-color: $color;
        border-color: $color;
      }
    }
  }
}

// Horizontal dividers
//
// Dividers (basically an hr) within dropdowns and nav lists

@mixin nav-divider($color: $nav-divider-color, $margin-y: $nav-divider-margin-y) {
  height: 0;
  margin: $margin-y 0;
  overflow: hidden;
  border-top: 1px solid $color;
}

// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `$input-focus-border-color` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.
@mixin form-control-focus() {
  &:focus {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $input-box-shadow, $input-focus-box-shadow;
    } @else {
      box-shadow: $input-focus-box-shadow;
    }
  }
}


@mixin form-validation-state($state, $color, $icon) {
  .#{$state}-feedback {
    display: none;
    width: 100%;
    margin-top: $form-feedback-margin-top;
    @include font-size($form-feedback-font-size);
    color: $color;
  }

  .#{$state}-tooltip {
    position: absolute;
    top: 100%;
    z-index: 5;
    display: none;
    max-width: 100%; // Contain to parent when possible
    padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;
    margin-top: .1rem;
    @include font-size($form-feedback-tooltip-font-size);
    line-height: $form-feedback-tooltip-line-height;
    color: color-yiq($color);
    background-color: rgba($color, $form-feedback-tooltip-opacity);
    @include border-radius($form-feedback-tooltip-border-radius);
  }

  .form-control {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $color;

      @if $enable-validation-icons {
        padding-right: $input-height-inner;
        background-image: $icon;
        background-repeat: no-repeat;
        background-position: center right $input-height-inner-quarter;
        background-size: $input-height-inner-half $input-height-inner-half;
      }

      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  // stylelint-disable-next-line selector-no-qualifying-type
  textarea.form-control {
    .was-validated &:#{$state},
    &.is-#{$state} {
      @if $enable-validation-icons {
        padding-right: $input-height-inner;
        background-position: top $input-height-inner-quarter right $input-height-inner-quarter;
      }
    }
  }

  .custom-select {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $color;

      @if $enable-validation-icons {
        padding-right: $custom-select-feedback-icon-padding-right;
        background: $custom-select-background, $icon $custom-select-bg no-repeat $custom-select-feedback-icon-position / $custom-select-feedback-icon-size;
      }

      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }


  .form-control-file {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  .form-check-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .form-check-label {
        color: $color;
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  .custom-control-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-control-label {
        color: $color;

        &::before {
          border-color: $color;
        }
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }

      &:checked {
        ~ .custom-control-label::before {
          border-color: lighten($color, 10%);
          @include gradient-bg(lighten($color, 10%));
        }
      }

      &:focus {
        ~ .custom-control-label::before {
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }

        &:not(:checked) ~ .custom-control-label::before {
          border-color: $color;
        }
      }
    }
  }

  // custom file
  .custom-file-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-file-label {
        border-color: $color;
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }

      &:focus {
        ~ .custom-file-label {
          border-color: $color;
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }
      }
    }
  }
}

// Tables

@mixin table-row-variant($state, $background, $border: null) {
  // Exact selectors below required to override `.table-striped` and prevent
  // inheritance to nested tables.
  .table-#{$state} {
    &,
    > th,
    > td {
      background-color: $background;
    }

    @if $border != null {
      th,
      td,
      thead th,
      tbody + tbody {
        border-color: $border;
      }
    }
  }

  // Hover states for `.table-hover`
  // Note: this is not available for cells or rows within `thead` or `tfoot`.
  .table-hover {
    $hover-background: darken($background, 5%);

    .table-#{$state} {
      @include hover {
        background-color: $hover-background;

        > td,
        > th {
          background-color: $hover-background;
        }
      }
    }
  }
}


// // Skins
// stylelint-disable declaration-no-important

// Contextual backgrounds

@mixin bg-variant($parent, $color) {
  #{$parent} {
    background-color: $color !important;
  }
  a#{$parent},
  button#{$parent} {
    @include hover-focus {
      background-color: darken($color, 10%) !important;
    }
  }
}

@mixin bg-gradient-variant($parent, $color) {
  #{$parent} {
    background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x !important;
  }
}

// stylelint-disable property-blacklist
// Single side border-radius

@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {
  @if $enable-rounded {
    border-radius: $radius;
  }
  @else if $fallback-border-radius != false {
    border-radius: $fallback-border-radius;
  }
}

@mixin border-top-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;
  }
}

@mixin border-right-radius($radius) {
  @if $enable-rounded {
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
}

@mixin border-bottom-radius($radius) {
  @if $enable-rounded {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

@mixin border-left-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

@mixin border-top-left-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: $radius;
  }
}

@mixin border-top-right-radius($radius) {
  @if $enable-rounded {
    border-top-right-radius: $radius;
  }
}

@mixin border-bottom-right-radius($radius) {
  @if $enable-rounded {
    border-bottom-right-radius: $radius;
  }
}

@mixin border-bottom-left-radius($radius) {
  @if $enable-rounded {
    border-bottom-left-radius: $radius;
  }
}

@mixin box-shadow($shadow...) {
  @if $enable-shadows {
    $result: ();

    @if (length($shadow) == 1) {
      // We can pass `@include box-shadow(none);`
      $result: $shadow;
    } @else {
      // Filter to avoid invalid properties for example `box-shadow: none, 1px 1px black;`
      @for $i from 1 through length($shadow) {
        @if nth($shadow, $i) != "none" {
          $result: append($result, nth($shadow, $i), "comma");
        }
      }
    }
    @if (length($result) > 0) {
      box-shadow: $result;
    }
  }
}

// Gradients

@mixin gradient-bg($color) {
  @if $enable-gradients {
    background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x;
  } @else {
    background-color: $color;
  }
}

// Horizontal gradient, from left to right
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin gradient-x($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);
  background-repeat: repeat-x;
}

// Vertical gradient, from top to bottom
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin gradient-y($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);
  background-repeat: repeat-x;
}

@mixin gradient-directional($start-color: $gray-700, $end-color: $gray-800, $deg: 45deg) {
  background-image: linear-gradient($deg, $start-color, $end-color);
  background-repeat: repeat-x;
}
@mixin gradient-x-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {
  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
}
@mixin gradient-y-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {
  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
}
@mixin gradient-radial($inner-color: $gray-700, $outer-color: $gray-800) {
  background-image: radial-gradient(circle, $inner-color, $outer-color);
  background-repeat: no-repeat;
}
@mixin gradient-striped($color: rgba($white, .15), $angle: 45deg) {
  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}

// stylelint-disable property-blacklist
@mixin transition($transition...) {
  @if $enable-transitions {
    @if length($transition) == 0 {
      transition: $transition-base;
    } @else {
      transition: $transition;
    }
  }

  @if $enable-prefers-reduced-motion-media-query {
    @media (prefers-reduced-motion: reduce) {
      transition: none;
    }
  }
}


// // Layout
@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.

@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  // Common properties for all breakpoints
  %grid-column {
    position: relative;
    width: 100%;
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    // Allow columns to stretch full width below their breakpoints
    @for $i from 1 through $columns {
      .col#{$infix}-#{$i} {
        @extend %grid-column;
      }
    }
    .col#{$infix},
    .col#{$infix}-auto {
      @extend %grid-column;
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      // Provide basic `.col-{bp}` classes for equal-width flexbox columns
      .col#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }
      .col#{$infix}-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: 100%; // Reset earlier grid tiers
      }

      @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
          @include make-col($i, $columns);
        }
      }

      .order#{$infix}-first { order: -1; }

      .order#{$infix}-last { order: $columns + 1; }

      @for $i from 0 through $columns {
        .order#{$infix}-#{$i} { order: $i; }
      }

      // `$columns - 1` because offsetting by the width of an entire row isn't possible
      @for $i from 0 through ($columns - 1) {
        @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
          .offset#{$infix}-#{$i} {
            @include make-col-offset($i, $columns);
          }
        }
      }
    }
  }
}

/// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-container($gutter: $grid-gutter-width) {
  width: 100%;
  padding-right: $gutter / 2;
  padding-left: $gutter / 2;
  margin-right: auto;
  margin-left: auto;
}


// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
}

@mixin make-row($gutter: $grid-gutter-width) {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$gutter / 2;
  margin-left: -$gutter / 2;
}

@mixin make-col-ready($gutter: $grid-gutter-width) {
  position: relative;
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%;
  padding-right: $gutter / 2;
  padding-left: $gutter / 2;
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns);
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}

// stylelint-disable declaration-no-important

@mixin float-left {
  float: left !important;
  @include deprecate("The `float-left` mixin", "v4.3.0", "v5");
}
@mixin float-right {
  float: right !important;
  @include deprecate("The `float-right` mixin", "v4.3.0", "v5");
}
@mixin float-none {
  float: none !important;
  @include deprecate("The `float-none` mixin", "v4.3.0", "v5");
}


:root {
  // Custom variable values only support SassScript inside `#{}`.
  @each $color, $value in $colors {
    --#{$color}: #{$value};
  }

  @each $color, $value in $theme-colors {
    --#{$color}: #{$value};
  }

  @each $bp, $value in $grid-breakpoints {
    --breakpoint-#{$bp}: #{$value};
  }

  // Use `inspect` for lists so that quoted items keep the quotes.
  // See https://github.com/sass/sass/issues/2383#issuecomment-336349172
  --font-family-sans-serif: #{inspect($font-family-sans-serif)};
  --font-family-monospace: #{inspect($font-family-monospace)};
}

// stylelint-disable at-rule-no-vendor-prefix, declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix

// Reboot
//
// Normalization of HTML elements, manually forked from Normalize.css to remove
// styles targeting irrelevant browsers while applying new styles.
//
// Normalize is licensed MIT. https://github.com/necolas/normalize.css


// Document
//
// 1. Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.
// 2. Change the default font family in all browsers.
// 3. Correct the line height in all browsers.
// 4. Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS.
// 5. Change the default tap highlight to be completely transparent in iOS.

*,
*::before,
*::after {
  box-sizing: border-box; // 1
}

html {
  font-family: sans-serif; // 2
  line-height: 1.15; // 3
  -webkit-text-size-adjust: 100%; // 4
  -webkit-tap-highlight-color: rgba($black, 0); // 5
}

// Shim for "new" HTML5 structural elements to display correctly (IE10, older browsers)
// TODO: remove in v5
// stylelint-disable-next-line selector-list-comma-newline-after
article, aside, figcaption, figure, footer, header, hgroup, main, nav, section {
  display: block;
}

// Body
//
// 1. Remove the margin in all browsers.
// 2. As a best practice, apply a default `background-color`.
// 3. Set an explicit initial text-align value so that we can later use
//    the `inherit` value on things like `<th>` elements.

body {
  margin: 0; // 1
  font-family: $font-family-base;
  @include font-size($font-size-base);
  font-weight: $font-weight-base;
  line-height: $line-height-base;
  color: $body-color;
  text-align: left; // 3
  background-color: $body-bg; // 2
}

// Suppress the focus outline on elements that cannot be accessed via keyboard.
// This prevents an unwanted focus outline from appearing around elements that
// might still respond to pointer events.
//
// Credit: https://github.com/suitcss/base
[tabindex="-1"]:focus {
  outline: 0 !important;
}


// Content grouping
//
// 1. Add the correct box sizing in Firefox.
// 2. Show the overflow in Edge and IE.

hr {
  box-sizing: content-box; // 1
  height: 0; // 1
  overflow: visible; // 2
}


//
// Typography
//

// Remove top margins from headings
//
// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
// margin for easier control within type scales as it avoids margin collapsing.
// stylelint-disable-next-line selector-list-comma-newline-after
h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: $headings-margin-bottom;
}

// Reset margins on paragraphs
//
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.
p {
  margin-top: 0;
  margin-bottom: $paragraph-margin-bottom;
}

// Abbreviations
//
// 1. Duplicate behavior to the data-* attribute for our tooltip plugin
// 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
// 3. Add explicit cursor to indicate changed behavior.
// 4. Remove the bottom border in Firefox 39-.
// 5. Prevent the text-decoration to be skipped.

abbr[title],
abbr[data-original-title] { // 1
  text-decoration: underline; // 2
  text-decoration: underline dotted; // 2
  cursor: help; // 3
  border-bottom: 0; // 4
  text-decoration-skip-ink: none; // 5
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: $dt-font-weight;
}

dd {
  margin-bottom: .5rem;
  margin-left: 0; // Undo browser default
}

blockquote {
  margin: 0 0 1rem;
}

b,
strong {
  font-weight: $font-weight-bolder; // Add the correct font weight in Chrome, Edge, and Safari
}

small {
  @include font-size(80%); // Add the correct font size in all browsers
}

//
// Prevent `sub` and `sup` elements from affecting the line height in
// all browsers.
//

sub,
sup {
  position: relative;
  @include font-size(75%);
  line-height: 0;
  vertical-align: baseline;
}

sub { bottom: -.25em; }
sup { top: -.5em; }


//
// Links
//

a {
  color: $link-color;
  text-decoration: $link-decoration;
  background-color: transparent; // Remove the gray background on active links in IE 10.

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }
}

// And undo these styles for placeholder links/named anchors (without href)
// which have not been made explicitly keyboard-focusable (without tabindex).
// It would be more straightforward to just use a[href] in previous block, but that
// causes specificity issues in many other styles that are too complex to fix.
// See https://github.com/twbs/bootstrap/issues/19402

a:not([href]):not([tabindex]) {
  color: inherit;
  text-decoration: none;

  @include hover-focus {
    color: inherit;
    text-decoration: none;
  }

  &:focus {
    outline: 0;
  }
}


//
// Code
//

pre,
code,
kbd,
samp {
  font-family: $font-family-monospace;
  @include font-size(1em); // Correct the odd `em` font sizing in all browsers.
}

pre {
  // Remove browser default top margin
  margin-top: 0;
  // Reset browser default of `1em` to use `rem`s
  margin-bottom: 1rem;
  // Don't allow content to break outside
  overflow: auto;
}


//
// Figures
//

figure {
  // Apply a consistent margin strategy (matches our type styles).
  margin: 0 0 1rem;
}


//
// Images and content
//

img {
  vertical-align: middle;
  border-style: none; // Remove the border on images inside links in IE 10-.
}

svg {
  // Workaround for the SVG overflow bug in IE10/11 is still required.
  // See https://github.com/twbs/bootstrap/issues/26878
  overflow: hidden;
  vertical-align: middle;
}


//
// Tables
//

table {
  border-collapse: collapse; // Prevent double borders
}

caption {
  padding-top: $table-cell-padding;
  padding-bottom: $table-cell-padding;
  color: $table-caption-color;
  text-align: left;
  caption-side: bottom;
}

th {
  // Matches default `<td>` alignment by inheriting from the `<body>`, or the
  // closest parent with a set `text-align`.
  text-align: inherit;
}


//
// Forms
//

label {
  // Allow labels to use `margin` for spacing.
  display: inline-block;
  margin-bottom: $label-margin-bottom;
}

// Remove the default `border-radius` that macOS Chrome adds.
//
// Details at https://github.com/twbs/bootstrap/issues/24093
button {
  // stylelint-disable-next-line property-blacklist
  border-radius: 0;
}

// Work around a Firefox/IE bug where the transparent `button` background
// results in a loss of the default `button` focus styles.
//
// Credit: https://github.com/suitcss/base/
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0; // Remove the margin in Firefox and Safari
  font-family: inherit;
  @include font-size(inherit);
  line-height: inherit;
}

button,
input {
  overflow: visible; // Show the overflow in Edge
}

button,
select {
  text-transform: none; // Remove the inheritance of text transform in Firefox
}

// Remove the inheritance of word-wrap in Safari.
//
// Details at https://github.com/twbs/bootstrap/issues/24990
select {
  word-wrap: normal;
}


// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
//    controls in Android 4.
// 2. Correct the inability to style clickable types in iOS and Safari.
button,
[type="button"], // 1
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; // 2
}

// Opinionated: add "hand" cursor to non-disabled button elements.
@if $enable-pointer-cursor-for-buttons {
  button,
  [type="button"],
  [type="reset"],
  [type="submit"] {
    &:not(:disabled) {
      cursor: pointer;
    }
  }
}

// Remove inner border and padding from Firefox, but don't restore the outline like Normalize.
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

input[type="radio"],
input[type="checkbox"] {
  box-sizing: border-box; // 1. Add the correct box sizing in IE 10-
  padding: 0; // 2. Remove the padding in IE 10-
}


input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
  // Remove the default appearance of temporal inputs to avoid a Mobile Safari
  // bug where setting a custom line-height prevents text from being vertically
  // centered within the input.
  // See https://bugs.webkit.org/show_bug.cgi?id=139848
  // and https://github.com/twbs/bootstrap/issues/11266
  -webkit-appearance: listbox;
}

textarea {
  overflow: auto; // Remove the default vertical scrollbar in IE.
  // Textareas should really only resize vertically so they don't break their (horizontal) containers.
  resize: vertical;
}

fieldset {
  // Browsers set a default `min-width: min-content;` on fieldsets,
  // unlike e.g. `<div>`s, which have `min-width: 0;` by default.
  // So we reset that to ensure fieldsets behave more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359
  // and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
  min-width: 0;
  // Reset the default outline behavior of fieldsets so they don't affect page layout.
  padding: 0;
  margin: 0;
  border: 0;
}

// 1. Correct the text wrapping in Edge and IE.
// 2. Correct the color inheritance from `fieldset` elements in IE.
legend {
  display: block;
  width: 100%;
  max-width: 100%; // 1
  padding: 0;
  margin-bottom: .5rem;
  @include font-size(1.5rem);
  line-height: inherit;
  color: inherit; // 2
  white-space: normal; // 1
}

progress {
  vertical-align: baseline; // Add the correct vertical alignment in Chrome, Firefox, and Opera.
}

// Correct the cursor style of increment and decrement buttons in Chrome.
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  // This overrides the extra rounded corners on search inputs in iOS so that our
  // `.form-control` class can properly style them. Note that this cannot simply
  // be added to `.form-control` as it's not specific enough. For details, see
  // https://github.com/twbs/bootstrap/issues/11586.
  outline-offset: -2px; // 2. Correct the outline style in Safari.
  -webkit-appearance: none;
}

//
// Remove the inner padding in Chrome and Safari on macOS.
//

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

//
// 1. Correct the inability to style clickable types in iOS and Safari.
// 2. Change font properties to `inherit` in Safari.
//

::-webkit-file-upload-button {
  font: inherit; // 2
  -webkit-appearance: button; // 1
}

//
// Correct element displays
//

output {
  display: inline-block;
}

summary {
  display: list-item; // Add the correct display in all browsers
  cursor: pointer;
}

template {
  display: none; // Add the correct display in IE
}

// Always hide an element with the `hidden` HTML attribute (from PureCSS).
// Needed for proper display in IE 10-.
[hidden] {
  display: none !important;
}

// stylelint-disable declaration-no-important, selector-list-comma-newline-after

//
// Headings
//

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  margin-bottom: $headings-margin-bottom;
  font-family: $headings-font-family;
  font-weight: $headings-font-weight;
  line-height: $headings-line-height;
  color: $headings-color;
}

h1, .h1 { @include font-size($h1-font-size); }
h2, .h2 { @include font-size($h2-font-size); }
h3, .h3 { @include font-size($h3-font-size); }
h4, .h4 { @include font-size($h4-font-size); }
h5, .h5 { @include font-size($h5-font-size); }
h6, .h6 { @include font-size($h6-font-size); }

.lead {
  @include font-size($lead-font-size);
  font-weight: $lead-font-weight;
}

// Type display classes
.display-1 {
  @include font-size($display1-size);
  font-weight: $display1-weight;
  line-height: $display-line-height;
}
.display-2 {
  @include font-size($display2-size);
  font-weight: $display2-weight;
  line-height: $display-line-height;
}
.display-3 {
  @include font-size($display3-size);
  font-weight: $display3-weight;
  line-height: $display-line-height;
}
.display-4 {
  @include font-size($display4-size);
  font-weight: $display4-weight;
  line-height: $display-line-height;
}


//
// Horizontal rules
//

hr {
  margin-top: $hr-margin-y;
  margin-bottom: $hr-margin-y;
  border: 0;
  border-top: $hr-border-width solid $hr-border-color;
}


//
// Emphasis
//

small,
.small {
  @include font-size($small-font-size);
  font-weight: $font-weight-normal;
}

mark,
.mark {
  padding: $mark-padding;
  background-color: $mark-bg;
}


//
// Lists
//

.list-unstyled {
  @include list-unstyled;
}

// Inline turns list items into inline-block
.list-inline {
  @include list-unstyled;
}
.list-inline-item {
  display: inline-block;

  &:not(:last-child) {
    margin-right: $list-inline-padding;
  }
}


//
// Misc
//

// Builds on `abbr`
.initialism {
  @include font-size(90%);
  text-transform: uppercase;
}

// Blockquotes
.blockquote {
  margin-bottom: $spacer;
  @include font-size($blockquote-font-size);
}

.blockquote-footer {
  display: block;
  @include font-size($blockquote-small-font-size);
  color: $blockquote-small-color;

  &::before {
    content: "\2014\00A0"; // em dash, nbsp
  }
}

// Responsive images (ensure images don't scale beyond their parents)
//
// This is purposefully opt-in via an explicit class rather than being the default for all `<img>`s.
// We previously tried the "images are responsive by default" approach in Bootstrap v2,
// and abandoned it in Bootstrap v3 because it breaks lots of third-party widgets (including Google Maps)
// which weren't expecting the images within themselves to be involuntarily resized.
// See also https://github.com/twbs/bootstrap/issues/18178
.img-fluid {
  @include img-fluid;
}


// Image thumbnails
.img-thumbnail {
  padding: $thumbnail-padding;
  background-color: $thumbnail-bg;
  border: $thumbnail-border-width solid $thumbnail-border-color;
  @include border-radius($thumbnail-border-radius);
  @include box-shadow($thumbnail-box-shadow);

  // Keep them at most 100% wide
  @include img-fluid;
}

//
// Figures
//

.figure {
  // Ensures the caption's text aligns with the image.
  display: inline-block;
}

.figure-img {
  margin-bottom: $spacer / 2;
  line-height: 1;
}

.figure-caption {
  @include font-size($figure-caption-font-size);
  color: $figure-caption-color;
}

// Inline code
code {
  @include font-size($code-font-size);
  color: $code-color;
  word-break: break-word;

  // Streamline the style when inside anchors to avoid broken underline and more
  a > & {
    color: inherit;
  }
}

// User input typically entered via keyboard
kbd {
  padding: $kbd-padding-y $kbd-padding-x;
  @include font-size($kbd-font-size);
  color: $kbd-color;
  background-color: $kbd-bg;
  @include border-radius($border-radius-sm);
  @include box-shadow($kbd-box-shadow);

  kbd {
    padding: 0;
    @include font-size(100%);
    font-weight: $nested-kbd-font-weight;
    @include box-shadow(none);
  }
}

// Blocks of code
pre {
  display: block;
  @include font-size($code-font-size);
  color: $pre-color;

  // Account for some code outputs that place code tags in pre tags
  code {
    @include font-size(inherit);
    color: inherit;
    word-break: normal;
  }
}

// Enable scrollable blocks of code
.pre-scrollable {
  max-height: $pre-scrollable-max-height;
  overflow-y: scroll;
}

// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

@if $enable-grid-classes {
  .container {
    @include make-container();
    @include make-container-max-widths();
  }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but with 100% width for
// fluid, full width layouts.

@if $enable-grid-classes {
  .container-fluid {
    @include make-container();
  }
}

// Row
//
// Rows contain and clear the floats of your columns.

@if $enable-grid-classes {
  .row {
    @include make-row();
  }

  // Remove the negative margin from default .row, then the horizontal padding
  // from all immediate children columns (to prevent runaway style inheritance).
  .no-gutters {
    margin-right: 0;
    margin-left: 0;

    > .col,
    > [class*="col-"] {
      padding-right: 0;
      padding-left: 0;
    }
  }
}

// Columns
//
// Common styles for small and large grid columns

@if $enable-grid-classes {
  @include make-grid-columns();
}

//
// Basic Bootstrap table
//

.table {
  width: 100%;
  margin-bottom: $spacer;
  color: $table-color;
  background-color: $table-bg; // Reset for nesting within parents with `background-color`.

  th,
  td {
    padding: $table-cell-padding;
    vertical-align: top;
    border-top: $table-border-width solid $table-border-color;
  }

  thead th {
    vertical-align: bottom;
    border-bottom: (2 * $table-border-width) solid $table-border-color;
  }

  tbody + tbody {
    border-top: (2 * $table-border-width) solid $table-border-color;
  }
}


//
// Condensed table w/ half padding
//

.table-sm {
  th,
  td {
    padding: $table-cell-padding-sm;
  }
}


// Border versions
//
// Add or remove borders all around the table and between all the columns.

.table-bordered {
  border: $table-border-width solid $table-border-color;

  th,
  td {
    border: $table-border-width solid $table-border-color;
  }

  thead {
    th,
    td {
      border-bottom-width: 2 * $table-border-width;
    }
  }
}

.table-borderless {
  th,
  td,
  thead th,
  tbody + tbody {
    border: 0;
  }
}

// Zebra-striping
//
// Default zebra-stripe styles (alternating gray and transparent backgrounds)

.table-striped {
  tbody tr:nth-of-type(#{$table-striped-order}) {
    background-color: $table-accent-bg;
  }
}


// Hover effect
//
// Placed here since it has to come after the potential zebra striping

.table-hover {
  tbody tr {
    @include hover {
      color: $table-hover-color;
      background-color: $table-hover-bg;
    }
  }
}


// Table backgrounds
//
// Exact selectors below required to override `.table-striped` and prevent
// inheritance to nested tables.

@each $color, $value in $theme-colors {
  @include table-row-variant($color, theme-color-level($color, $table-bg-level), theme-color-level($color, $table-border-level));
}

@include table-row-variant(active, $table-active-bg);


// Dark styles
//
// Same table markup, but inverted color scheme: dark background and light text.

// stylelint-disable-next-line no-duplicate-selectors
.table {
  .thead-dark {
    th {
      color: $table-dark-color;
      background-color: $table-dark-bg;
      border-color: $table-dark-border-color;
    }
  }

  .thead-light {
    th {
      color: $table-head-color;
      background-color: $table-head-bg;
      border-color: $table-border-color;
    }
  }
}

.table-dark {
  color: $table-dark-color;
  background-color: $table-dark-bg;

  th,
  td,
  thead th {
    border-color: $table-dark-border-color;
  }

  &.table-bordered {
    border: 0;
  }

  &.table-striped {
    tbody tr:nth-of-type(odd) {
      background-color: $table-dark-accent-bg;
    }
  }

  &.table-hover {
    tbody tr {
      @include hover {
        color: $table-dark-hover-color;
        background-color: $table-dark-hover-bg;
      }
    }
  }
}


// Responsive tables
//
// Generate series of `.table-responsive-*` classes for configuring the screen
// size of where your table will overflow.

.table-responsive {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;

        // Prevent double border on horizontal scroll due to use of `display: block;`
        > .table-bordered {
          border: 0;
        }
      }
    }
  }
}

// stylelint-disable selector-no-qualifying-type

//
// Textual form controls
//

.form-control {
  display: block;
  width: 100%;
  height: $input-height;
  padding: $input-padding-y $input-padding-x;
  font-family: $input-font-family;
  @include font-size($input-font-size);
  font-weight: $input-font-weight;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color;

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @include border-radius($input-border-radius, 0);

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }
}

select.form-control {
  &:focus::-ms-value {
    // Suppress the nested default white text on blue background highlight given to
    // the selected option text when the (still closed) <select> receives focus
    // in IE and (under certain conditions) Edge, as it looks bad and cannot be made to
    // match the appearance of the native widget.
    // See https://github.com/twbs/bootstrap/issues/19398.
    color: $input-color;
    background-color: $input-bg;
  }
}

// Make file inputs better match text inputs by forcing them to new lines.
.form-control-file,
.form-control-range {
  display: block;
  width: 100%;
}


//
// Labels
//

// For use with horizontal and inline forms, when you need the label (or legend)
// text to align with the form controls.
.col-form-label {
  padding-top: calc(#{$input-padding-y} + #{$input-border-width});
  padding-bottom: calc(#{$input-padding-y} + #{$input-border-width});
  margin-bottom: 0; // Override the `<label>/<legend>` default
  @include font-size(inherit); // Override the `<legend>` default
  line-height: $input-line-height;
}

.col-form-label-lg {
  padding-top: calc(#{$input-padding-y-lg} + #{$input-border-width});
  padding-bottom: calc(#{$input-padding-y-lg} + #{$input-border-width});
  @include font-size($input-font-size-lg);
  line-height: $input-line-height-lg;
}

.col-form-label-sm {
  padding-top: calc(#{$input-padding-y-sm} + #{$input-border-width});
  padding-bottom: calc(#{$input-padding-y-sm} + #{$input-border-width});
  @include font-size($input-font-size-sm);
  line-height: $input-line-height-sm;
}


// Readonly controls as plain text
//
// Apply class to a readonly input to make it appear like regular plain
// text (without any border, background color, focus indicator)

.form-control-plaintext {
  display: block;
  width: 100%;
  padding-top: $input-padding-y;
  padding-bottom: $input-padding-y;
  margin-bottom: 0; // match inputs if this class comes on inputs with default margins
  line-height: $input-line-height;
  color: $input-plaintext-color;
  background-color: transparent;
  border: solid transparent;
  border-width: $input-border-width 0;

  &.form-control-sm,
  &.form-control-lg {
    padding-right: 0;
    padding-left: 0;
  }
}


// Form control sizing
//
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// Repeated in `_input_group.scss` to avoid Sass extend issues.

.form-control-sm {
  height: $input-height-sm;
  padding: $input-padding-y-sm $input-padding-x-sm;
  @include font-size($input-font-size-sm);
  line-height: $input-line-height-sm;
  @include border-radius($input-border-radius-sm);
}

.form-control-lg {
  height: $input-height-lg;
  padding: $input-padding-y-lg $input-padding-x-lg;
  @include font-size($input-font-size-lg);
  line-height: $input-line-height-lg;
  @include border-radius($input-border-radius-lg);
}

// stylelint-disable-next-line no-duplicate-selectors
select.form-control {
  &[size],
  &[multiple] {
    height: auto;
  }
}

textarea.form-control {
  height: auto;
}

// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: $form-group-margin-bottom;
}

.form-text {
  display: block;
  margin-top: $form-text-margin-top;
}


// Form grid
//
// Special replacement for our grid system's `.row` for tighter form layouts.

.form-row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$form-grid-gutter-width / 2;
  margin-left: -$form-grid-gutter-width / 2;

  > .col,
  > [class*="col-"] {
    padding-right: $form-grid-gutter-width / 2;
    padding-left: $form-grid-gutter-width / 2;
  }
}


// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.form-check {
  position: relative;
  display: block;
  padding-left: $form-check-input-gutter;
}

.form-check-input {
  position: absolute;
  margin-top: $form-check-input-margin-y;
  margin-left: -$form-check-input-gutter;

  &:disabled ~ .form-check-label {
    color: $text-muted;
  }
}

.form-check-label {
  margin-bottom: 0; // Override default `<label>` bottom margin
}

.form-check-inline {
  display: inline-flex;
  align-items: center;
  padding-left: 0; // Override base .form-check
  margin-right: $form-check-inline-margin-x;

  // Undo .form-check-input defaults and add some `margin-right`.
  .form-check-input {
    position: static;
    margin-top: 0;
    margin-right: $form-check-inline-input-margin-x;
    margin-left: 0;
  }
}


// Form validation
//
// Provide feedback to users when form field values are valid or invalid. Works
// primarily for client-side validation via scoped `:invalid` and `:valid`
// pseudo-classes but also includes `.is-invalid` and `.is-valid` classes for
// server side validation.

@each $state, $data in $form-validation-states {
  @include form-validation-state($state, map-get($data, color), map-get($data, icon));
}

// Inline forms
//
// Make forms appear inline(-block) by adding the `.form-inline` class. Inline
// forms begin stacked on extra small (mobile) devices and then go inline when
// viewports reach <768px.
//
// Requires wrapping inputs and labels with `.form-group` for proper display of
// default HTML form controls and our custom form controls (e.g., input groups).

.form-inline {
  display: flex;
  flex-flow: row wrap;
  align-items: center; // Prevent shorter elements from growing to same height as others (e.g., small buttons growing to normal sized button height)

  // Because we use flex, the initial sizing of checkboxes is collapsed and
  // doesn't occupy the full-width (which is what we want for xs grid tier),
  // so we force that here.
  .form-check {
    width: 100%;
  }

  // Kick in the inline
  @include media-breakpoint-up(sm) {
    label {
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 0;
    }

    // Inline-block all the things for "inline"
    .form-group {
      display: flex;
      flex: 0 0 auto;
      flex-flow: row wrap;
      align-items: center;
      margin-bottom: 0;
    }

    // Allow folks to *not* use `.form-group`
    .form-control {
      display: inline-block;
      width: auto; // Prevent labels from stacking above inputs in `.form-group`
      vertical-align: middle;
    }

    // Make static controls behave like regular ones
    .form-control-plaintext {
      display: inline-block;
    }

    .input-group,
    .custom-select {
      width: auto;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .form-check {
      display: flex;
      align-items: center;
      justify-content: center;
      width: auto;
      padding-left: 0;
    }
    .form-check-input {
      position: relative;
      flex-shrink: 0;
      margin-top: 0;
      margin-right: $form-check-input-margin-x;
      margin-left: 0;
    }

    .custom-control {
      align-items: center;
      justify-content: center;
    }
    .custom-control-label {
      margin-bottom: 0;
    }
  }
}

// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.btn {
  display: inline-block;
  font-family: $btn-font-family;
  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius);
  @include transition($btn-transition);

  @include hover {
    color: $body-color;
    text-decoration: none;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity: $btn-disabled-opacity;
    @include box-shadow(none);
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value, $value);
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $link-color;
  text-decoration: $link-decoration;

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $btn-font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

.fade {
  @include transition($transition-fade);

  &:not(.show) {
    opacity: 0;
  }
}

.collapse {
  &:not(.show) {
    display: none;
  }
}

.collapsing {
  position: relative;
  height: 0;
  overflow: hidden;
  @include transition($transition-collapse);
}

// The dropdown wrapper (`<div>`)
.dropup,
.dropright,
.dropdown,
.dropleft {
  position: relative;
}

.dropdown-toggle {
  white-space: nowrap;

  // Generate the caret automatically
  @include caret;
}

// The dropdown menu
.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: $zindex-dropdown;
  display: none; // none by default, but block on "open" of the menu
  float: left;
  min-width: $dropdown-min-width;
  padding: $dropdown-padding-y 0;
  margin: $dropdown-spacer 0 0; // override default ul
  @include font-size($dropdown-font-size);
  color: $dropdown-color;
  text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
  list-style: none;
  background-color: $dropdown-bg;
  background-clip: padding-box;
  border: $dropdown-border-width solid $dropdown-border-color;
  @include border-radius($dropdown-border-radius);
  @include box-shadow($dropdown-box-shadow);
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .dropdown-menu#{$infix}-left {
      right: auto;
      left: 0;
    }

    .dropdown-menu#{$infix}-right {
      right: 0;
      left: auto;
    }
  }
}

// Allow for dropdowns to go bottom up (aka, dropup-menu)
// Just add .dropup after the standard .dropdown class and you're set.
.dropup {
  .dropdown-menu {
    top: auto;
    bottom: 100%;
    margin-top: 0;
    margin-bottom: $dropdown-spacer;
  }

  .dropdown-toggle {
    @include caret(up);
  }
}

.dropright {
  .dropdown-menu {
    top: 0;
    right: auto;
    left: 100%;
    margin-top: 0;
    margin-left: $dropdown-spacer;
  }

  .dropdown-toggle {
    @include caret(right);
    &::after {
      vertical-align: 0;
    }
  }
}

.dropleft {
  .dropdown-menu {
    top: 0;
    right: 100%;
    left: auto;
    margin-top: 0;
    margin-right: $dropdown-spacer;
  }

  .dropdown-toggle {
    @include caret(left);
    &::before {
      vertical-align: 0;
    }
  }
}

// When enabled Popper.js, reset basic dropdown position
// stylelint-disable-next-line no-duplicate-selectors
.dropdown-menu {
  &[x-placement^="top"],
  &[x-placement^="right"],
  &[x-placement^="bottom"],
  &[x-placement^="left"] {
    right: auto;
    bottom: auto;
  }
}

// Dividers (basically an `<hr>`) within the dropdown
.dropdown-divider {
  @include nav-divider($dropdown-divider-bg, $dropdown-divider-margin-y);
}

// Links, buttons, and more within the dropdown menu
//
// `<button>`-specific styles are denoted with `// For <button>s`
.dropdown-item {
  display: block;
  width: 100%; // For `<button>`s
  padding: $dropdown-item-padding-y $dropdown-item-padding-x;
  clear: both;
  font-weight: $font-weight-normal;
  color: $dropdown-link-color;
  text-align: inherit; // For `<button>`s
  white-space: nowrap; // prevent links from randomly breaking onto new lines
  background-color: transparent; // For `<button>`s
  border: 0; // For `<button>`s

  // Prevent dropdown overflow if there's no padding
  // See https://github.com/twbs/bootstrap/pull/27703
  @if $dropdown-padding-y == 0 {
    &:first-child {
      @include border-top-radius($dropdown-inner-border-radius);
    }

    &:last-child {
      @include border-bottom-radius($dropdown-inner-border-radius);
    }
  }

  @include hover-focus {
    color: $dropdown-link-hover-color;
    text-decoration: none;
    @include gradient-bg($dropdown-link-hover-bg);
  }

  &.active,
  &:active {
    color: $dropdown-link-active-color;
    text-decoration: none;
    @include gradient-bg($dropdown-link-active-bg);
  }

  &.disabled,
  &:disabled {
    color: $dropdown-link-disabled-color;
    pointer-events: none;
    background-color: transparent;
    // Remove CSS gradients if they're enabled
    @if $enable-gradients {
      background-image: none;
    }
  }
}

.dropdown-menu.show {
  display: block;
}

// Dropdown section headers
.dropdown-header {
  display: block;
  padding: $dropdown-padding-y $dropdown-item-padding-x;
  margin-bottom: 0; // for use with heading elements
  @include font-size($font-size-sm);
  color: $dropdown-header-color;
  white-space: nowrap; // as with > li > a
}

// Dropdown text
.dropdown-item-text {
  display: block;
  padding: $dropdown-item-padding-y $dropdown-item-padding-x;
  color: $dropdown-link-color;
}

// stylelint-disable selector-no-qualifying-type

// Make the div behave like a button
.btn-group,
.btn-group-vertical {
  position: relative;
  display: inline-flex;
  vertical-align: middle; // match .btn alignment given font-size hack above

  > .btn {
    position: relative;
    flex: 1 1 auto;

    // Bring the hover, focused, and "active" buttons to the front to overlay
    // the borders properly
    @include hover {
      z-index: 1;
    }
    &:focus,
    &:active,
    &.active {
      z-index: 1;
    }
  }
}

// Optional: Group multiple button groups together for a toolbar
.btn-toolbar {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;

  .input-group {
    width: auto;
  }
}

.btn-group {
  // Prevent double borders when buttons are next to each other
  > .btn:not(:first-child),
  > .btn-group:not(:first-child) {
    margin-left: -$btn-border-width;
  }

  // Reset rounded corners
  > .btn:not(:last-child):not(.dropdown-toggle),
  > .btn-group:not(:last-child) > .btn {
    @include border-right-radius(0);
  }

  > .btn:not(:first-child),
  > .btn-group:not(:first-child) > .btn {
    @include border-left-radius(0);
  }
}

// Sizing
//
// Remix the default button sizing classes into new ones for easier manipulation.

.btn-group-sm > .btn { @extend .btn-sm; }
.btn-group-lg > .btn { @extend .btn-lg; }


//
// Split button dropdowns
//

.dropdown-toggle-split {
  padding-right: $btn-padding-x * .75;
  padding-left: $btn-padding-x * .75;

  &::after,
  .dropup &::after,
  .dropright &::after {
    margin-left: 0;
  }

  .dropleft &::before {
    margin-right: 0;
  }
}

.btn-sm + .dropdown-toggle-split {
  padding-right: $btn-padding-x-sm * .75;
  padding-left: $btn-padding-x-sm * .75;
}

.btn-lg + .dropdown-toggle-split {
  padding-right: $btn-padding-x-lg * .75;
  padding-left: $btn-padding-x-lg * .75;
}


// The clickable button for toggling the menu
// Set the same inset shadow as the :active state
.btn-group.show .dropdown-toggle {
  @include box-shadow($btn-active-box-shadow);

  // Show no shadow for `.btn-link` since it has no other button styles.
  &.btn-link {
    @include box-shadow(none);
  }
}


//
// Vertical button groups
//

.btn-group-vertical {
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;

  > .btn,
  > .btn-group {
    width: 100%;
  }

  > .btn:not(:first-child),
  > .btn-group:not(:first-child) {
    margin-top: -$btn-border-width;
  }

  // Reset rounded corners
  > .btn:not(:last-child):not(.dropdown-toggle),
  > .btn-group:not(:last-child) > .btn {
    @include border-bottom-radius(0);
  }

  > .btn:not(:first-child),
  > .btn-group:not(:first-child) > .btn {
    @include border-top-radius(0);
  }
}


// Checkbox and radio options
//
// In order to support the browser's form validation feedback, powered by the
// `required` attribute, we have to "hide" the inputs via `clip`. We cannot use
// `display: none;` or `visibility: hidden;` as that also hides the popover.
// Simply visually hiding the inputs via `opacity` would leave them clickable in
// certain cases which is prevented by using `clip` and `pointer-events`.
// This way, we ensure a DOM element is visible to position the popover from.
//
// See https://github.com/twbs/bootstrap/pull/12794 and
// https://github.com/twbs/bootstrap/pull/14559 for more information.

.btn-group-toggle {
  > .btn,
  > .btn-group > .btn {
    margin-bottom: 0; // Override default `<label>` value

    input[type="radio"],
    input[type="checkbox"] {
      position: absolute;
      clip: rect(0, 0, 0, 0);
      pointer-events: none;
    }
  }
}

// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.input-group {
  position: relative;
  display: flex;
  flex-wrap: wrap; // For form validation feedback
  align-items: stretch;
  width: 100%;

  > .form-control,
  > .form-control-plaintext,
  > .custom-select,
  > .custom-file {
    position: relative; // For focus state's z-index
    flex: 1 1 auto;
    // Add width 1% and flex-basis auto to ensure that button will not wrap out
    // the column. Applies to IE Edge+ and Firefox. Chrome does not require this.
    width: 1%;
    margin-bottom: 0;

    + .form-control,
    + .custom-select,
    + .custom-file {
      margin-left: -$input-border-width;
    }
  }

  // Bring the "active" form control to the top of surrounding elements
  > .form-control:focus,
  > .custom-select:focus,
  > .custom-file .custom-file-input:focus ~ .custom-file-label {
    z-index: 3;
  }

  // Bring the custom file input above the label
  > .custom-file .custom-file-input:focus {
    z-index: 4;
  }

  > .form-control,
  > .custom-select {
    &:not(:last-child) { @include border-right-radius(0); }
    &:not(:first-child) { @include border-left-radius(0); }
  }

  // Custom file inputs have more complex markup, thus requiring different
  // border-radius overrides.
  > .custom-file {
    display: flex;
    align-items: center;

    &:not(:last-child) .custom-file-label,
    &:not(:last-child) .custom-file-label::after { @include border-right-radius(0); }
    &:not(:first-child) .custom-file-label { @include border-left-radius(0); }
  }
}


// Prepend and append
//
// While it requires one extra layer of HTML for each, dedicated prepend and
// append elements allow us to 1) be less clever, 2) simplify our selectors, and
// 3) support HTML5 form validation.

.input-group-prepend,
.input-group-append {
  display: flex;

  // Ensure buttons are always above inputs for more visually pleasing borders.
  // This isn't needed for `.input-group-text` since it shares the same border-color
  // as our inputs.
  .btn {
    position: relative;
    z-index: 2;

    &:focus {
      z-index: 3;
    }
  }

  .btn + .btn,
  .btn + .input-group-text,
  .input-group-text + .input-group-text,
  .input-group-text + .btn {
    margin-left: -$input-border-width;
  }
}

.input-group-prepend { margin-right: -$input-border-width; }
.input-group-append { margin-left: -$input-border-width; }


// Textual addons
//
// Serves as a catch-all element for any text or radio/checkbox input you wish
// to prepend or append to an input.

.input-group-text {
  display: flex;
  align-items: center;
  padding: $input-padding-y $input-padding-x;
  margin-bottom: 0; // Allow use of <label> elements by overriding our default margin-bottom
  @include font-size($input-font-size); // Match inputs
  font-weight: $font-weight-normal;
  line-height: $input-line-height;
  color: $input-group-addon-color;
  text-align: center;
  white-space: nowrap;
  background-color: $input-group-addon-bg;
  border: $input-border-width solid $input-group-addon-border-color;
  @include border-radius($input-border-radius);

  // Nuke default margins from checkboxes and radios to vertically center within.
  input[type="radio"],
  input[type="checkbox"] {
    margin-top: 0;
  }
}


// Sizing
//
// Remix the default form control sizing classes into new ones for easier
// manipulation.

.input-group-lg > .form-control:not(textarea),
.input-group-lg > .custom-select {
  height: $input-height-lg;
}

.input-group-lg > .form-control,
.input-group-lg > .custom-select,
.input-group-lg > .input-group-prepend > .input-group-text,
.input-group-lg > .input-group-append > .input-group-text,
.input-group-lg > .input-group-prepend > .btn,
.input-group-lg > .input-group-append > .btn {
  padding: $input-padding-y-lg $input-padding-x-lg;
  @include font-size($input-font-size-lg);
  line-height: $input-line-height-lg;
  @include border-radius($input-border-radius-lg);
}

.input-group-sm > .form-control:not(textarea),
.input-group-sm > .custom-select {
  height: $input-height-sm;
}

.input-group-sm > .form-control,
.input-group-sm > .custom-select,
.input-group-sm > .input-group-prepend > .input-group-text,
.input-group-sm > .input-group-append > .input-group-text,
.input-group-sm > .input-group-prepend > .btn,
.input-group-sm > .input-group-append > .btn {
  padding: $input-padding-y-sm $input-padding-x-sm;
  @include font-size($input-font-size-sm);
  line-height: $input-line-height-sm;
  @include border-radius($input-border-radius-sm);
}

.input-group-lg > .custom-select,
.input-group-sm > .custom-select {
  padding-right: $custom-select-padding-x + $custom-select-indicator-padding;
}


// Prepend and append rounded corners
//
// These rulesets must come after the sizing ones to properly override sm and lg
// border-radius values when extending. They're more specific than we'd like
// with the `.input-group >` part, but without it, we cannot override the sizing.


.input-group > .input-group-prepend > .btn,
.input-group > .input-group-prepend > .input-group-text,
.input-group > .input-group-append:not(:last-child) > .btn,
.input-group > .input-group-append:not(:last-child) > .input-group-text,
.input-group > .input-group-append:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group > .input-group-append:last-child > .input-group-text:not(:last-child) {
  @include border-right-radius(0);
}

.input-group > .input-group-append > .btn,
.input-group > .input-group-append > .input-group-text,
.input-group > .input-group-prepend:not(:first-child) > .btn,
.input-group > .input-group-prepend:not(:first-child) > .input-group-text,
.input-group > .input-group-prepend:first-child > .btn:not(:first-child),
.input-group > .input-group-prepend:first-child > .input-group-text:not(:first-child) {
  @include border-left-radius(0);
}

// Embedded icons from Open Iconic.
// Released under MIT and copyright 2014 Waybury.
// https://useiconic.com/open


// Checkboxes and radios
//
// Base class takes care of all the key behavioral aspects.

.custom-control {
  position: relative;
  display: block;
  min-height: $font-size-base * $line-height-base;
  padding-left: $custom-control-gutter + $custom-control-indicator-size;
}

.custom-control-inline {
  display: inline-flex;
  margin-right: $custom-control-spacer-x;
}

.custom-control-input {
  position: absolute;
  z-index: -1; // Put the input behind the label so it doesn't overlay text
  opacity: 0;

  &:checked ~ .custom-control-label::before {
    color: $custom-control-indicator-checked-color;
    border-color: $custom-control-indicator-checked-border-color;
    @include gradient-bg($custom-control-indicator-checked-bg);
    @include box-shadow($custom-control-indicator-checked-box-shadow);
  }

  &:focus ~ .custom-control-label::before {
    // the mixin is not used here to make sure there is feedback
    @if $enable-shadows {
      box-shadow: $input-box-shadow, $input-focus-box-shadow;
    } @else {
      box-shadow: $custom-control-indicator-focus-box-shadow;
    }
  }

  &:focus:not(:checked) ~ .custom-control-label::before {
    border-color: $custom-control-indicator-focus-border-color;
  }

  &:not(:disabled):active ~ .custom-control-label::before {
    color: $custom-control-indicator-active-color;
    background-color: $custom-control-indicator-active-bg;
    border-color: $custom-control-indicator-active-border-color;
    @include box-shadow($custom-control-indicator-active-box-shadow);
  }

  &:disabled {
    ~ .custom-control-label {
      color: $custom-control-label-disabled-color;

      &::before {
        background-color: $custom-control-indicator-disabled-bg;
      }
    }
  }
}

// Custom control indicators
//
// Build the custom controls out of pseudo-elements.

.custom-control-label {
  position: relative;
  margin-bottom: 0;
  vertical-align: top;

  // Background-color and (when enabled) gradient
  &::before {
    position: absolute;
    top: ($font-size-base * $line-height-base - $custom-control-indicator-size) / 2;
    left: -($custom-control-gutter + $custom-control-indicator-size);
    display: block;
    width: $custom-control-indicator-size;
    height: $custom-control-indicator-size;
    pointer-events: none;
    content: "";
    background-color: $custom-control-indicator-bg;
    border: $custom-control-indicator-border-color solid $custom-control-indicator-border-width;
    @include box-shadow($custom-control-indicator-box-shadow);
  }

  // Foreground (icon)
  &::after {
    position: absolute;
    top: ($font-size-base * $line-height-base - $custom-control-indicator-size) / 2;
    left: -($custom-control-gutter + $custom-control-indicator-size);
    display: block;
    width: $custom-control-indicator-size;
    height: $custom-control-indicator-size;
    content: "";
    background: no-repeat 50% / #{$custom-control-indicator-bg-size};
  }
}


// Checkboxes
//
// Tweak just a few things for checkboxes.

.custom-checkbox {
  .custom-control-label::before {
    @include border-radius($custom-checkbox-indicator-border-radius);
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-image: $custom-checkbox-indicator-icon-checked;
    }
  }

  .custom-control-input:indeterminate ~ .custom-control-label {
    &::before {
      border-color: $custom-checkbox-indicator-indeterminate-border-color;
      @include gradient-bg($custom-checkbox-indicator-indeterminate-bg);
      @include box-shadow($custom-checkbox-indicator-indeterminate-box-shadow);
    }
    &::after {
      background-image: $custom-checkbox-indicator-icon-indeterminate;
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
    &:indeterminate ~ .custom-control-label::before {
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
  }
}

// Radios
//
// Tweak just a few things for radios.

.custom-radio {
  .custom-control-label::before {
    // stylelint-disable-next-line property-blacklist
    border-radius: $custom-radio-indicator-border-radius;
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-image: $custom-radio-indicator-icon-checked;
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
  }
}


// switches
//
// Tweak a few things for switches

.custom-switch {
  padding-left: $custom-switch-width + $custom-control-gutter;

  .custom-control-label {
    &::before {
      left: -($custom-switch-width + $custom-control-gutter);
      width: $custom-switch-width;
      pointer-events: all;
      // stylelint-disable-next-line property-blacklist
      border-radius: $custom-switch-indicator-border-radius;
    }

    &::after {
      top: calc(#{(($font-size-base * $line-height-base - $custom-control-indicator-size) / 2)} + #{$custom-control-indicator-border-width * 2});
      left: calc(#{-($custom-switch-width + $custom-control-gutter)} + #{$custom-control-indicator-border-width * 2});
      width: $custom-switch-indicator-size;
      height: $custom-switch-indicator-size;
      background-color: $custom-control-indicator-border-color;
      // stylelint-disable-next-line property-blacklist
      border-radius: $custom-switch-indicator-border-radius;
      @include transition(transform .15s ease-in-out, $custom-forms-transition);
    }
  }

  .custom-control-input:checked ~ .custom-control-label {
    &::after {
      background-color: $custom-control-indicator-bg;
      transform: translateX($custom-switch-width - $custom-control-indicator-size);
    }
  }

  .custom-control-input:disabled {
    &:checked ~ .custom-control-label::before {
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
  }
}


// Select
//
// Replaces the browser default select with a custom one, mostly pulled from
// https://primer.github.io/.
//

.custom-select {
  display: inline-block;
  width: 100%;
  height: $custom-select-height;
  padding: $custom-select-padding-y ($custom-select-padding-x + $custom-select-indicator-padding) $custom-select-padding-y $custom-select-padding-x;
  font-family: $custom-select-font-family;
  @include font-size($custom-select-font-size);
  font-weight: $custom-select-font-weight;
  line-height: $custom-select-line-height;
  color: $custom-select-color;
  vertical-align: middle;
  background: $custom-select-background;
  background-color: $custom-select-bg;
  border: $custom-select-border-width solid $custom-select-border-color;
  @include border-radius($custom-select-border-radius, 0);
  @include box-shadow($custom-select-box-shadow);
  appearance: none;

  &:focus {
    border-color: $custom-select-focus-border-color;
    outline: 0;
    @if $enable-shadows {
      box-shadow: $custom-select-box-shadow, $custom-select-focus-box-shadow;
    } @else {
      box-shadow: $custom-select-focus-box-shadow;
    }

    &::-ms-value {
      // For visual consistency with other platforms/browsers,
      // suppress the default white text on blue background highlight given to
      // the selected option text when the (still closed) <select> receives focus
      // in IE and (under certain conditions) Edge.
      // See https://github.com/twbs/bootstrap/issues/19398.
      color: $input-color;
      background-color: $input-bg;
    }
  }

  &[multiple],
  &[size]:not([size="1"]) {
    height: auto;
    padding-right: $custom-select-padding-x;
    background-image: none;
  }

  &:disabled {
    color: $custom-select-disabled-color;
    background-color: $custom-select-disabled-bg;
  }

  // Hides the default caret in IE11
  &::-ms-expand {
    display: none;
  }
}

.custom-select-sm {
  height: $custom-select-height-sm;
  padding-top: $custom-select-padding-y-sm;
  padding-bottom: $custom-select-padding-y-sm;
  padding-left: $custom-select-padding-x-sm;
  @include font-size($custom-select-font-size-sm);
}

.custom-select-lg {
  height: $custom-select-height-lg;
  padding-top: $custom-select-padding-y-lg;
  padding-bottom: $custom-select-padding-y-lg;
  padding-left: $custom-select-padding-x-lg;
  @include font-size($custom-select-font-size-lg);
}


// File
//
// Custom file input.

.custom-file {
  position: relative;
  display: inline-block;
  width: 100%;
  height: $custom-file-height;
  margin-bottom: 0;
}

.custom-file-input {
  position: relative;
  z-index: 2;
  width: 100%;
  height: $custom-file-height;
  margin: 0;
  opacity: 0;

  &:focus ~ .custom-file-label {
    border-color: $custom-file-focus-border-color;
    box-shadow: $custom-file-focus-box-shadow;
  }

  &:disabled ~ .custom-file-label {
    background-color: $custom-file-disabled-bg;
  }

  @each $lang, $value in $custom-file-text {
    &:lang(#{$lang}) ~ .custom-file-label::after {
      content: $value;
    }
  }

  ~ .custom-file-label[data-browse]::after {
    content: attr(data-browse);
  }
}

.custom-file-label {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1;
  height: $custom-file-height;
  padding: $custom-file-padding-y $custom-file-padding-x;
  font-family: $custom-file-font-family;
  font-weight: $custom-file-font-weight;
  line-height: $custom-file-line-height;
  color: $custom-file-color;
  background-color: $custom-file-bg;
  border: $custom-file-border-width solid $custom-file-border-color;
  @include border-radius($custom-file-border-radius);
  @include box-shadow($custom-file-box-shadow);

  &::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    z-index: 3;
    display: block;
    height: $custom-file-height-inner;
    padding: $custom-file-padding-y $custom-file-padding-x;
    line-height: $custom-file-line-height;
    color: $custom-file-button-color;
    content: "Browse";
    @include gradient-bg($custom-file-button-bg);
    border-left: inherit;
    @include border-radius(0 $custom-file-border-radius $custom-file-border-radius 0);
  }
}

// Range
//
// Style range inputs the same across browsers. Vendor-specific rules for pseudo
// elements cannot be mixed. As such, there are no shared styles for focus or
// active states on prefixed selectors.

.custom-range {
  width: 100%;
  height: calc(#{$custom-range-thumb-height} + #{$custom-range-thumb-focus-box-shadow-width * 2});
  padding: 0; // Need to reset padding
  background-color: transparent;
  appearance: none;

  &:focus {
    outline: none;

    // Pseudo-elements must be split across multiple rulesets to have an effect.
    // No box-shadow() mixin for focus accessibility.
    &::-webkit-slider-thumb { box-shadow: $custom-range-thumb-focus-box-shadow; }
    &::-moz-range-thumb     { box-shadow: $custom-range-thumb-focus-box-shadow; }
    &::-ms-thumb            { box-shadow: $custom-range-thumb-focus-box-shadow; }
  }

  &::-moz-focus-outer {
    border: 0;
  }

  &::-webkit-slider-thumb {
    width: $custom-range-thumb-width;
    height: $custom-range-thumb-height;
    margin-top: ($custom-range-track-height - $custom-range-thumb-height) / 2; // Webkit specific
    @include gradient-bg($custom-range-thumb-bg);
    border: $custom-range-thumb-border;
    @include border-radius($custom-range-thumb-border-radius);
    @include box-shadow($custom-range-thumb-box-shadow);
    @include transition($custom-forms-transition);
    appearance: none;

    &:active {
      @include gradient-bg($custom-range-thumb-active-bg);
    }
  }

  &::-webkit-slider-runnable-track {
    width: $custom-range-track-width;
    height: $custom-range-track-height;
    color: transparent; // Why?
    cursor: $custom-range-track-cursor;
    background-color: $custom-range-track-bg;
    border-color: transparent;
    @include border-radius($custom-range-track-border-radius);
    @include box-shadow($custom-range-track-box-shadow);
  }

  &::-moz-range-thumb {
    width: $custom-range-thumb-width;
    height: $custom-range-thumb-height;
    @include gradient-bg($custom-range-thumb-bg);
    border: $custom-range-thumb-border;
    @include border-radius($custom-range-thumb-border-radius);
    @include box-shadow($custom-range-thumb-box-shadow);
    @include transition($custom-forms-transition);
    appearance: none;

    &:active {
      @include gradient-bg($custom-range-thumb-active-bg);
    }
  }

  &::-moz-range-track {
    width: $custom-range-track-width;
    height: $custom-range-track-height;
    color: transparent;
    cursor: $custom-range-track-cursor;
    background-color: $custom-range-track-bg;
    border-color: transparent; // Firefox specific?
    @include border-radius($custom-range-track-border-radius);
    @include box-shadow($custom-range-track-box-shadow);
  }

  &::-ms-thumb {
    width: $custom-range-thumb-width;
    height: $custom-range-thumb-height;
    margin-top: 0; // Edge specific
    margin-right: $custom-range-thumb-focus-box-shadow-width; // Workaround that overflowed box-shadow is hidden.
    margin-left: $custom-range-thumb-focus-box-shadow-width;  // Workaround that overflowed box-shadow is hidden.
    @include gradient-bg($custom-range-thumb-bg);
    border: $custom-range-thumb-border;
    @include border-radius($custom-range-thumb-border-radius);
    @include box-shadow($custom-range-thumb-box-shadow);
    @include transition($custom-forms-transition);
    appearance: none;

    &:active {
      @include gradient-bg($custom-range-thumb-active-bg);
    }
  }

  &::-ms-track {
    width: $custom-range-track-width;
    height: $custom-range-track-height;
    color: transparent;
    cursor: $custom-range-track-cursor;
    background-color: transparent;
    border-color: transparent;
    border-width: $custom-range-thumb-height / 2;
    @include box-shadow($custom-range-track-box-shadow);
  }

  &::-ms-fill-lower {
    background-color: $custom-range-track-bg;
    @include border-radius($custom-range-track-border-radius);
  }

  &::-ms-fill-upper {
    margin-right: 15px; // arbitrary?
    background-color: $custom-range-track-bg;
    @include border-radius($custom-range-track-border-radius);
  }

  &:disabled {
    &::-webkit-slider-thumb {
      background-color: $custom-range-thumb-disabled-bg;
    }

    &::-webkit-slider-runnable-track {
      cursor: default;
    }

    &::-moz-range-thumb {
      background-color: $custom-range-thumb-disabled-bg;
    }

    &::-moz-range-track {
      cursor: default;
    }

    &::-ms-thumb {
      background-color: $custom-range-thumb-disabled-bg;
    }
  }
}

.custom-control-label::before,
.custom-file-label,
.custom-select {
  @include transition($custom-forms-transition);
}

// Base class
//
// Kickstart any navigation component with a set of style resets. Works with
// `<nav>`s or `<ul>`s.

.nav {
  display: flex;
  flex-wrap: wrap;
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

.nav-link {
  display: block;
  padding: $nav-link-padding-y $nav-link-padding-x;

  @include hover-focus {
    text-decoration: none;
  }

  // Disabled state lightens text
  &.disabled {
    color: $nav-link-disabled-color;
    pointer-events: none;
    cursor: default;
  }
}

//
// Tabs
//

.nav-tabs {
  border-bottom: $nav-tabs-border-width solid $nav-tabs-border-color;

  .nav-item {
    margin-bottom: -$nav-tabs-border-width;
  }

  .nav-link {
    border: $nav-tabs-border-width solid transparent;
    @include border-top-radius($nav-tabs-border-radius);

    @include hover-focus {
      border-color: $nav-tabs-link-hover-border-color;
    }

    &.disabled {
      color: $nav-link-disabled-color;
      background-color: transparent;
      border-color: transparent;
    }
  }

  .nav-link.active,
  .nav-item.show .nav-link {
    color: $nav-tabs-link-active-color;
    background-color: $nav-tabs-link-active-bg;
    border-color: $nav-tabs-link-active-border-color;
  }

  .dropdown-menu {
    // Make dropdown border overlap tab border
    margin-top: -$nav-tabs-border-width;
    // Remove the top rounded corners here since there is a hard edge above the menu
    @include border-top-radius(0);
  }
}


//
// Pills
//

.nav-pills {
  .nav-link {
    @include border-radius($nav-pills-border-radius);
  }

  .nav-link.active,
  .show > .nav-link {
    color: $nav-pills-link-active-color;
    background-color: $nav-pills-link-active-bg;
  }
}


//
// Justified variants
//

.nav-fill {
  .nav-item {
    flex: 1 1 auto;
    text-align: center;
  }
}

.nav-justified {
  .nav-item {
    flex-basis: 0;
    flex-grow: 1;
    text-align: center;
  }
}


// Tabbable tabs
//
// Hide tabbable panes to start, show them when `.active`

.tab-content {
  > .tab-pane {
    display: none;
  }
  > .active {
    display: block;
  }
}

// Contents
//
// Navbar
// Navbar brand
// Navbar nav
// Navbar text
// Navbar divider
// Responsive navbar
// Navbar position
// Navbar themes


// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  position: relative;
  display: flex;
  flex-wrap: wrap; // allow us to do the line break for collapsing content
  align-items: center;
  justify-content: space-between; // space out brand from logo
  padding: $navbar-padding-y $navbar-padding-x;

  // Because flex properties aren't inherited, we need to redeclare these first
  // few properties so that content nested within behave properly.
  > .container,
  > .container-fluid {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: space-between;
  }
}


// Navbar brand
//
// Used for brand, project, or site names.

.navbar-brand {
  display: inline-block;
  padding-top: $navbar-brand-padding-y;
  padding-bottom: $navbar-brand-padding-y;
  margin-right: $navbar-padding-x;
  @include font-size($navbar-brand-font-size);
  line-height: inherit;
  white-space: nowrap;

  @include hover-focus {
    text-decoration: none;
  }
}


// Navbar nav
//
// Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

.navbar-nav {
  display: flex;
  flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;

  .nav-link {
    padding-right: 0;
    padding-left: 0;
  }

  .dropdown-menu {
    position: static;
    float: none;
  }
}


// Navbar text
//
//

.navbar-text {
  display: inline-block;
  padding-top: $nav-link-padding-y;
  padding-bottom: $nav-link-padding-y;
}


// Responsive navbar
//
// Custom styles for responsive collapsing and toggling of navbar contents.
// Powered by the collapse Bootstrap JavaScript plugin.

// When collapsed, prevent the toggleable navbar contents from appearing in
// the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
// on the `.navbar` parent.
.navbar-collapse {
  flex-basis: 100%;
  flex-grow: 1;
  // For always expanded or extra full navbars, ensure content aligns itself
  // properly vertically. Can be easily overridden with flex utilities.
  align-items: center;
}

// Button for toggling the navbar when in its collapsed state
.navbar-toggler {
  padding: $navbar-toggler-padding-y $navbar-toggler-padding-x;
  @include font-size($navbar-toggler-font-size);
  line-height: 1;
  background-color: transparent; // remove default button style
  border: $border-width solid transparent; // remove default button style
  @include border-radius($navbar-toggler-border-radius);

  @include hover-focus {
    text-decoration: none;
  }
}

// Keep as a separate element so folks can easily override it with another icon
// or image file as needed.
.navbar-toggler-icon {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  vertical-align: middle;
  content: "";
  background: no-repeat center center;
  background-size: 100% 100%;
}

// Generate series of `.navbar-expand-*` responsive classes for configuring
// where your navbar collapses.
.navbar-expand {
  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    &#{$infix} {
      @include media-breakpoint-down($breakpoint) {
        > .container,
        > .container-fluid {
          padding-right: 0;
          padding-left: 0;
        }
      }

      @include media-breakpoint-up($next) {
        flex-flow: row nowrap;
        justify-content: flex-start;

        .navbar-nav {
          flex-direction: row;

          .dropdown-menu {
            position: absolute;
          }

          .nav-link {
            padding-right: $navbar-nav-link-padding-x;
            padding-left: $navbar-nav-link-padding-x;
          }
        }

        // For nesting containers, have to redeclare for alignment purposes
        > .container,
        > .container-fluid {
          flex-wrap: nowrap;
        }

        .navbar-collapse {
          display: flex !important; // stylelint-disable-line declaration-no-important

          // Changes flex-bases to auto because of an IE10 bug
          flex-basis: auto;
        }

        .navbar-toggler {
          display: none;
        }
      }
    }
  }
}


// Navbar themes
//
// Styles for switching between navbars with light or dark background.

// Dark links against a light background
.navbar-light {
  .navbar-brand {
    color: $navbar-light-brand-color;

    @include hover-focus {
      color: $navbar-light-brand-hover-color;
    }
  }

  .navbar-nav {
    .nav-link {
      color: $navbar-light-color;

      @include hover-focus {
        color: $navbar-light-hover-color;
      }

      &.disabled {
        color: $navbar-light-disabled-color;
      }
    }

    .show > .nav-link,
    .active > .nav-link,
    .nav-link.show,
    .nav-link.active {
      color: $navbar-light-active-color;
    }
  }

  .navbar-toggler {
    color: $navbar-light-color;
    border-color: $navbar-light-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: $navbar-light-toggler-icon-bg;
  }

  .navbar-text {
    color: $navbar-light-color;
    a {
      color: $navbar-light-active-color;

      @include hover-focus {
        color: $navbar-light-active-color;
      }
    }
  }
}

// White links against a dark background
.navbar-dark {
  .navbar-brand {
    color: $navbar-dark-brand-color;

    @include hover-focus {
      color: $navbar-dark-brand-hover-color;
    }
  }

  .navbar-nav {
    .nav-link {
      color: $navbar-dark-color;

      @include hover-focus {
        color: $navbar-dark-hover-color;
      }

      &.disabled {
        color: $navbar-dark-disabled-color;
      }
    }

    .show > .nav-link,
    .active > .nav-link,
    .nav-link.show,
    .nav-link.active {
      color: $navbar-dark-active-color;
    }
  }

  .navbar-toggler {
    color: $navbar-dark-color;
    border-color: $navbar-dark-toggler-border-color;
  }

  .navbar-toggler-icon {
    background-image: $navbar-dark-toggler-icon-bg;
  }

  .navbar-text {
    color: $navbar-dark-color;
    a {
      color: $navbar-dark-active-color;

      @include hover-focus {
        color: $navbar-dark-active-color;
      }
    }
  }
}

//
// Base styles
//

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0; // See https://github.com/twbs/bootstrap/pull/22740#issuecomment-305868106
  word-wrap: break-word;
  background-color: $card-bg;
  background-clip: border-box;
  border: $card-border-width solid $card-border-color;
  @include border-radius($card-border-radius);

  > hr {
    margin-right: 0;
    margin-left: 0;
  }

  > .list-group:first-child {
    .list-group-item:first-child {
      @include border-top-radius($card-border-radius);
    }
  }

  > .list-group:last-child {
    .list-group-item:last-child {
      @include border-bottom-radius($card-border-radius);
    }
  }
}

.card-body {
  // Enable `flex-grow: 1` for decks and groups so that card blocks take up
  // as much space as possible, ensuring footers are aligned to the bottom.
  flex: 1 1 auto;
  padding: $card-spacer-x;
  color: $card-color;
}

.card-title {
  margin-bottom: $card-spacer-y;
}

.card-subtitle {
  margin-top: -$card-spacer-y / 2;
  margin-bottom: 0;
}

.card-text:last-child {
  margin-bottom: 0;
}

.card-link {
  @include hover {
    text-decoration: none;
  }

  + .card-link {
    margin-left: $card-spacer-x;
  }
}

//
// Optional textual caps
//

.card-header {
  padding: $card-spacer-y $card-spacer-x;
  margin-bottom: 0; // Removes the default margin-bottom of <hN>
  color: $card-cap-color;
  background-color: $card-cap-bg;
  border-bottom: $card-border-width solid $card-border-color;

  &:first-child {
    @include border-radius($card-inner-border-radius $card-inner-border-radius 0 0);
  }

  + .list-group {
    .list-group-item:first-child {
      border-top: 0;
    }
  }
}

.card-footer {
  padding: $card-spacer-y $card-spacer-x;
  background-color: $card-cap-bg;
  border-top: $card-border-width solid $card-border-color;

  &:last-child {
    @include border-radius(0 0 $card-inner-border-radius $card-inner-border-radius);
  }
}


//
// Header navs
//

.card-header-tabs {
  margin-right: -$card-spacer-x / 2;
  margin-bottom: -$card-spacer-y;
  margin-left: -$card-spacer-x / 2;
  border-bottom: 0;
}

.card-header-pills {
  margin-right: -$card-spacer-x / 2;
  margin-left: -$card-spacer-x / 2;
}

// Card image
.card-img-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  padding: $card-img-overlay-padding;
}

.card-img {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-radius($card-inner-border-radius);
}

// Card image caps
.card-img-top {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-top-radius($card-inner-border-radius);
}

.card-img-bottom {
  width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  @include border-bottom-radius($card-inner-border-radius);
}


// Card deck

.card-deck {
  display: flex;
  flex-direction: column;

  .card {
    margin-bottom: $card-deck-margin;
  }

  @include media-breakpoint-up(sm) {
    flex-flow: row wrap;
    margin-right: -$card-deck-margin;
    margin-left: -$card-deck-margin;

    .card {
      display: flex;
      // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
      flex: 1 0 0%;
      flex-direction: column;
      margin-right: $card-deck-margin;
      margin-bottom: 0; // Override the default
      margin-left: $card-deck-margin;
    }
  }
}


//
// Card groups
//

.card-group {
  display: flex;
  flex-direction: column;

  // The child selector allows nested `.card` within `.card-group`
  // to display properly.
  > .card {
    margin-bottom: $card-group-margin;
  }

  @include media-breakpoint-up(sm) {
    flex-flow: row wrap;
    // The child selector allows nested `.card` within `.card-group`
    // to display properly.
    > .card {
      // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
      flex: 1 0 0%;
      margin-bottom: 0;

      + .card {
        margin-left: 0;
        border-left: 0;
      }

      // Handle rounded corners
      @if $enable-rounded {
        &:not(:last-child) {
          @include border-right-radius(0);

          .card-img-top,
          .card-header {
            // stylelint-disable-next-line property-blacklist
            border-top-right-radius: 0;
          }
          .card-img-bottom,
          .card-footer {
            // stylelint-disable-next-line property-blacklist
            border-bottom-right-radius: 0;
          }
        }

        &:not(:first-child) {
          @include border-left-radius(0);

          .card-img-top,
          .card-header {
            // stylelint-disable-next-line property-blacklist
            border-top-left-radius: 0;
          }
          .card-img-bottom,
          .card-footer {
            // stylelint-disable-next-line property-blacklist
            border-bottom-left-radius: 0;
          }
        }
      }
    }
  }
}


//
// Columns
//

.card-columns {
  .card {
    margin-bottom: $card-columns-margin;
  }

  @include media-breakpoint-up(sm) {
    column-count: $card-columns-count;
    column-gap: $card-columns-gap;
    orphans: 1;
    widows: 1;

    .card {
      display: inline-block; // Don't let them vertically span multiple columns
      width: 100%; // Don't let their width change
    }
  }
}


//
// Accordion
//

.accordion {
  > .card {
    overflow: hidden;

    &:not(:first-of-type) {
      .card-header:first-child {
        @include border-radius(0);
      }

      &:not(:last-of-type) {
        border-bottom: 0;
        @include border-radius(0);
      }
    }

    &:first-of-type {
      border-bottom: 0;
      @include border-bottom-radius(0);
    }

    &:last-of-type {
      @include border-top-radius(0);
    }

    .card-header {
      margin-bottom: -$card-border-width;
    }
  }
}

.breadcrumb {
  display: flex;
  flex-wrap: wrap;
  padding: $breadcrumb-padding-y $breadcrumb-padding-x;
  margin-bottom: $breadcrumb-margin-bottom;
  list-style: none;
  background-color: $breadcrumb-bg;
  @include border-radius($breadcrumb-border-radius);
}

.breadcrumb-item {
  // The separator between breadcrumbs (by default, a forward-slash: "/")
  + .breadcrumb-item {
    padding-left: $breadcrumb-item-padding;

    &::before {
      display: inline-block; // Suppress underlining of the separator in modern browsers
      padding-right: $breadcrumb-item-padding;
      color: $breadcrumb-divider-color;
      content: $breadcrumb-divider;
    }
  }

  // IE9-11 hack to properly handle hyperlink underlines for breadcrumbs built
  // without `<ul>`s. The `::before` pseudo-element generates an element
  // *within* the .breadcrumb-item and thereby inherits the `text-decoration`.
  //
  // To trick IE into suppressing the underline, we give the pseudo-element an
  // underline and then immediately remove it.
  + .breadcrumb-item:hover::before {
    text-decoration: underline;
  }
  // stylelint-disable-next-line no-duplicate-selectors
  + .breadcrumb-item:hover::before {
    text-decoration: none;
  }

  &.active {
    color: $breadcrumb-active-color;
  }
}

.pagination {
  display: flex;
  @include list-unstyled();
  @include border-radius();
}

.page-link {
  position: relative;
  display: block;
  padding: $pagination-padding-y $pagination-padding-x;
  margin-left: -$pagination-border-width;
  line-height: $pagination-line-height;
  color: $pagination-color;
  background-color: $pagination-bg;
  border: $pagination-border-width solid $pagination-border-color;

  &:hover {
    z-index: 2;
    color: $pagination-hover-color;
    text-decoration: none;
    background-color: $pagination-hover-bg;
    border-color: $pagination-hover-border-color;
  }

  &:focus {
    z-index: 2;
    outline: $pagination-focus-outline;
    box-shadow: $pagination-focus-box-shadow;
  }
}

.page-item {
  &:first-child {
    .page-link {
      margin-left: 0;
      @include border-left-radius($border-radius);
    }
  }
  &:last-child {
    .page-link {
      @include border-right-radius($border-radius);
    }
  }

  &.active .page-link {
    z-index: 1;
    color: $pagination-active-color;
    background-color: $pagination-active-bg;
    border-color: $pagination-active-border-color;
  }

  &.disabled .page-link {
    color: $pagination-disabled-color;
    pointer-events: none;
    // Opinionated: remove the "hand" cursor set previously for .page-link
    cursor: auto;
    background-color: $pagination-disabled-bg;
    border-color: $pagination-disabled-border-color;
  }
}


//
// Sizing
//

.pagination-lg {
  @include pagination-size($pagination-padding-y-lg, $pagination-padding-x-lg, $font-size-lg, $line-height-lg, $border-radius-lg);
}

.pagination-sm {
  @include pagination-size($pagination-padding-y-sm, $pagination-padding-x-sm, $font-size-sm, $line-height-sm, $border-radius-sm);
}

// Base class
//
// Requires one of the contextual, color modifier classes for `color` and
// `background-color`.

.badge {
  display: inline-block;
  padding: $badge-padding-y $badge-padding-x;
  @include font-size($badge-font-size);
  font-weight: $badge-font-weight;
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  @include border-radius($badge-border-radius);
  @include transition($badge-transition);

  @at-root a#{&} {
    @include hover-focus {
      text-decoration: none;
    }
  }

  // Empty badges collapse automatically
  &:empty {
    display: none;
  }
}

// Quick fix for badges in buttons
.btn .badge {
  position: relative;
  top: -1px;
}

// Pill badges
//
// Make them extra rounded with a modifier to replace v3's badges.

.badge-pill {
  padding-right: $badge-pill-padding-x;
  padding-left: $badge-pill-padding-x;
  @include border-radius($badge-pill-border-radius);
}

// Colors
//
// Contextual variations (linked badges get darker on :hover).

@each $color, $value in $theme-colors {
  .badge-#{$color} {
    @include badge-variant($value);
  }
}

.jumbotron {
  padding: $jumbotron-padding ($jumbotron-padding / 2);
  margin-bottom: $jumbotron-padding;
  color: $jumbotron-color;
  background-color: $jumbotron-bg;
  @include border-radius($border-radius-lg);

  @include media-breakpoint-up(sm) {
    padding: ($jumbotron-padding * 2) $jumbotron-padding;
  }
}

.jumbotron-fluid {
  padding-right: 0;
  padding-left: 0;
  @include border-radius(0);
}

//
// Base styles
//

.alert {
  position: relative;
  padding: $alert-padding-y $alert-padding-x;
  margin-bottom: $alert-margin-bottom;
  border: $alert-border-width solid transparent;
  @include border-radius($alert-border-radius);
}

// Headings for larger alerts
.alert-heading {
  // Specified to prevent conflicts of changing $headings-color
  color: inherit;
}

// Provide class for links that match alerts
.alert-link {
  font-weight: $alert-link-font-weight;
}


// Dismissible alerts
//
// Expand the right padding and account for the close button's positioning.

.alert-dismissible {
  padding-right: $close-font-size + $alert-padding-x * 2;

  // Adjust close link position
  .close {
    position: absolute;
    top: 0;
    right: 0;
    padding: $alert-padding-y $alert-padding-x;
    color: inherit;
  }
}


// Alternate styles
//
// Generate contextual modifier classes for colorizing the alert.

@each $color, $value in $theme-colors {
  .alert-#{$color} {
    @include alert-variant(theme-color-level($color, $alert-bg-level), theme-color-level($color, $alert-border-level), theme-color-level($color, $alert-color-level));
  }
}

// Disable animation if transitions are disabled
@if $enable-transitions {
  @keyframes progress-bar-stripes {
    from { background-position: $progress-height 0; }
    to { background-position: 0 0; }
  }
}

.progress {
  display: flex;
  height: $progress-height;
  overflow: hidden; // force rounded corners by cropping it
  @include font-size($progress-font-size);
  background-color: $progress-bg;
  @include border-radius($progress-border-radius);
  @include box-shadow($progress-box-shadow);
}

.progress-bar {
  display: flex;
  flex-direction: column;
  justify-content: center;
  color: $progress-bar-color;
  text-align: center;
  white-space: nowrap;
  background-color: $progress-bar-bg;
  @include transition($progress-bar-transition);
}

.progress-bar-striped {
  @include gradient-striped();
  background-size: $progress-height $progress-height;
}

@if $enable-transitions {
  .progress-bar-animated {
    animation: progress-bar-stripes $progress-bar-animation-timing;

    @media (prefers-reduced-motion: reduce) {
      animation: none;
    }
  }
}

.media {
  display: flex;
  align-items: flex-start;
}

.media-body {
  flex: 1;
}

// Base class
//
// Easily usable on <ul>, <ol>, or <div>.

.list-group {
  display: flex;
  flex-direction: column;

  // No need to set list-style: none; since .list-group-item is block level
  padding-left: 0; // reset padding because ul and ol
  margin-bottom: 0;
}


// Interactive list items
//
// Use anchor or button elements instead of `li`s or `div`s to create interactive
// list items. Includes an extra `.active` modifier class for selected items.

.list-group-item-action {
  width: 100%; // For `<button>`s (anchors become 100% by default though)
  color: $list-group-action-color;
  text-align: inherit; // For `<button>`s (anchors inherit)

  // Hover state
  @include hover-focus {
    z-index: 1; // Place hover/focus items above their siblings for proper border styling
    color: $list-group-action-hover-color;
    text-decoration: none;
    background-color: $list-group-hover-bg;
  }

  &:active {
    color: $list-group-action-active-color;
    background-color: $list-group-action-active-bg;
  }
}


// Individual list items
//
// Use on `li`s or `div`s within the `.list-group` parent.

.list-group-item {
  position: relative;
  display: block;
  padding: $list-group-item-padding-y $list-group-item-padding-x;
  // Place the border on the list items and negative margin up for better styling
  margin-bottom: -$list-group-border-width;
  color: $list-group-color;
  background-color: $list-group-bg;
  border: $list-group-border-width solid $list-group-border-color;

  &:first-child {
    @include border-top-radius($list-group-border-radius);
  }

  &:last-child {
    margin-bottom: 0;
    @include border-bottom-radius($list-group-border-radius);
  }

  &.disabled,
  &:disabled {
    color: $list-group-disabled-color;
    pointer-events: none;
    background-color: $list-group-disabled-bg;
  }

  // Include both here for `<a>`s and `<button>`s
  &.active {
    z-index: 2; // Place active items above their siblings for proper border styling
    color: $list-group-active-color;
    background-color: $list-group-active-bg;
    border-color: $list-group-active-border-color;
  }
}


// Horizontal
//
// Change the layout of list group items from vertical (default) to horizontal.

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .list-group-horizontal#{$infix} {
      flex-direction: row;

      .list-group-item {
        margin-right: -$list-group-border-width;
        margin-bottom: 0;

        &:first-child {
          @include border-left-radius($list-group-border-radius);
          @include border-top-right-radius(0);
        }

        &:last-child {
          margin-right: 0;
          @include border-right-radius($list-group-border-radius);
          @include border-bottom-left-radius(0);
        }
      }
    }
  }
}


// Flush list items
//
// Remove borders and border-radius to keep list group items edge-to-edge. Most
// useful within other components (e.g., cards).

.list-group-flush {
  .list-group-item {
    border-right: 0;
    border-left: 0;
    @include border-radius(0);

    &:last-child {
      margin-bottom: -$list-group-border-width;
    }
  }

  &:first-child {
    .list-group-item:first-child {
      border-top: 0;
    }
  }

  &:last-child {
    .list-group-item:last-child {
      margin-bottom: 0;
      border-bottom: 0;
    }
  }
}


// Contextual variants
//
// Add modifier classes to change text and background color on individual items.
// Organizationally, this must come after the `:hover` states.

@each $color, $value in $theme-colors {
  @include list-group-item-variant($color, theme-color-level($color, -9), theme-color-level($color, 6));
}

.close {
  float: right;
  @include font-size($close-font-size);
  font-weight: $close-font-weight;
  line-height: 1;
  color: $close-color;
  text-shadow: $close-text-shadow;
  opacity: .5;

  // Override <a>'s hover style
  @include hover {
    color: $close-color;
    text-decoration: none;
  }

  &:not(:disabled):not(.disabled) {
    @include hover-focus {
      opacity: .75;
    }
  }
}

// Additional properties for button version
// iOS requires the button element instead of an anchor tag.
// If you want the anchor version, it requires `href="#"`.
// See https://developer.mozilla.org/en-US/docs/Web/Events/click#Safari_Mobile

// stylelint-disable-next-line selector-no-qualifying-type
button.close {
  padding: 0;
  background-color: transparent;
  border: 0;
  appearance: none;
}

// Future-proof disabling of clicks on `<a>` elements

// stylelint-disable-next-line selector-no-qualifying-type
a.close.disabled {
  pointer-events: none;
}

.toast {
  max-width: $toast-max-width;
  overflow: hidden; // cheap rounded corners on nested items
  @include font-size($toast-font-size);
  color: $toast-color;
  background-color: $toast-background-color;
  background-clip: padding-box;
  border: $toast-border-width solid $toast-border-color;
  box-shadow: $toast-box-shadow;
  backdrop-filter: blur(10px);
  opacity: 0;
  @include border-radius($toast-border-radius);

  &:not(:last-child) {
    margin-bottom: $toast-padding-x;
  }

  &.showing {
    opacity: 1;
  }

  &.show {
    display: block;
    opacity: 1;
  }

  &.hide {
    display: none;
  }
}

.toast-header {
  display: flex;
  align-items: center;
  padding: $toast-padding-y $toast-padding-x;
  color: $toast-header-color;
  background-color: $toast-header-background-color;
  background-clip: padding-box;
  border-bottom: $toast-border-width solid $toast-header-border-color;
}

.toast-body {
  padding: $toast-padding-x; // apply to both vertical and horizontal
}

// .modal-open      - body class for killing the scroll
// .modal           - container to scroll within
// .modal-dialog    - positioning shell for the actual modal
// .modal-content   - actual modal w/ bg and corners and stuff


.modal-open {
  // Kill the scroll on the body
  overflow: hidden;

  .modal {
    overflow-x: hidden;
    overflow-y: auto;
  }
}

// Container that the modal scrolls within
.modal {
  position: fixed;
  top: 0;
  left: 0;
  z-index: $zindex-modal;
  display: none;
  width: 100%;
  height: 100%;
  overflow: hidden;
  // Prevent Chrome on Windows from adding a focus outline. For details, see
  // https://github.com/twbs/bootstrap/pull/10951.
  outline: 0;
  // We deliberately don't use `-webkit-overflow-scrolling: touch;` due to a
  // gnarly iOS Safari bug: https://bugs.webkit.org/show_bug.cgi?id=158342
  // See also https://github.com/twbs/bootstrap/issues/17695
}

// Shell div to position the modal with bottom padding
.modal-dialog {
  position: relative;
  width: auto;
  margin: $modal-dialog-margin;
  // allow clicks to pass through for custom click handling to close modal
  pointer-events: none;

  // When fading in the modal, animate it to slide down
  .modal.fade & {
    @include transition($modal-transition);
    transform: $modal-fade-transform;
  }
  .modal.show & {
    transform: $modal-show-transform;
  }
}

.modal-dialog-scrollable {
  display: flex; // IE10/11
  max-height: calc(100% - #{$modal-dialog-margin * 2});

  .modal-content {
    max-height: calc(100vh - #{$modal-dialog-margin * 2}); // IE10/11
    overflow: hidden;
  }

  .modal-header,
  .modal-footer {
    flex-shrink: 0;
  }

  .modal-body {
    overflow-y: auto;
  }
}

.modal-dialog-centered {
  display: flex;
  align-items: center;
  min-height: calc(100% - #{$modal-dialog-margin * 2});

  // Ensure `modal-dialog-centered` extends the full height of the view (IE10/11)
  &::before {
    display: block; // IE10
    height: calc(100vh - #{$modal-dialog-margin * 2});
    content: "";
  }

  // Ensure `.modal-body` shows scrollbar (IE10/11)
  &.modal-dialog-scrollable {
    flex-direction: column;
    justify-content: center;
    height: 100%;

    .modal-content {
      max-height: none;
    }

    &::before {
      content: none;
    }
  }
}

// Actual modal
.modal-content {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%; // Ensure `.modal-content` extends the full width of the parent `.modal-dialog`
  // counteract the pointer-events: none; in the .modal-dialog
  color: $modal-content-color;
  pointer-events: auto;
  background-color: $modal-content-bg;
  background-clip: padding-box;
  border: $modal-content-border-width solid $modal-content-border-color;
  @include border-radius($modal-content-border-radius);
  @include box-shadow($modal-content-box-shadow-xs);
  // Remove focus outline from opened modal
  outline: 0;
}

// Modal background
.modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  z-index: $zindex-modal-backdrop;
  width: 100vw;
  height: 100vh;
  background-color: $modal-backdrop-bg;

  // Fade for backdrop
  &.fade { opacity: 0; }
  &.show { opacity: $modal-backdrop-opacity; }
}

// Modal header
// Top section of the modal w/ title and dismiss
.modal-header {
  display: flex;
  align-items: flex-start; // so the close btn always stays on the upper right corner
  justify-content: space-between; // Put modal header elements (title and dismiss) on opposite ends
  padding: $modal-header-padding;
  border-bottom: $modal-header-border-width solid $modal-header-border-color;
  @include border-top-radius($modal-content-border-radius);

  .close {
    padding: $modal-header-padding;
    // auto on the left force icon to the right even when there is no .modal-title
    margin: (-$modal-header-padding-y) (-$modal-header-padding-x) (-$modal-header-padding-y) auto;
  }
}

// Title text within header
.modal-title {
  margin-bottom: 0;
  line-height: $modal-title-line-height;
}

// Modal body
// Where all modal content resides (sibling of .modal-header and .modal-footer)
.modal-body {
  position: relative;
  // Enable `flex-grow: 1` so that the body take up as much space as possible
  // when should there be a fixed height on `.modal-dialog`.
  flex: 1 1 auto;
  padding: $modal-inner-padding;
}

// Footer (for actions)
.modal-footer {
  display: flex;
  align-items: center; // vertically center
  justify-content: flex-end; // Right align buttons with flex property because text-align doesn't work on flex items
  padding: $modal-inner-padding;
  border-top: $modal-footer-border-width solid $modal-footer-border-color;
  @include border-bottom-radius($modal-content-border-radius);

  // Easily place margin between footer elements
  > :not(:first-child) { margin-left: .25rem; }
  > :not(:last-child) { margin-right: .25rem; }
}

// Measure scrollbar width for padding body during modal show/hide
.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll;
}

// Scale up the modal
@include media-breakpoint-up(sm) {
  // Automatically set modal's width for larger viewports
  .modal-dialog {
    max-width: $modal-md;
    margin: $modal-dialog-margin-y-sm-up auto;
  }

  .modal-dialog-scrollable {
    max-height: calc(100% - #{$modal-dialog-margin-y-sm-up * 2});

    .modal-content {
      max-height: calc(100vh - #{$modal-dialog-margin-y-sm-up * 2});
    }
  }

  .modal-dialog-centered {
    min-height: calc(100% - #{$modal-dialog-margin-y-sm-up * 2});

    &::before {
      height: calc(100vh - #{$modal-dialog-margin-y-sm-up * 2});
    }
  }

  .modal-content {
    @include box-shadow($modal-content-box-shadow-sm-up);
  }

  .modal-sm { max-width: $modal-sm; }
}

@include media-breakpoint-up(lg) {
  .modal-lg,
  .modal-xl {
    max-width: $modal-lg;
  }
}

@include media-breakpoint-up(xl) {
  .modal-xl { max-width: $modal-xl; }
}

// Base class
.tooltip {
  position: absolute;
  z-index: $zindex-tooltip;
  display: block;
  margin: $tooltip-margin;
  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
  // So reset our font and text properties to avoid inheriting weird values.
  @include reset-text();
  @include font-size($tooltip-font-size);
  // Allow breaking very long words so they don't overflow the tooltip's bounds
  word-wrap: break-word;
  opacity: 0;

  &.show { opacity: $tooltip-opacity; }

  .arrow {
    position: absolute;
    display: block;
    width: $tooltip-arrow-width;
    height: $tooltip-arrow-height;

    &::before {
      position: absolute;
      content: "";
      border-color: transparent;
      border-style: solid;
    }
  }
}

.bs-tooltip-top {
  padding: $tooltip-arrow-height 0;

  .arrow {
    bottom: 0;

    &::before {
      top: 0;
      border-width: $tooltip-arrow-height ($tooltip-arrow-width / 2) 0;
      border-top-color: $tooltip-arrow-color;
    }
  }
}

.bs-tooltip-right {
  padding: 0 $tooltip-arrow-height;

  .arrow {
    left: 0;
    width: $tooltip-arrow-height;
    height: $tooltip-arrow-width;

    &::before {
      right: 0;
      border-width: ($tooltip-arrow-width / 2) $tooltip-arrow-height ($tooltip-arrow-width / 2) 0;
      border-right-color: $tooltip-arrow-color;
    }
  }
}

.bs-tooltip-bottom {
  padding: $tooltip-arrow-height 0;

  .arrow {
    top: 0;

    &::before {
      bottom: 0;
      border-width: 0 ($tooltip-arrow-width / 2) $tooltip-arrow-height;
      border-bottom-color: $tooltip-arrow-color;
    }
  }
}

.bs-tooltip-left {
  padding: 0 $tooltip-arrow-height;

  .arrow {
    right: 0;
    width: $tooltip-arrow-height;
    height: $tooltip-arrow-width;

    &::before {
      left: 0;
      border-width: ($tooltip-arrow-width / 2) 0 ($tooltip-arrow-width / 2) $tooltip-arrow-height;
      border-left-color: $tooltip-arrow-color;
    }
  }
}

.bs-tooltip-auto {
  &[x-placement^="top"] {
    @extend .bs-tooltip-top;
  }
  &[x-placement^="right"] {
    @extend .bs-tooltip-right;
  }
  &[x-placement^="bottom"] {
    @extend .bs-tooltip-bottom;
  }
  &[x-placement^="left"] {
    @extend .bs-tooltip-left;
  }
}

// Wrapper for the tooltip content
.tooltip-inner {
  max-width: $tooltip-max-width;
  padding: $tooltip-padding-y $tooltip-padding-x;
  color: $tooltip-color;
  text-align: center;
  background-color: $tooltip-bg;
  @include border-radius($tooltip-border-radius);
}

.popover {
  position: absolute;
  top: 0;
  left: 0;
  z-index: $zindex-popover;
  display: block;
  max-width: $popover-max-width;
  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
  // So reset our font and text properties to avoid inheriting weird values.
  @include reset-text();
  @include font-size($popover-font-size);
  // Allow breaking very long words so they don't overflow the popover's bounds
  word-wrap: break-word;
  background-color: $popover-bg;
  background-clip: padding-box;
  border: $popover-border-width solid $popover-border-color;
  @include border-radius($popover-border-radius);
  @include box-shadow($popover-box-shadow);

  .arrow {
    position: absolute;
    display: block;
    width: $popover-arrow-width;
    height: $popover-arrow-height;
    margin: 0 $border-radius-lg;

    &::before,
    &::after {
      position: absolute;
      display: block;
      content: "";
      border-color: transparent;
      border-style: solid;
    }
  }
}

.bs-popover-top {
  margin-bottom: $popover-arrow-height;

  > .arrow {
    bottom: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);

    &::before {
      bottom: 0;
      border-width: $popover-arrow-height ($popover-arrow-width / 2) 0;
      border-top-color: $popover-arrow-outer-color;
    }

    &::after {
      bottom: $popover-border-width;
      border-width: $popover-arrow-height ($popover-arrow-width / 2) 0;
      border-top-color: $popover-arrow-color;
    }
  }
}

.bs-popover-right {
  margin-left: $popover-arrow-height;

  > .arrow {
    left: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
    width: $popover-arrow-height;
    height: $popover-arrow-width;
    margin: $border-radius-lg 0; // make sure the arrow does not touch the popover's rounded corners

    &::before {
      left: 0;
      border-width: ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2) 0;
      border-right-color: $popover-arrow-outer-color;
    }

    &::after {
      left: $popover-border-width;
      border-width: ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2) 0;
      border-right-color: $popover-arrow-color;
    }
  }
}

.bs-popover-bottom {
  margin-top: $popover-arrow-height;

  > .arrow {
    top: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);

    &::before {
      top: 0;
      border-width: 0 ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2);
      border-bottom-color: $popover-arrow-outer-color;
    }

    &::after {
      top: $popover-border-width;
      border-width: 0 ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2);
      border-bottom-color: $popover-arrow-color;
    }
  }

  // This will remove the popover-header's border just below the arrow
  .popover-header::before {
    position: absolute;
    top: 0;
    left: 50%;
    display: block;
    width: $popover-arrow-width;
    margin-left: -$popover-arrow-width / 2;
    content: "";
    border-bottom: $popover-border-width solid $popover-header-bg;
  }
}

.bs-popover-left {
  margin-right: $popover-arrow-height;

  > .arrow {
    right: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);
    width: $popover-arrow-height;
    height: $popover-arrow-width;
    margin: $border-radius-lg 0; // make sure the arrow does not touch the popover's rounded corners

    &::before {
      right: 0;
      border-width: ($popover-arrow-width / 2) 0 ($popover-arrow-width / 2) $popover-arrow-height;
      border-left-color: $popover-arrow-outer-color;
    }

    &::after {
      right: $popover-border-width;
      border-width: ($popover-arrow-width / 2) 0 ($popover-arrow-width / 2) $popover-arrow-height;
      border-left-color: $popover-arrow-color;
    }
  }
}

.bs-popover-auto {
  &[x-placement^="top"] {
    @extend .bs-popover-top;
  }
  &[x-placement^="right"] {
    @extend .bs-popover-right;
  }
  &[x-placement^="bottom"] {
    @extend .bs-popover-bottom;
  }
  &[x-placement^="left"] {
    @extend .bs-popover-left;
  }
}


// Offset the popover to account for the popover arrow
.popover-header {
  padding: $popover-header-padding-y $popover-header-padding-x;
  margin-bottom: 0; // Reset the default from Reboot
  @include font-size($font-size-base);
  color: $popover-header-color;
  background-color: $popover-header-bg;
  border-bottom: $popover-border-width solid darken($popover-header-bg, 5%);
  $offset-border-width: calc(#{$border-radius-lg} - #{$popover-border-width});
  @include border-top-radius($offset-border-width);

  &:empty {
    display: none;
  }
}

.popover-body {
  padding: $popover-body-padding-y $popover-body-padding-x;
  color: $popover-body-color;
}

// Notes on the classes:
//
// 1. .carousel.pointer-event should ideally be pan-y (to allow for users to scroll vertically)
//    even when their scroll action started on a carousel, but for compatibility (with Firefox)
//    we're preventing all actions instead
// 2. The .carousel-item-left and .carousel-item-right is used to indicate where
//    the active slide is heading.
// 3. .active.carousel-item is the current slide.
// 4. .active.carousel-item-left and .active.carousel-item-right is the current
//    slide in its in-transition state. Only one of these occurs at a time.
// 5. .carousel-item-next.carousel-item-left and .carousel-item-prev.carousel-item-right
//    is the upcoming slide in transition.

.carousel {
  position: relative;
}

.carousel.pointer-event {
  touch-action: pan-y;
}

.carousel-inner {
  position: relative;
  width: 100%;
  overflow: hidden;
  @include clearfix();
}

.carousel-item {
  position: relative;
  display: none;
  float: left;
  width: 100%;
  margin-right: -100%;
  backface-visibility: hidden;
  @include transition($carousel-transition);
}

.carousel-item.active,
.carousel-item-next,
.carousel-item-prev {
  display: block;
}

.carousel-item-next:not(.carousel-item-left),
.active.carousel-item-right {
  transform: translateX(100%);
}

.carousel-item-prev:not(.carousel-item-right),
.active.carousel-item-left {
  transform: translateX(-100%);
}


//
// Alternate transitions
//

.carousel-fade {
  .carousel-item {
    opacity: 0;
    transition-property: opacity;
    transform: none;
  }

  .carousel-item.active,
  .carousel-item-next.carousel-item-left,
  .carousel-item-prev.carousel-item-right {
    z-index: 1;
    opacity: 1;
  }

  .active.carousel-item-left,
  .active.carousel-item-right {
    z-index: 0;
    opacity: 0;
    @include transition(0s $carousel-transition-duration opacity);
  }
}


//
// Left/right controls for nav
//

.carousel-control-prev,
.carousel-control-next {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 1;
  // Use flex for alignment (1-3)
  display: flex; // 1. allow flex styles
  align-items: center; // 2. vertically center contents
  justify-content: center; // 3. horizontally center contents
  width: $carousel-control-width;
  color: $carousel-control-color;
  text-align: center;
  opacity: $carousel-control-opacity;
  @include transition($carousel-control-transition);

  // Hover/focus state
  @include hover-focus {
    color: $carousel-control-color;
    text-decoration: none;
    outline: 0;
    opacity: $carousel-control-hover-opacity;
  }
}
.carousel-control-prev {
  left: 0;
  @if $enable-gradients {
    background: linear-gradient(90deg, rgba($black, .25), rgba($black, .001));
  }
}
.carousel-control-next {
  right: 0;
  @if $enable-gradients {
    background: linear-gradient(270deg, rgba($black, .25), rgba($black, .001));
  }
}

// Icons for within
.carousel-control-prev-icon,
.carousel-control-next-icon {
  display: inline-block;
  width: $carousel-control-icon-width;
  height: $carousel-control-icon-width;
  background: no-repeat 50% / 100% 100%;
}
.carousel-control-prev-icon {
  background-image: $carousel-control-prev-icon-bg;
}
.carousel-control-next-icon {
  background-image: $carousel-control-next-icon-bg;
}


// Optional indicator pips
//
// Add an ordered list with the following class and add a list item for each
// slide your carousel holds.

.carousel-indicators {
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 15;
  display: flex;
  justify-content: center;
  padding-left: 0; // override <ol> default
  // Use the .carousel-control's width as margin so we don't overlay those
  margin-right: $carousel-control-width;
  margin-left: $carousel-control-width;
  list-style: none;

  li {
    box-sizing: content-box;
    flex: 0 1 auto;
    width: $carousel-indicator-width;
    height: $carousel-indicator-height;
    margin-right: $carousel-indicator-spacer;
    margin-left: $carousel-indicator-spacer;
    text-indent: -999px;
    cursor: pointer;
    background-color: $carousel-indicator-active-bg;
    background-clip: padding-box;
    // Use transparent borders to increase the hit area by 10px on top and bottom.
    border-top: $carousel-indicator-hit-area-height solid transparent;
    border-bottom: $carousel-indicator-hit-area-height solid transparent;
    opacity: .5;
    @include transition($carousel-indicator-transition);
  }

  .active {
    opacity: 1;
  }
}


// Optional captions
//
//

.carousel-caption {
  position: absolute;
  right: (100% - $carousel-caption-width) / 2;
  bottom: 20px;
  left: (100% - $carousel-caption-width) / 2;
  z-index: 10;
  padding-top: 20px;
  padding-bottom: 20px;
  color: $carousel-caption-color;
  text-align: center;
}

//
// Rotating border
//

@keyframes spinner-border {
  to { transform: rotate(360deg); }
}

.spinner-border {
  display: inline-block;
  width: $spinner-width;
  height: $spinner-height;
  vertical-align: text-bottom;
  border: $spinner-border-width solid currentColor;
  border-right-color: transparent;
  // stylelint-disable-next-line property-blacklist
  border-radius: 50%;
  animation: spinner-border .75s linear infinite;
}

.spinner-border-sm {
  width: $spinner-width-sm;
  height: $spinner-height-sm;
  border-width: $spinner-border-width-sm;
}

//
// Growing circle
//

@keyframes spinner-grow {
  0% {
    transform: scale(0);
  }
  50% {
    opacity: 1;
  }
}

.spinner-grow {
  display: inline-block;
  width: $spinner-width;
  height: $spinner-height;
  vertical-align: text-bottom;
  background-color: currentColor;
  // stylelint-disable-next-line property-blacklist
  border-radius: 50%;
  opacity: 0;
  animation: spinner-grow .75s linear infinite;
}

.spinner-grow-sm {
  width: $spinner-width-sm;
  height: $spinner-height-sm;
}

// stylelint-disable declaration-no-important

.align-baseline    { vertical-align: baseline !important; } // Browser default
.align-top         { vertical-align: top !important; }
.align-middle      { vertical-align: middle !important; }
.align-bottom      { vertical-align: bottom !important; }
.align-text-bottom { vertical-align: text-bottom !important; }
.align-text-top    { vertical-align: text-top !important; }

// stylelint-disable declaration-no-important

@each $color, $value in $theme-colors {
  @include bg-variant(".bg-#{$color}", $value);
}

@if $enable-gradients {
  @each $color, $value in $theme-colors {
    @include bg-gradient-variant(".bg-gradient-#{$color}", $value);
  }
}

.bg-white {
  background-color: $white !important;
}

.bg-transparent {
  background-color: transparent !important;
}

// stylelint-disable property-blacklist, declaration-no-important

//
// Border
//

.border         { border: $border-width solid $border-color !important; }
.border-top     { border-top: $border-width solid $border-color !important; }
.border-right   { border-right: $border-width solid $border-color !important; }
.border-bottom  { border-bottom: $border-width solid $border-color !important; }
.border-left    { border-left: $border-width solid $border-color !important; }

.border-0        { border: 0 !important; }
.border-top-0    { border-top: 0 !important; }
.border-right-0  { border-right: 0 !important; }
.border-bottom-0 { border-bottom: 0 !important; }
.border-left-0   { border-left: 0 !important; }

@each $color, $value in $theme-colors {
  .border-#{$color} {
    border-color: $value !important;
  }
}

.border-white {
  border-color: $white !important;
}

//
// Border-radius
//

.rounded-sm {
  border-radius: $border-radius-sm !important;
}

.rounded {
  border-radius: $border-radius !important;
}

.rounded-top {
  border-top-left-radius: $border-radius !important;
  border-top-right-radius: $border-radius !important;
}

.rounded-right {
  border-top-right-radius: $border-radius !important;
  border-bottom-right-radius: $border-radius !important;
}

.rounded-bottom {
  border-bottom-right-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

.rounded-left {
  border-top-left-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;
}

.rounded-lg {
  border-radius: $border-radius-lg !important;
}

.rounded-circle {
  border-radius: 50% !important;
}

.rounded-pill {
  border-radius: $rounded-pill !important;
}

.rounded-0 {
  border-radius: 0 !important;
}

.clearfix {
  @include clearfix();
}

// stylelint-disable declaration-no-important

//
// Utilities for common `display` values
//

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $value in $displays {
      .d#{$infix}-#{$value} { display: $value !important; }
    }
  }
}


//
// Utilities for toggling `display` in print
//

@media print {
  @each $value in $displays {
    .d-print-#{$value} { display: $value !important; }
  }
}

// Credit: Nicolas Gallagher and SUIT CSS.

.embed-responsive {
  position: relative;
  display: block;
  width: 100%;
  padding: 0;
  overflow: hidden;

  &::before {
    display: block;
    content: "";
  }

  .embed-responsive-item,
  iframe,
  embed,
  object,
  video {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0;
  }
}

@each $embed-responsive-aspect-ratio in $embed-responsive-aspect-ratios {
  $embed-responsive-aspect-ratio-x: nth($embed-responsive-aspect-ratio, 1);
  $embed-responsive-aspect-ratio-y: nth($embed-responsive-aspect-ratio, 2);

  .embed-responsive-#{$embed-responsive-aspect-ratio-x}by#{$embed-responsive-aspect-ratio-y} {
    &::before {
      padding-top: percentage($embed-responsive-aspect-ratio-y / $embed-responsive-aspect-ratio-x);
    }
  }
}

// stylelint-disable declaration-no-important

// Flex variation
//
// Custom styles for additional flex alignment options.

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .flex#{$infix}-row            { flex-direction: row !important; }
    .flex#{$infix}-column         { flex-direction: column !important; }
    .flex#{$infix}-row-reverse    { flex-direction: row-reverse !important; }
    .flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }

    .flex#{$infix}-wrap         { flex-wrap: wrap !important; }
    .flex#{$infix}-nowrap       { flex-wrap: nowrap !important; }
    .flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }
    .flex#{$infix}-fill         { flex: 1 1 auto !important; }
    .flex#{$infix}-grow-0       { flex-grow: 0 !important; }
    .flex#{$infix}-grow-1       { flex-grow: 1 !important; }
    .flex#{$infix}-shrink-0     { flex-shrink: 0 !important; }
    .flex#{$infix}-shrink-1     { flex-shrink: 1 !important; }

    .justify-content#{$infix}-start   { justify-content: flex-start !important; }
    .justify-content#{$infix}-end     { justify-content: flex-end !important; }
    .justify-content#{$infix}-center  { justify-content: center !important; }
    .justify-content#{$infix}-between { justify-content: space-between !important; }
    .justify-content#{$infix}-around  { justify-content: space-around !important; }

    .align-items#{$infix}-start    { align-items: flex-start !important; }
    .align-items#{$infix}-end      { align-items: flex-end !important; }
    .align-items#{$infix}-center   { align-items: center !important; }
    .align-items#{$infix}-baseline { align-items: baseline !important; }
    .align-items#{$infix}-stretch  { align-items: stretch !important; }

    .align-content#{$infix}-start   { align-content: flex-start !important; }
    .align-content#{$infix}-end     { align-content: flex-end !important; }
    .align-content#{$infix}-center  { align-content: center !important; }
    .align-content#{$infix}-between { align-content: space-between !important; }
    .align-content#{$infix}-around  { align-content: space-around !important; }
    .align-content#{$infix}-stretch { align-content: stretch !important; }

    .align-self#{$infix}-auto     { align-self: auto !important; }
    .align-self#{$infix}-start    { align-self: flex-start !important; }
    .align-self#{$infix}-end      { align-self: flex-end !important; }
    .align-self#{$infix}-center   { align-self: center !important; }
    .align-self#{$infix}-baseline { align-self: baseline !important; }
    .align-self#{$infix}-stretch  { align-self: stretch !important; }
  }
}

// stylelint-disable declaration-no-important

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .float#{$infix}-left  { float: left !important; }
    .float#{$infix}-right { float: right !important; }
    .float#{$infix}-none  { float: none !important; }
  }
}

// stylelint-disable declaration-no-important

@each $value in $overflows {
  .overflow-#{$value} { overflow: $value !important; }
}

// stylelint-disable declaration-no-important

// Common values
@each $position in $positions {
  .position-#{$position} { position: $position !important; }
}

// Shorthand

.fixed-top {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  z-index: $zindex-fixed;
}

.fixed-bottom {
  position: fixed;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $zindex-fixed;
}

.sticky-top {
  @supports (position: sticky) {
    position: sticky;
    top: 0;
    z-index: $zindex-sticky;
  }
}

//
// Screenreaders
//

.sr-only {
  @include sr-only();
}

.sr-only-focusable {
  @include sr-only-focusable();
}

// stylelint-disable declaration-no-important

.shadow-sm { box-shadow: $box-shadow-sm !important; }
.shadow { box-shadow: $box-shadow !important; }
.shadow-lg { box-shadow: $box-shadow-lg !important; }
.shadow-none { box-shadow: none !important; }

// stylelint-disable declaration-no-important

// Width and height

@each $prop, $abbrev in (width: w, height: h) {
  @each $size, $length in $sizes {
    .#{$abbrev}-#{$size} { #{$prop}: $length !important; }
  }
}

.mw-100 { max-width: 100% !important; }
.mh-100 { max-height: 100% !important; }

// Viewport additional helpers

.min-vw-100 { min-width: 100vw !important; }
.min-vh-100 { min-height: 100vh !important; }

.vw-100 { width: 100vw !important; }
.vh-100 { height: 100vh !important; }

//
// Stretched link
//

.stretched-link {
  &::after {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1;
    // Just in case `pointer-events: none` is set on a parent
    pointer-events: auto;
    content: "";
    // IE10 bugfix, see https://stackoverflow.com/questions/16947967/ie10-hover-pseudo-class-doesnt-work-without-background-color
    background-color: rgba(0, 0, 0, 0);
  }
}

// stylelint-disable declaration-no-important

// Margin and Padding

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $length in $spacers {
        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
        .#{$abbrev}t#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-top: $length !important;
        }
        .#{$abbrev}r#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-right: $length !important;
        }
        .#{$abbrev}b#{$infix}-#{$size},
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-bottom: $length !important;
        }
        .#{$abbrev}l#{$infix}-#{$size},
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-left: $length !important;
        }
      }
    }

    // Negative margins (e.g., where `.mb-n1` is negative version of `.mb-1`)
    @each $size, $length in $spacers {
      @if $size != 0 {
        .m#{$infix}-n#{$size} { margin: -$length !important; }
        .mt#{$infix}-n#{$size},
        .my#{$infix}-n#{$size} {
          margin-top: -$length !important;
        }
        .mr#{$infix}-n#{$size},
        .mx#{$infix}-n#{$size} {
          margin-right: -$length !important;
        }
        .mb#{$infix}-n#{$size},
        .my#{$infix}-n#{$size} {
          margin-bottom: -$length !important;
        }
        .ml#{$infix}-n#{$size},
        .mx#{$infix}-n#{$size} {
          margin-left: -$length !important;
        }
      }
    }

    // Some special margin utils
    .m#{$infix}-auto { margin: auto !important; }
    .mt#{$infix}-auto,
    .my#{$infix}-auto {
      margin-top: auto !important;
    }
    .mr#{$infix}-auto,
    .mx#{$infix}-auto {
      margin-right: auto !important;
    }
    .mb#{$infix}-auto,
    .my#{$infix}-auto {
      margin-bottom: auto !important;
    }
    .ml#{$infix}-auto,
    .mx#{$infix}-auto {
      margin-left: auto !important;
    }
  }
}

// stylelint-disable declaration-no-important

//
// Text
//

.text-monospace { font-family: $font-family-monospace !important; }

// Alignment

.text-justify  { text-align: justify !important; }
.text-wrap     { white-space: normal !important; }
.text-nowrap   { white-space: nowrap !important; }
.text-truncate { @include text-truncate; }

// Responsive alignment

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .text#{$infix}-left   { text-align: left !important; }
    .text#{$infix}-right  { text-align: right !important; }
    .text#{$infix}-center { text-align: center !important; }
  }
}

// Transformation

.text-lowercase  { text-transform: lowercase !important; }
.text-uppercase  { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }

// Weight and italics

.font-weight-light   { font-weight: $font-weight-light !important; }
.font-weight-lighter { font-weight: $font-weight-lighter !important; }
.font-weight-normal  { font-weight: $font-weight-normal !important; }
.font-weight-bold    { font-weight: $font-weight-bold !important; }
.font-weight-bolder  { font-weight: $font-weight-bolder !important; }
.font-italic         { font-style: italic !important; }

// Contextual colors

.text-white { color: $white !important; }

@each $color, $value in $theme-colors {
  @include text-emphasis-variant(".text-#{$color}", $value);
}

.text-body { color: $body-color !important; }
.text-muted { color: $text-muted !important; }

.text-black-50 { color: rgba($black, .5) !important; }
.text-white-50 { color: rgba($white, .5) !important; }

// Misc

.text-hide {
  @include text-hide($ignore-warning: true);
}

.text-decoration-none { text-decoration: none !important; }

.text-break {
  word-break: break-word !important; // IE & < Edge 18
  overflow-wrap: break-word !important;
}

// Reset

.text-reset { color: inherit !important; }

// stylelint-disable declaration-no-important

//
// Visibility utilities
//

.visible {
  visibility: visible !important;
}

.invisible {
  visibility: hidden !important;
}


// stylelint-disable declaration-no-important, selector-no-qualifying-type

// Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css

// ==========================================================================
// Print styles.
// Inlined to avoid the additional HTTP request:
// https://www.phpied.com/delay-loading-your-print-css/
// ==========================================================================

@if $enable-print-styles {
  @media print {
    *,
    *::before,
    *::after {
      // Bootstrap specific; comment out `color` and `background`
      //color: $black !important; // Black prints faster
      text-shadow: none !important;
      //background: transparent !important;
      box-shadow: none !important;
    }

    a {
      &:not(.btn) {
        text-decoration: underline;
      }
    }

    // Bootstrap specific; comment the following selector out
    //a[href]::after {
    //  content: " (" attr(href) ")";
    //}

    abbr[title]::after {
      content: " (" attr(title) ")";
    }

    // Bootstrap specific; comment the following selector out
    //
    // Don't show links that are fragment identifiers,
    // or use the `javascript:` pseudo protocol
    //

    //a[href^="#"]::after,
    //a[href^="javascript:"]::after {
    // content: "";
    //}

    pre {
      white-space: pre-wrap !important;
    }
    pre,
    blockquote {
      border: $border-width solid $gray-500; // Bootstrap custom code; using `$border-width` instead of 1px
      page-break-inside: avoid;
    }

    //
    // Printing Tables:
    // http://css-discuss.incutio.com/wiki/Printing_Tables
    //

    thead {
      display: table-header-group;
    }

    tr,
    img {
      page-break-inside: avoid;
    }

    p,
    h2,
    h3 {
      orphans: 3;
      widows: 3;
    }

    h2,
    h3 {
      page-break-after: avoid;
    }

    // Bootstrap specific changes start

    // Specify a size and min-width to make printing closer across browsers.
    // We don't set margin here because it breaks `size` in Chrome. We also
    // don't use `!important` on `size` as it breaks in Chrome.
    @page {
      size: $print-page-size;
    }
    body {
      min-width: $print-body-min-width !important;
    }
    .container {
      min-width: $print-body-min-width !important;
    }

    // Bootstrap components
    .navbar {
      display: none;
    }
    .badge {
      border: $border-width solid $black;
    }

    .table {
      border-collapse: collapse !important;

      td,
      th {
        background-color: $white !important;
      }
    }

    .table-bordered {
      th,
      td {
        border: 1px solid $gray-300 !important;
      }
    }

    .table-dark {
      color: inherit;

      th,
      td,
      thead th,
      tbody + tbody {
        border-color: $table-border-color;
      }
    }

    .table .thead-dark th {
      color: inherit;
      border-color: $table-border-color;
    }

    // Bootstrap specific changes end
  }
}



// Boostrap Component Overrides
// MUST come after Bootstrap Import


// Override column width at xs screen size
// To allow for Side Tabs
@media (max-width: 575px) {  
 .container{
  padding-left: 30px;
  padding-right: 30px;
 }
}


// ==================================================================




// Global Styles
// Sard icon styles. 
// These mimic the font awesome styles with some adjustment tweaks.

.sicon {
  font-family: "sard-icons";
  position: relative;
  top: .13rem;

  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1; }

.sicon-lg {
  font-size: 1.2rem;
  line-height: 0.75em;
  vertical-align: -.0667rem; 
}

.sicon-xs {
  font-size: .70rem; 
  top: .08rem;
}

.sicon-sm {
  font-size: .82em;
  top: .08rem;
 }

.sicon-1x {
  font-size: 1em; }

.sicon-2x {
  font-size: 1.83rem; 
  top: .2rem;
}

.sicon-3x {
  font-size: 2.9em;
  top: .3rem; 
}

.sicon-4x {
  font-size: 3.62rem; 
  top: .42rem; 
}

.sicon-5x {
  font-size: 4.52rem; 
  top: .52rem;
}

.sicon-6x {
  font-size: 5.45rem; 
  top: .62rem;
}

.sicon-7x {
  font-size: 6.4rem; 
  top: .75rem;
}

.sicon-8x {
  font-size: 7.32rem; 
  top: .87rem;
}

.sicon-9x {
  font-size: 8.2rem; 
  top: .97rem;
}

.sicon-10x {
  font-size: 9.1rem; 
  top: 1.1rem;
}

.sicon-fw {
  text-align: center;
  width: 1.25em; }

.sicon-ul {
  list-style-type: none;
  margin-left: 2.5em;
  padding-left: 0; }
  .sicon-ul > li {
    position: relative; }

.sicon-li {
  left: -2em;
  position: absolute;
  text-align: center;
  width: 2em;
  line-height: inherit; }

.sicon-border {
  border: solid 0.08em #eee;
  border-radius: .1em;
  padding: .2em .25em .15em; }

.sicon-pull-left {
  float: left; }

.sicon-pull-right {
  float: right; }

.sicon.fa-pull-left {
  margin-right: .3em; }

.sicon.fa-pull-right {
  margin-left: .3em; }

.sicon-spin {
  -webkit-animation: fa-spin 2s infinite linear;
          animation: fa-spin 2s infinite linear; }

.sicon-pulse {
  -webkit-animation: fa-spin 1s infinite steps(8);
          animation: fa-spin 1s infinite steps(8); }

@-webkit-keyframes sicon-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes sicon-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  100% {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

.sicon-rotate-90 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";
  filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=1)";
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg); }

.sicon-rotate-180 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";
  filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2)";
  -webkit-transform: rotate(180deg);
          transform: rotate(180deg); }

.sicon-rotate-270 {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";
  filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=3)";
  -webkit-transform: rotate(270deg);
          transform: rotate(270deg); }

.sicon-flip-horizontal {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";
  filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)";
  -webkit-transform: scale(-1, 1);
          transform: scale(-1, 1); }

.sicon-flip-vertical {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
  filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
  -webkit-transform: scale(1, -1);
          transform: scale(1, -1); }

.sicon-flip-both, .sicon-flip-horizontal.sicon-flip-vertical {
  -ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
  filter: "progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)";
  -webkit-transform: scale(-1, -1);
          transform: scale(-1, -1); }

:root .sicon-rotate-90,
:root .sicon-rotate-180,
:root .sicon-rotate-270,
:root .sicon-flip-horizontal,
:root .sicon-flip-vertical,
:root .sicon-flip-both {
  -webkit-filter: none;
          filter: none; }

.sicon-stack {
  display: inline-block;
  height: 2em;
  line-height: 2em;
  position: relative;
  vertical-align: middle;
  width: 2.5em; }

.sicon-stack-1x,
.sicon-stack-2x {
  left: 0;
  position: absolute;
  text-align: center;
  width: 100%; }

.sicon-stack-1x {
  line-height: inherit; }

.sicon-stack-2x {
  font-size: 2em; }

.sicon-inverse {
  color: #fff; }

// sicon Status Icons colours ===================

.sicon.sicon-status-danger, .sicon.sicon-status-danger-o {color: $RAG-danger;}
.sicon.sicon-status-success, .sicon.sicon-status-success-o {color: $RAG-success;}
.sicon.sicon-status-warning, .sicon.sicon-status-warning-o {color: $RAG-warning;}
.sicon.sicon-status-approved, .sicon.sicon-status-approved-o {color: $RAG-approved;}
.sicon.sicon-status-recommended, .sicon.sicon-status-recommended-o {color: $RAG-recommended;}
.sicon.sicon-status-submitted, .sicon.sicon-status-submitted-o {color: $RAG-submitted;}
.sicon.sicon-status-archived, .sicon.sicon-status-archived-o {color: $RAG-archived;}
.sicon.sicon-status-due, .sicon.sicon-status-due-o {color: $RAG-due;}
.sicon.sicon-status-draft, .sicon.sicon-status-draft-o {color: $RAG-draft;}

// sicon Product Icons colours ==================

.sicon.sicon-sol-360, .sicon.sicon-sol-360-o { color: $sa-360;}
.sicon.sicon-sol-a4a, .sicon.sicon-sol-a4a-o { color: $sa-A4A;}
.sicon.sicon-sol-ele, .sicon.sicon-sol-ele-o { color: $sa-eLeave;}
.sicon.sicon-sol-eros, .sicon.sicon-sol-eros-o { color: $sa-eRo;}
.sicon.sicon-sol-jp, .sicon.sicon-sol-jp-o { color: $sa-JPL;}
.sicon.sicon-sol-mrv, .sicon.sicon-sol-mrv-o { color: $sa-MRv;}
.sicon.sicon-sol-nrv, .sicon.sicon-sol-nrv-o { color: $sa-NRv;}

// ==================================================================
// Font Awesome Icons ===============================================

//https://fontawesome.com/how-to-use/on-the-web/using-with/sass
// Example of how to include Font Awesome in SCSS when linked from local
// .alert-close {
//   // @include fa-icon;
//   @extend .far;

//   &:before {
//     content:fa-content($fa-var-times-circle);
//   }
// }


// https://fontawesome.com/how-to-use/on-the-web/advanced/css-pseudo-elements
// Example of how to include Font Awesome in SCSS when linked from remote cdn
.fa-icon{
  display: inline-block;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased; 
  -moz-osx-font-smoothing: grayscale;
}

.alert-close::before {
  font-family: "Font Awesome 5 Free"; 
  content: "\f057";  // <i class="fas fa-times-circle"></i>
  font-weight: 400;  // Set the font-weight: 900 (Solid), 400 (Regular or Brands), 300 (Light(pro))
}
// Scrollbars

//  Works in Chrome, Safari
  ::-webkit-scrollbar {
      width: 12px;
  }
   
  ::-webkit-scrollbar-track {
      box-shadow: inset 0 0 6px rgba(0,0,0,0.3); 
      border-radius: 10px;
      background-color: white;
  }
   
  ::-webkit-scrollbar-thumb {
      border-radius: 10px;
      background-color: $sa-grey-12;
      box-shadow: inset 0 0 6px rgba(0,0,0,0.5); 
  }

// IE 11
body, html {
  scrollbar-face-color: $sa-grey-12 !important;
  scrollbar-shadow-color: darken($sa-grey-12, 10%) !important;
  // scrollbar-highlight-color: red !important;
  // scrollbar-3dlight-color: red !important;
  // scrollbar-darkshadow-color: red !important;
  scrollbar-track-color: $sa-grey-04 !important;
  scrollbar-arrow-color: $sa-grey-12 !important;
}
/* ===================================================================================================== */
/* Smooth Scroll ======================================================================================= */
// http://www.paulund.co.uk/how-to-create-an-animated-scroll-to-top-with-jquery

.scrollToTop{
  width:30px; 
  height:30px;
  text-align:center; 
  position:fixed;
  bottom:-3px;
  left:calc(50% - 15px);
  display:none;
  color:white;
  z-index: 1000;
}
.scrollToTop:before{
  content: "\70";
  font-family: "sard-icons";
  color:white;
  font-size: 1.5em;
  border-radius: 50%;
}

.scrollToTop:hover:before{
  color:$user-primary-colour;
}

// SARD Variables

// Responsive Media Queries ---------------------
// http://thesassway.com/intermediate/responsive-web-design-in-sass-using-media-queries-in-sass-32

$break-sm: 576px;
$break-md: 768px;
$break-lg: 992px;
$break-xl: 1200px;
$break-xxl: 1590px;


@mixin respond-to($media) {
  @if $media == xs-screens {
    @media only screen and (max-width: 575px) { @content; }
  }
  @else if $media == sm-screens {
    @media only screen and (min-width: 576px) and (max-width: 767px) { @content; }
  }
  @else if $media == md-screens {
    @media only screen and (min-width: 768px) and (max-width: 991px) { @content; }
  }
  @else if $media == lg-screens {
    @media only screen and (min-width: 992px) and (max-width: 1199px) { @content; }
  }
  @else if $media == xl-screens {
    @media only screen and (min-width: 1200px) and (max-width: 1589px) { @content; }
  }
  @else if $media == xxl-screens {
    @media only screen and (min-width: 1590px) { @content; }
  }

  // Up / Down Sizes

  @else if $media == sm-break-up {
    @media only screen and (min-width: 576px) { @content; }
  }
  @else if $media == md-break-down {
    @media only screen and (max-width: 767px) { @content; }
  }
  @else if $media == md-break-up {
    @media only screen and (min-width: 768px) { @content; }
  }
  @else if $media == lg-break-down {
    @media only screen and (max-width: 991px ) { @content; }
  }
  @else if $media == lg-break-up {
    @media only screen and (min-width: 992px) { @content; }
  }
  @else if $media == xl-break-down {
    @media only screen and (max-width: 1199px ) { @content; }
  }
  @else if $media == xl-break-up {
    @media only screen and (min-width: 1200px) { @content; }
  }
  @else if $media == xxl-break-down {
    @media only screen and (max-width: 1589px ) { @content; }
  }
}

@mixin breakout{
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  padding-left: 31px;
  padding-right: 31px;
}

.breakout{
  width: 100vw;
  position: relative;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  padding-left: 31px;
  padding-right: 31px;
}
// ==================================================================

// Spacing
// Based on 16px to 1 rem
// .0625rem = 1px
// .125rem = 2px
// .1875rem = 3px
// .25rem = 4px
// 0.3125 = 5px
// .375 = 6px 
// .5rem = 8px
// 0.625rem = 10px
// .75rem = 12px
// 0.875rem = 14px
// 1rem = 16px
// 1.25rem = 20px
// 1.5 = 24px
// 1.75 = 28px
// 2rem = 32px
// 3rem = 48px

$sa-spacer-1:              .0625rem;
$sa-spacer-2:              .125rem;
$sa-spacer-3:              .1875rem;
$sa-spacer-4:              .25rem;
$sa-spacer-5:              0.3125rem;
$sa-spacer-6:              .375rem;
$sa-spacer-7:              0.4375rem;
$sa-spacer-8:              .5rem;
$sa-spacer-9:              0.5625rem;
$sa-spacer-10:             .625rem;
$sa-spacer-11:             0.6875rem;
$sa-spacer-12:             .75rem;
$sa-spacer-13:             0.8125rem;
$sa-spacer-14:             .875rem;
$sa-spacer-15:             0.9375rem;
$sa-spacer-16:             1rem;
$sa-spacer-17:             1.0625rem;
$sa-spacer-18:             1.125rem;
$sa-spacer-19:             1.1875rem;
$sa-spacer-20:             1.25rem;

$sa-spacer-y:              .25rem; // Top to Bottom // 4px
$sa-spacer-x:              0.625rem; // Left to Right // 10px

$sa-spacer-y-2x:           .5rem; // Top to Bottom
$sa-spacer-x-2x:           1.25rem; // Left to Right

$sa-spacer-y-3x:           .75rem; // Top to Bottom
$sa-spacer-x-3x:           3rem; // Left to Right

$sa-spacer-y-4x:           1rem; // Top to Bottom
$sa-spacer-x-4x:           1.5rem; // Left to Right

$sa-margin:                1rem;
$sa-margin-sm:             .75rem;

// ==================================================================


$sa-bg:                    $sa-grey-02;
$sa-heading-bg:            $sa-grey-16;

$sa-padding:               $sa-spacer-y;
$sa-body-padding:          $sa-spacer-x;
$sa-heading-padding:       $sa-spacer-y $sa-spacer-x;
$sa-heading-font-size:     1.25rem;
$sa-heading-font-weight:   300;
$sa-heading-line-height:   1.575rem;
$sa-heading-text-color:    white;

$sa-footer-padding:        $sa-heading-padding !default;
$sa-border-width:          $border-width !default;
$sa-border-color:          $sa-heading-bg !default;


$sa-border-radius:         $border-radius;
$sa-inner-border-radius:   calc(#{$sa-border-radius} - #{$sa-border-width}) !default;



// //** Border color for elements within panels and cards
$sa-inner-border:          #ddd !default;
$sa-footer-bg:             $sa-heading-bg !default;


// Body adjust to allow for footer ==================================

body { margin-bottom: 70px; }

// Remove outer glow from Focus =====================================

textarea:focus, 
select:focus, 
input:focus, 
button:focus, 
.navbar-brand:focus,
.nav-link:focus,
.nav-item:focus, 
.dropdown-item:focus, 
.dropdown:focus, 
.dropdown-menu:focus {
  outline: none!important;  
  outline: -webkit-focus-ring-color none!important;
  outline-color: -webkit-focus-ring-color!important;
  outline-style: none!important;
  outline-width: none!important;
}

$sa-box-shadow:         1px 1px 2px 0px rgba(0,0,0,0.2);


// ==================================================================

// Alignments
.right, 
.align-right,
.right-align{
  text-align: right;
}
.center, 
.align-center,
.center-align{
  text-align: center;
}

.inline-block{
  display: inline-block;
}

.inset{
  padding-left: 1rem;
  padding-right: 1rem;
  max-width: calc(100% - 2rem);
}
.inset-x2{
  padding-left: 2rem;
  padding-right: 2rem;
  max-width: calc(100% - 4rem);
}
.inset-x3{
  padding-left: 3rem;
  padding-right: 3rem;
  max-width: calc(100% - 6rem);
}
.inset-x4{
  padding-left: 4rem;
  padding-right: 4rem;
  max-width: calc(100% - 8rem);
}


// ==============================================
// Adjust vertical positioning dpending on content
body{ 
  padding-top: 20px; 
  @media (max-width: 991.98px){ padding-top: 10px; }
}

#navbar + #navbar-admin{
  margin-top: 50px;
  @media (max-width: 991.98px){ margin-top: 35px; }
}

// Breadcrumbs
#navbar-admin + #breadcrumb-top{
  margin-top: 35px;
  @media (max-width: 991.98px){ margin-top: 35px; }
}
#navbar + #breadcrumb-top{
  margin-top: 50px;
  @media (max-width: 991.98px){ margin-top: 35px; }
}
#navbar + #navbar-admin + #breadcrumb-top{
  margin-top: 85px;
  @media (max-width: 991.98px){ margin-top: 70px; }
}

// container

#navbar + .container{
  margin-top: 50px;
  @media (max-width: 991.98px){  }
}
#navbar + #navbar-admin + .container{
  margin-top: 75px;
  @media (max-width: 991.98px){  }
}
#navbar-admin + .container{
  margin-top: 35px;
  @media (max-width: 991.98px){  }
}
#navbar + #breadcrumb-top + .container{
  margin-top: 75px;
  @media (max-width: 991.98px){  }
}
#navbar + #navbar-admin + #breadcrumb-top + .container{
  margin-top: 110px;
  @media (max-width: 991.98px){  }
}
#navbar-admin + #breadcrumb-top + .container{
  margin-top: 60px;
  @media (max-width: 991.98px){  }
}
#breadcrumb-top + .container{
  margin-top: 35px;
  @media (max-width: 991.98px){  }
}


// Navbar Layering ==============================
.navbar.fixed-top{
  z-index: 4002;
}
#navbar-admin{
  z-index: 4001;
}
#breadcrumb-top{
  z-index: 4000;
}
// Typography

// Roboto =================================================================
@mixin roboto-thin {
    font-family: "Roboto", sans-serif;
    font-weight: 100;
}
@mixin roboto-thin-italic {
    font-family: "Roboto", sans-serif;
    font-weight: 100;
    font-style: italic;
}
@mixin roboto-light {
    font-family: "Roboto", sans-serif;
    font-weight: 300;
}
@mixin roboto-light-italic {
    font-family: "Roboto", sans-serif;
    font-weight: 300;
    font-style: italic;
}
@mixin roboto-regular {
    font-family: "Roboto", sans-serif;
    font-weight: 400;
}
@mixin roboto-regular-italic {
    font-family: "Roboto", sans-serif;
    font-weight: 500;
    font-style: italic;
}
@mixin roboto-medium {
    font-family: "Roboto", sans-serif;
    font-weight: 500;
}
@mixin roboto-medium-italic {
    font-family: "Roboto", sans-serif;
    font-weight: 500;
    font-style: italic;
}
@mixin roboto-bold {
    font-family: "Roboto", sans-serif;
    font-weight: 700;
}
@mixin roboto-bold-italic {
    font-family: "Roboto", sans-serif;
    font-weight: 700;
    font-style: italic;
}
@mixin roboto-black {
    font-family: "Roboto", sans-serif;
    font-weight: 900;
}
@mixin roboto-black-italic {
    font-family: "Roboto", sans-serif;
    font-weight: 900;
    font-style: italic;
}

// letter-spacing
$tight: -0.05rem; /* 16 * 0.0312 = 1/2px */
$reduced: -0.025rem; /* 16 * 0.0312 = 1/2px */
$vslight: 0.025rem;
$slight: 0.05rem; /* 16 * 0.0312 = 1/2px */
$single: 0.0625rem; /* 16 * 0.0625 = 1px */
$double: 0.125rem; /* 16 * 0.125 = 2px */




// Sizes
h1, h2, h3, h4, h5, h6, p, em{
  font-weight:normal;
  font-style:normal;
  color: $bodytext;
}
// http://www.standardista.com/px-to-rem-conversion-if-root-font-size-is-16px/
h1,.h1 {
  @include roboto-light;
  font-size: 2.25rem; // 36px
  letter-spacing: $reduced;
  margin-left:-0.05rem;
  @media (max-width: 767px) {
    font-size: 2.2em;
  }
}

h2,.h2 {
  @include roboto-light;
  font-size: 2rem; //32px
  margin-left:-0.05rem;
  @media (max-width: 767px) {
    font-size: 2.0em;
    margin-left:0;
  }
}

h3,.h3 {
  @include roboto-regular;
  font-size: 1.5rem; // 24px
  margin-left:-0.05em;
  margin-top: 15px;
  @media (max-width: 767px) {
    font-size: 1.6em;
    margin-left:0;
  }
}

h4,.h4 {
  @include roboto-medium;
  font-size:  1.375rem; // 22px
  @media (max-width: 767px) {
    font-size: 1.3em;
  }
}

h5,.h5 {
  @include roboto-bold;
  font-size: 1.125rem; // 18px
}

h6,.h6 {
  @include roboto-black;
  letter-spacing: $vslight;
  font-size: 0.875rem; // 14px
}



.display-1, .display-2, .display-3, .display-4{
  @include roboto-thin;
}

p{
  @include roboto-regular;
  font-size: 0.9375rem; // 15px
  line-height: 1.25rem;
}

// base headings (this have sit right on the item below)
h1.base, .h1.base {
  margin-bottom:-0.2rem;
}

h2.base, .h2.base {
  margin-bottom:-0.05rem;
}

h3.base, .h3.base {
  margin-bottom:-0.05rem;
}

h4.base, .h4.base,
h5.base, .h5.base,
h6.base, .h6.base,
p.base {
  margin-bottom:0;
}

// Various =============================
b, strong, .bold, .strong {
  font-weight: 900;
}

.text-muted { 
  color: $sa-grey-06 !important;
}
// List Styles ==================================

$sa-bullet-size: 0.6rem;

ul{
  padding: 0;
  font-size: 0.9375rem; // 15px
  line-height: 1.25rem;
}

ol{
  padding-left:30px;
  font-size: 0.9375rem; // 15px
  line-height: 1.25rem;
}

// Bullet Points ========================
ul{
  list-style: none;
  text-indent: -$sa-bullet-size; // Hanging bullet
}

ul li{
  padding-left: $sa-bullet-size * 1.75; // Hanging bullet
  padding-bottom: 5px;
}
ul.flat{margin-bottom: 0;}

ul li::before{
  font-family: "Font Awesome 5 Free";
  content: "\f111" ; // Circle
  font-weight: 900;
  // padding-right:7px;
  font-size: $sa-bullet-size;
  position:relative;
  top: -$sa-bullet-size / 4;
  left: -$sa-bullet-size / 1.75;
}

ul.open-bullet li::before,
ul li.open-bullet::before{
  font-weight: 100;
}

// Nested Bullets ===============================

ul > ul{
  list-style: none;
  text-indent: 0px; // Hanging bullet
}
ul > ul li{
  text-indent: -$sa-bullet-size;
  padding-left: $sa-bullet-size * 3.5;
}

ul.no-bullet > ul{
  list-style: none;
  text-indent: $sa-bullet-size; // Hanging bullet
}

ul.no-bullet > ul li{
  text-indent: 0rem;
  padding-left: 0.6rem;
}



// No Bullets ===================================
ul.no-bullet{ // Overrides indents when no bullet
  text-indent: 0; 
  li{ 
    padding-left: 0; 
  }
  li:before{ // Removes Bullets
    content: none;
    display:none;
  }
}

.no-bullet li:before{ // Removes Bullets
  content: none;
  display:none;
}

.no-bullet ul li:before{ // Removes Bullets
  content: none;
  display:none;
}
li.no-bullet{
  text-indent: 0;
}
li.no-bullet:before{ // Removes Bullets
  content: none;
  display:none;
}

// List Groups ==================================
ul.list-group{
  text-indent: 0;
}
ul.list-group{
  list-style: none;
  text-indent: -$sa-bullet-size; // Hanging bullet
}

ul.list-group li{
  // padding-left: $sa-bullet-size * 1.5; // Hanging bullet
  padding-left: ($sa-bullet-size + 1rem); // Hanging bullet
  padding-bottom: 5px;
}

ul.no-bullet.list-group{ // Overrides indents when no bullet
  text-indent: 0; 
  li.list-group-item{ 
    padding-left: 0.5em; 
  }
}
ul.no-bullet.list-group li:before{ // Removes Bullets
  content: none;
  display:none;
}


// Navbar & Dropdowns ===========================

ul.navbar-nav{ // Overrides indents when no bullet
  text-indent: 0; 
  li{ 
    padding: 0; 
  }
  li:before{ // Removes Bullets
    content: none;
    display:none;
  }
  ul{ text-indent: 0; }
}

ul.nav{ // Overrides indents when no bullet
  text-indent: 0; 
  li{ 
    padding: 0; 
  }
  li:before{ // Removes Bullets
    content: none;
    display:none;
  }
  ul{ text-indent: 0; }
}

ul.pagination{ // Overrides indents when no bullet
  text-indent: 0; 
  li{ 
    padding: 0; 
  }
  li:before{ // Removes Bullets
    content: none;
    display:none;
  }
  ul{ text-indent: 0; }
}

// Colouring ====================================

ul.list-primary{
  li::before{ color: $user-primary-colour; }
}
ul{
  li.list-primary::before{ color: $user-primary-colour; }
}

ul.list-secondary{
  li::before{ color: $secondary; }
}
ul{
  li.list-secondary::before{ color: $secondary; }
}


// Line break issue{
  ul li br.line-break {
    display: block;
    padding-left: 30px;
    content: " ";
 }
.multi-column-2, .multi-column-3, .multi-column-4 {
    column-gap: 30px;
    column-rule: 1px solid $sa-grey-06;
    column-rule-width: 1px;
  }
  .multi-column-2-client, .multi-column-3-client, .multi-column-4-client {
    column-gap: 30px;
    column-rule: 1px solid $user-primary-colour;
    column-rule-width: 1px;
  }
  
  .multi-column-2-admin, .multi-column-3-admin, .multi-column-4-admin {
    column-gap: 30px;
    column-rule: 1px solid $admin-primary-colour;
    column-rule-width: 1px;
  }
  
  .multi-column-2-dark, .multi-column-3-dark, .multi-column-4-dark {
    column-gap: 30px;
    column-rule: 1px solid $sa-grey-18;
    column-rule-width: 1px;
  }
  
  .multi-column-2-white, .multi-column-3-white, .multi-column-4-white {
    column-gap: 30px;
    column-rule: 1px solid white;
    column-rule-width: 1px;
  }
  
  
  // Extra Small screens
  @media (max-width: 767px) {
    .multi-column-2, .multi-column-3, .multi-column-4,
    .multi-column-2-client, .multi-column-3-client, .multi-column-4-client,
    .multi-column-2-admin, .multi-column-3-admin, .multi-column-4-admin,
    .multi-column-2-dark, .multi-column-3-dark, .multi-column-4-dark,
    .multi-column-2-white, .multi-column-3-white, .multi-column-4-white {
      column-count: 1;
    }
  }
  
  // Small screens
  @media (min-width: 768px) and (max-width: 991px) {
    .multi-column-2, .multi-column-3, .multi-column-4,
    .multi-column-2-client, .multi-column-3-client, .multi-column-4-client,
    .multi-column-2-admin, .multi-column-3-admin, .multi-column-4-admin,
    .multi-column-2-dark, .multi-column-3-dark, .multi-column-4-dark,
    .multi-column-2-white, .multi-column-3-white, .multi-column-4-white {
      column-count: 2;
    }
  }
  
  
  // Medium screens
  @media (min-width: 992px) and (max-width: 1199px) {
    .multi-column-2,
    .multi-column-2-client,
    .multi-column-2-admin,
    .multi-column-2-dark,
    .multi-column-2-white {
      column-count: 2;
    }
    .multi-column-3, .multi-column-4,
    .multi-column-3-client, .multi-column-4-client,
    .multi-column-3-admin, .multi-column-4-admin,
    .multi-column-3-dark, .multi-column-4-dark,
    .multi-column-3-white, .multi-column-4-white {
      column-count: 3;
    }
  }
  
  
  // Large screens
  @media (min-width: 1200px) {
    .multi-column-2,
    .multi-column-2-client,
    .multi-column-2-admin,
    .multi-column-2-dark,
    .multi-column-2-white {
      column-count: 2;
    }
    .multi-column-3,
    .multi-column-3-client,
    .multi-column-3-admin,
    .multi-column-3-dark,
    .multi-column-3-white {
      column-count: 3;
    }
    .multi-column-4,
    .multi-column-4-client,
    .multi-column-4-admin,
    .multi-column-4-dark,
    .multi-column-4-white {
      column-count: 4;
    }
  }
  
  // Leads
  .leads-multi-column-2-col,.leads-multi-column-full {
    column-gap: 30px;
    column-rule: 1px solid white;
    column-rule-width: 1px;
  }
  .leads-multi-column-2-col{
    @media (max-width: 414px){
      column-count: 1;
    }
      @media (min-width: 415px){
      column-count: 2;
    }
  }
  .leads-multi-column-full{
    @media (max-width: 414px){
      column-count: 1;
    }
      @media (min-width: 415px) and (max-width: 991px){
      column-count: 2;
    }
    @media (min-width: 992px) and (max-width: 1199px){
      column-count: 3;
    }
    @media (min-width: 1200px){
      column-count: 4;
    }
  }

// Links

$text-link:             $link-color;
$text-link-hover:       darken($link-color, 15%);
$text-link-active:      darken($link-color, 20%);

a{
  transition: all 320ms ease;
  color: $text-link;
  text-decoration: none;
  &:visited{
    color: $text-link;
  }
  &:focus,
  &:hover{
    color: $text-link-hover;
    text-decoration: none;
  } 
  &:active{
    color: $text-link-active;
    text-decoration: none;
  }
}

a:not([href]):not([tabindex]) {
  transition: all 320ms ease;
  color: $text-link;
  text-decoration: none;
  &:visited{
    color: $text-link;
  }
  &:focus,
  &:hover{
    color: $text-link-hover;
    text-decoration: none;
  } 
  &:active{
    color: $text-link-active;
    text-decoration: none;
  }
}

// Cards / Panels / Fieldsets
.card-header,
.card-footer,
.panel-heading,
.panel-header,
.panel-footer,
legend,
.form-footer{
  a{
    &:focus,
    &:hover{
      color: lighten($user-primary-colour, 5%);
    } 
    &:active{
      color: lighten($user-primary-colour, 10%);
    }
  }
} 

// Link Icons ===============

// PDF
.link-icon{
  padding-left: 1.375rem ; // 22px
  text-indent: -1.375rem ; // 22px
  display: inline-block;
  line-height: 1.25rem;
}

p.link-icon,
p.link-icon a,
span.link-icon,
span.link-icon a, 
a.link-icon{
  margin-bottom: 0.25rem!important;
}



$link-icon-padding: 0.25rem; // 4px

// Audio Files
p.link-audio a:before,
p.audio a:before,
a.link-audio:before,
a.audio:before,
span.link-audio a:before,
span.audio a:before
{
  font-family: "Font Awesome 5 Free"; 
  content: "\f1c7" ;
  padding-right: $link-icon-padding ;
  color:$text;
  font-size: 1.2rem;
  position: relative;
  top: 2px;
}
p.link-audio a:hover:before,
p.audio a:hover:before,
a.link-audio:hover:before,
a.audio:hover:before,
span.link-audio a:hover:before,
span.audio a:hover:before
{
  font-weight: 900;
}


// PDF Files
p.link-pdf a:before,
p.pdf a:before,
a.link-pdf:before,
a.pdf:before,
span.link-pdf a:before,
span.pdf a:before
{
  font-family: "Font Awesome 5 Free"; 
  content: "\f1c1" ;
  padding-right: $link-icon-padding ;
  color:$text;
  font-size: 1.2rem;
  position: relative;
  top: 2px;
}

p.link-pdf a:hover:before,
p.pdf a:hover:before,
a.link-pdf:hover:before,
a.pdf:hover:before,
span.link-pdf a:hover:before,
span.pdf a:hover:before
{
  font-weight: 900;
}


// DOC Files
p.link-doc a:before,
p.doc a:before,
a.link-doc:before,
a.doc:before,
span.link-doc a:before,
span.doc a:before,

p.link-docm a:before,
p.docm a:before,
a.link-docm,
a.docm,
span.link-docm a:before,
span.docm a:before,

p.link-docx a:before,
p.docx a:before,
a.link-docx,
a.docx,
span.link-docx a:before,
span.docx a:before
{
  font-family: "Font Awesome 5 Free"; 
  content: "\f1c2" ;
  padding-right: $link-icon-padding ;
  color:$text;
  font-size: 1.2rem;
  position: relative;
  top: 2px;
}

p.link-doc a:hover:before,
p.doc a:hover:before,
a.link-doc:before,
a.doc:before,
span.link-doc a:hover:before,
span.doc a:hover:before,

p.link-docm a:hover:before,
p.docm a:hover:before,
a.link-docm,
a.docm,
span.link-docm a:hover:before,
span.docm a:hover:before,

p.link-docx a:hover:before,
p.docx a:hover:before,
a.link-docx,
a.docx,
span.link-docx a:hover:before,
span.docx a:hover:before
{
  font-weight: 900;
}


// TEXT Files
p.link-txt a:before,
p.txt a:before,
a.link-txt:before,
a.txt:before,
span.link-txt a:before,
span.txt a:before,

p.link-odt a:before,
p.odt a:before,
a.link-odt,
a.odt,
span.link-odt a:before,
span.odt a:before,

p.link-rtf a:before,
p.rtf a:before,
a.link-rtf,
a.rtf,
span.link-rtf a:before,
span.rtf a:before
{
  font-family: "Font Awesome 5 Free"; 
  content: "\f15c" ;
  padding-right: $link-icon-padding ;
  color:$text;
  font-size: 1.2rem;
  position: relative;
  top: 2px;
}
p.link-txt a:hover:before,
p.txt a:hover:before,
a.link-txt:before,
a.txt:before,
span.link-txt a:hover:before,
span.txt a:hover:before,

p.link-odt a:hover:before,
p.odt a:hover:before,
a.link-odt,
a.odt,
span.link-odt a:hover:before,
span.odt a:hover:before,

p.link-rtf a:hover:before,
p.rtf a:hover:before,
a.link-rtf,
a.rtf,
span.link-rtf a:hover:before,
span.rtf a:hover:before
{
  font-weight: 900;
}

// XLS Files
p.link-xls a:before,
p.xls a:before,
a.link-xls,
a.xls,
span.link-xls a:before,
span.xls a:before,

p.link-xlsx a:before,
p.xlsx a:before,
a.link-xlsx,
a.xlsx,
span.link-xlsx a:before,
span.xlsx a:before
{
  font-family: "Font Awesome 5 Free"; 
  content: "\f1c3" ;
  padding-right: $link-icon-padding ;
  color:$text;
  font-size: 1.2rem;
  position: relative;
  top: 2px;
}

p.link-xls a:hover:before,
p.xls a:hover:before,
a.link-xls,
a.xls,
span.link-xls a:hover:before,
span.xls a:hover:before,

p.link-xlsx a:hover:before,
p.xlsx a:hover:before,
a.link-xlsx,
a.xlsx,
span.link-xlsx a:hover:before,
span.xlsx a:hover:before
{
  font-weight: 900;
}

// Image Files
p.link-jpg a:before,
p.jpg a:before,
a.link-jpg,
a.jpg,
span.link-jpg a:before,
span.jpg a:before,

p.link-png a:before,
p.png a:before,
a.link-png,
a.png,
span.link-png a:before,
span.png a:before,

p.link-gif a:before,
p.gif a:before,
a.link-gif,
a.gif,
span.link-gif a:before,
span.gif a:before,

p.link-photo a:before,
p.photo a:before,
a.link-photo,
a.photo,
span.link-photo a:before,
span.photo a:before,

p.link-image a:before,
p.image a:before,
a.link-image,
a.image,
span.link-image a:before,
span.image a:before,

p.link-ico a:before,
p.ico a:before,
a.link-ico,
a.ico,
span.link-ico a:before,
span.ico a:before
{
  font-family: "Font Awesome 5 Free"; 
  content: "\f1c5" ;
  padding-right: $link-icon-padding ;
  color:$text;
  font-size: 1.2rem;
  position: relative;
  top: 2px;
}

p.link-jpg a:hover:before,
p.jpg a:hover:before,
a.link-jpg,
a.jpg,
span.link-jpg a:hover:before,
span.jpg a:hover:before,

p.link-png a:hover:before,
p.png a:hover:before,
a.link-png,
a.png,
span.link-png a:hover:before,
span.png a:hover:before,

p.link-gif a:hover:before,
p.gif a:hover:before,
a.link-gif,
a.gif,
span.link-gif a:hover:before,
span.gif a:hover:before,

p.link-photo a:hover:before,
p.photo a:hover:before,
a.link-photo,
a.photo,
span.link-photo a:hover:before,
span.photo a:hover:before,

p.link-image a:hover:before,
p.image a:hover:before,
a.link-image,
a.image,
span.link-image a:hover:before,
span.image a:hover:before,

p.link-ico a:hover:before,
p.ico a:hover:before,
a.link-ico,
a.ico,
span.link-ico a:hover:before,
span.ico a:hover:before
{
  font-weight: 900;
}

// Zip Files
p.link-zip a:before,
p.zip a:before,
a.link-zip,
a.zip,
span.link-zip a:before,
span.zip a:before,

p.link-archive a:before,
p.archive a:before,
a.link-archive,
a.archive,
span.link-archive a:before,
span.archive a:before
{
  font-family: "Font Awesome 5 Free"; 
  content: "\f1c6" ;
  padding-right: $link-icon-padding ;
  color:$text;
  font-size: 1.2rem;
  position: relative;
  top: 2px;
}

p.link-zip a:hover:before,
p.zip a:hover:before,
a.link-zip,
a.zip,
span.link-zip a:hover:before,
span.zip a:hover:before,

p.link-archive a:hover:before,
p.archive a:hover:before,
a.link-archive,
a.archive,
span.link-archive a:hover:before,
span.archive a:hover:before
{
  font-weight: 900;
}

// Powerpoint Files
p.link-ppt a:before,
p.ppt a:before,
a.link-ppt,
a.ppt,
span.link-ppt a:before,
span.ppt a:before,
p.link-pptx a:before,
p.pptx a:before,
a.link-pptx,
a.pptx,
span.link-pptx a:before,
span.pptx a:before,
p.link-pptm a:before,
p.pptm a:before,
a.link-pptm,
a.pptm,
span.link-pptm a:before,
span.pptm a:before
{
  font-family: "Font Awesome 5 Free"; 
  content: "\f1c4" ;
  padding-right: $link-icon-padding ;
  color:$text;
  font-size: 1.2rem;
  position: relative;
  top: 2px;
}
p.link-ppt a:hover:before,
p.ppt a:hover:before,
a.link-ppt,
a.ppt,
span.link-ppt a:hover:before,
span.ppt a:hover:before,
p.link-pptx a:hover:before,
p.pptx a:hover:before,
a.link-pptx,
a.pptx,
span.link-pptx a:hover:before,
span.pptx a:hover:before,
p.link-pptm a:hover:before,
p.pptm a:hover:before,
a.link-pptm,
a.pptm,
span.link-pptm a:hover:before,
span.pptm a:hover:before
{
  font-weight: 900;
}

// Video Files
p.link-video a:before,
p.video a:before,
a.link-video,
a.video,
span.link-video a:before,
span.video a:before
{
  font-family: "Font Awesome 5 Free"; 
  content: "\f1c8" ;
  padding-right: $link-icon-padding ;
  color:$text;
  font-size: 1.2rem;
  position: relative;
  top: 2px;
}
p.link-video a:hover:before,
p.video a:hover:before,
a.link-video,
a.video,
span.link-video a:hover:before,
span.video a:hover:before
{
  font-weight: 900;
}

// Link Icons in tables

td.link-icon a{
  display: block;
  padding-left: 1.375rem ; // 22px
  margin-bottom: 0.25rem;
}

a.link-external:before
{
  font-family: "Font Awesome 5 Free"; 
  content: "\f35d" ;
  padding-right: $link-icon-padding ;
  color:$text;
  font-weight: 900;
}


// Fonts
// Roboto
// @import url('/Users/simon/Gits/gulp4_bootstrap4_boilerplate/app/assets/scss/https:/fonts.googleapis.com/css?family=Roboto&display=swap');
// @import url('/Users/simon/Gits/gulp4_bootstrap4_boilerplate/app/assets/scss/https:/fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i');


// Font Awesome Icons
// Remote link
// @import url("/Users/simon/Gits/gulp4_bootstrap4_boilerplate/app/assets/scss/https:/use.fontawesome.com/releases/v5.9.0/css/all.css");

// Sard Icons
// @import '/Users/simon/Gits/gulp4_bootstrap4_boilerplate/app/assets/sard-icons/styles';


// BS bs-Components
// These are the basic bootstrap components, using SARD styling.
// Alert ========================================

// Base styles

// Variable Overrides

$alert-padding-y:                   $sa-spacer-y-3x;
$alert-padding-x:                   $sa-spacer-x;

$alert-bg-level:                    1 ;
$alert-border-level:                1 ;
$alert-color-level:                 1 ;



.alert {
  position: relative;
  padding: $alert-padding-y $alert-padding-x;
  margin-bottom: $alert-margin-bottom;
  border: $alert-border-width solid transparent;
  @include border-radius($alert-border-radius);
}

// // Headings for larger alerts
// .alert-heading {
//   // Specified to prevent conflicts of changing $headings-color
//   color: inherit;
// }

// // Provide class for links that match alerts
// .alert-link {
//   font-weight: $alert-link-font-weight;
// }


// // Dismissible alerts
// //
// // Expand the right padding and account for the close button's positioning.

.alert-dismissible {
  padding-right: $close-font-size + $alert-padding-x * 2;

  // Adjust close link position
  .close {
    position: absolute;
    top: 0;
    right: 0;
    padding: $alert-padding-y $alert-padding-x;
    color: white;
    opacity: 1;
    text-shadow:none;
  }
  .close:not(:disabled):not(.disabled):focus, .close:not(:disabled):not(.disabled):hover{
    color: $text;
    opacity: 1;
  }
}


// Alternate styles
//
// Generate contextual modifier classes for colorizing the alert.

@each $color, $value in $theme-colors {
  .alert-#{$color} {
    @include alert-variant(theme-color-level($color, $alert-bg-level), theme-color-level($color, $alert-border-level), theme-color-level($color, $alert-color-level));
  }
}


// Sard Styles 
.alert.alert-primary,
.alert.alert-secondary,
.alert.alert-success,
.alert.alert-danger,
.alert.alert-info,
.alert.alert-dark{
  color: white;
  & hr{
    border-top-color: white;
  }
}

.alert.alert-warning,
.alert.alert-light {
  color: $text;
  & hr{
    border-top-color: $text;
  }
}

.alert.alert-danger,
.alert.alert-dark{
  p{ color: white;}
}

.alert.alert-primary{
  background-color: $user-primary-colour;
  color: white;
}
.alert.alert-secondary{
  background-color: $admin-primary-colour;
  color: white;
}


// Badges =======================================


a.badge{
  color: white;
}

.badge{
  color: white;
}

a.badge.badge-warning,
a.badge.badge-light
{
  color: $text;
}

.badge.badge-warning,
.badge.badge-light
{
  color: $text;
}
.badge.badge-primary{ 
  background-color: $user-primary-colour; 
}
.badge.badge-user{ 
  background-color: $user-primary-colour; 
}

.badge.badge-admin{ 
  background-color: $admin-primary-colour; 
}
// Breadcrumbs ==================================


.breadcrumb{
  border-radius: 0%;
  padding: $sa-spacer-4 $sa-spacer-16;
  background-color: white;
  border-bottom: 1px solid $sa-grey-04;
}

// Fixed Top Navbar =========
#breadcrumb-top{
  z-index: 3000;
  top: 0px;
  border-bottom: 1px solid $sa-grey-04;
  background-color: white;
  // @media (max-width: 991px) {
  //   top: 38px;
  // } 

  & .breadcrumb{
    padding: $sa-spacer-4 0;
    border-bottom: none;
    margin-bottom: 0;
  }
}

// Allignments --------------

// #navbar + #navbar-admin{ top: 50px; }

// #navbar + #breadcrumb-top{ top: 50px; }

// #navbar + #navbar-admin + #breadcrumb-top{ top: 85px; }

// #navbar + .container{ margin-top: 87px;}

// #navbar + #breadcrumb-top + .container{ margin-top: 115px;}

// #navbar + #navbar-admin + #breadcrumb-top + .container{ margin-top: 150px;}

// @media (max-width: 991.98px){
//   #navbar + #navbar-admin{ top: 38px; }

//   #navbar + #breadcrumb-top{ top: 38px; }

//   #navbar + #navbar-admin + #breadcrumb-top{ top: 73px; }

//   #navbar + .container{ margin-top: 75px;}

//   #navbar + #breadcrumb-top + .container{ margin-top: 103px;}

//   #navbar + #navbar-admin + #breadcrumb-top + .container{ margin-top: 138px;}
// }
// Buttons ===================================

// Base styles

.btn{
  border-radius: 2rem;
  box-shadow: $sa-box-shadow;
  &:visited { 
    color: white; 
  }
}

.btn-xs{
  padding: 0 $sa-spacer-6;
  font-size: .75rem;
}

.btn-warning, .btn-light{
  &:visited { 
    color: $text; 
  }
}

.btn-link{
  &:visited { 
    color: $link-color; 
  }
}

.btn-primary{
  background-color: $user-primary-colour;
  border-color: $user-primary-colour;
  color: white!important;
  &:hover { 
    background-color: darken($user-primary-colour, 5%); 
    border-color: darken($user-primary-colour, 5%); 
  }
  &:active {
    background-color: darken($user-primary-colour, 10%);
    border-color: darken($user-primary-colour, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($user-primary-colour, .25);
  }
}
.btn-primary:not(:disabled):not(.disabled).active, .btn-primary:not(:disabled):not(.disabled):active, .show>.btn-primary.dropdown-toggle{
  background-color: darken($user-primary-colour, 15%);
    border-color: darken($user-primary-colour, 15%);
    box-shadow: 0 0 0 0.2rem rgba($user-primary-colour, .25);
}
.btn-primary:not(:disabled):not(.disabled).active:focus, .btn-primary:not(:disabled):not(.disabled):active:focus, .show>.btn-primary.dropdown-toggle:focus{
  background-color: darken($user-primary-colour, 15%);
  border-color: darken($user-primary-colour, 15%);
  box-shadow: 0 0 0 0.2rem rgba($user-primary-colour, .25);
}

.btn-secondary{
  background-color: $user-primary-colour-dark;
  border-color: $user-primary-colour-dark;
  color: white!important;
  &:hover { 
    background-color: darken($user-primary-colour-dark, 5%);
    border-color: darken($user-primary-colour-dark, 5%); 
  }
  &:active {
    background-color: darken($user-primary-colour-dark, 10%);
    border-color: darken($user-primary-colour-dark, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($user-primary-colour-dark, .25);
  }
}
.btn-secondary:not(:disabled):not(.disabled).active, .btn-secondary:not(:disabled):not(.disabled):active, .show>.btn-secondary.dropdown-toggle{
  background-color: darken($user-primary-colour-dark, 15%);
  border-color: darken($user-primary-colour-dark, 15%);
  box-shadow: 0 0 0 0.2rem rgba($user-primary-colour-dark, .25);
}
.btn-primary:not(:disabled):not(.disabled).active:focus, .btn-primary:not(:disabled):not(.disabled):active:focus, .show>.btn-primary.dropdown-toggle:focus{
  background-color: darken($user-primary-colour-dark, 15%);
  border-color: darken($user-primary-colour-dark, 15%);
  box-shadow: 0 0 0 0.2rem rgba($user-primary-colour-dark, .25);
}

$btn-default-colour: $sa-grey-14;
.btn-default{
  background-color: $btn-default-colour;
  color: white!important;
  &:hover { 
    background-color: darken($btn-default-colour, 5%); 
  }
  &:active {
    background-color: darken($btn-default-colour, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($btn-default-colour, .5);
  }
}
.btn-default:not(:disabled):not(.disabled).active, .btn-default:not(:disabled):not(.disabled):active, .show>.btn-default.dropdown-toggle{
  background-color: darken($btn-default-colour, 15%);
    border-color: darken($btn-default-colour, 15%);
}

.btn.btn-link{
  box-shadow: none;
}

// SARD Buttons

.btn-save{
  background-color: $success;
  color: white!important;
  &:hover { 
    background-color: darken($success, 5%); 
  }
  &:active {
    background-color: darken($success, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($success, .25);
  }
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f0c7" ;
    color:white;
    font-size: 1.45rem;
    line-height: 1rem;
    position: relative;
    top: 3.5px;
    left: -5px;
  }
}

.btn-submit{
  background-color: $success;
  color: white!important;
  &:hover { 
    background-color: darken($success, 5%); 
  }
  &:active {
    background-color: darken($success, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($success, .25);
  }
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f058" ;
    color:white;
    font-size: 1.45rem;
    line-height: 1rem;
    position: relative;
    top: 3.5px;
    left: -5px;
  }
}
.btn-sign-in{
  background-color: $success;
  color: white!important;
  &:hover { 
    background-color: darken($success, 5%); 
  }
  &:active {
    background-color: darken($success, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($success, .25);
  }
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f2f6" ;
    color:white;
    font-size: 1.45rem;
    font-weight: 900;
    line-height: 1rem;
    position: relative;
    top: 3.5px;
    left: -5px;
  }
}

.btn-sign-out{
  background-color: $success;
  color: white!important;
  &:hover { 
    background-color: darken($success, 5%); 
  }
  &:active {
    background-color: darken($success, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($success, .25);
  }
  &::after{
    font-family: "Font Awesome 5 Free"; 
    content: "\f2f5" ;
    color:white;
    font-size: 1.45rem;
    font-weight: 900;
    line-height: 1rem;
    position: relative;
    top: 3.5px;
    right: -6px;
  }
}

.btn-cancel{
  background-color: $sa-red;
  color: white!important;
  &:hover { 
    background-color: darken($sa-red, 5%); 
  }
  &:active {
    background-color: darken($sa-red, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($sa-red, .25);
  }
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f057" ;
    color:white;
    font-size: 1.45rem;
    line-height: 1rem;
    position: relative;
    top: 3.5px;
    left: -5px;
  }
}

.btn-back{
  background-color: $btn-default-colour;
  color: white!important;
  &:hover { 
    background-color: darken($btn-default-colour, 5%); 
  }
  &:active {
    background-color: darken($btn-default-colour, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($btn-default-colour, .25);
  }
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f060" ;
    color:white;
    font-weight: 900;
    font-size: 1.2rem;
    line-height: 1rem;
    position: relative;
    top: 2px;
    left: -3px;
  }
}

.btn-forward{
  background-color: $btn-default-colour;
  color: white!important;
  &:hover { 
    background-color: darken($btn-default-colour, 5%); 
  }
  &:active {
    background-color: darken($btn-default-colour, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($btn-default-colour, .25);
  }
  &::after{
    font-family: "Font Awesome 5 Free"; 
    content: "\f061" ;
    color:white;
    font-weight: 900;
    font-size: 1.2rem;
    line-height: 1rem;
    position: relative;
    top: 2px;
    right: -6px;
  }
}

.btn-download{
  background-color: $sa-info;
  color: white!important;
  &:hover { 
    background-color: darken($sa-info, 5%); 
  }
  &:active {
    background-color: darken($sa-info, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($sa-info, .25);
  }
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f381" ;
    color:white;
    font-weight: 900;
    font-size: 1.2rem;
    line-height: 1rem;
    position: relative;
    top: 2px;
    left: -3px;
  }
}

.btn-upload{
  background-color: $sa-info;
  color: white!important;
  &:hover { 
    background-color: darken($sa-info, 5%); 
  }
  &:active {
    background-color: darken($sa-info, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($sa-info, .25);
  }
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f382" ;
    color:white;
    font-weight: 900;
    font-size: 1.2rem;
    line-height: 1rem;
    position: relative;
    top: 2px;
    left: -3px;
  }
}

.btn-refresh{
  background-color: $sa-success;
  color: white!important;
  &:hover { 
    background-color: darken($sa-success, 5%); 
  }
  &:active {
    background-color: darken($sa-success, 10%);
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($sa-success, .25);
  }
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f2f1" ;
    color:white;
    font-weight: 900;
    font-size: 1.2rem;
    line-height: 1rem;
    position: relative;
    top: 2px;
    left: -3px;
  }
}
.btn-save,
.btn-sign-in,
.btn-sign-out,
.btn-submit,
.btn-cancel,
.btn-back,
.btn-forward,
.btn-download,
.btn-upload,
.btn-refresh{
  &.btn-lg::before{
    font-size: 1.7rem;
    top: 4px;
    left: -8px;
  }
  &.btn-lg::after{
    font-size: 1.7rem;
    top: 4px;
    right: -10px;
  }
}
.btn-save,
.btn-sign-in,
.btn-sign-out,
.btn-submit,
.btn-cancel,
.btn-back,
.btn-forward,
.btn-download,
.btn-upload,
.btn-refresh{
  &.btn-sm::before{
    font-size: 1.1rem;
    top: 2px;
    left: -3px;
  }
  &.btn-sm::after{
    font-size: 1.1rem;
    top: 2px;
    right: -5px;
  }
}
.btn-save,
.btn-sign-in,
.btn-sign-out,
.btn-submit,
.btn-cancel,
.btn-back,
.btn-forward,
.btn-download,
.btn-upload,
.btn-refresh{
  &.btn-xs::before{
    font-size: 0.8rem;
    top: 1px;
    left: -2px;
  }
  &.btn-xs::after{
    font-size: 0.8rem;
    top: 1px;
    right: -5px;
  }
}

.btn-notext{
  padding: $sa-spacer-6;
  &::before{
    left: 0;
    right: 0;
  }
  &::after{
    left: 0;
    right: 0;
  }
  &.btn-forward{
    padding: $sa-spacer-6 $sa-spacer-8;
  }
  &.btn-back{
    padding: $sa-spacer-6 $sa-spacer-8;
  }
  &.btn-refresh{
    padding: $sa-spacer-6 $sa-spacer-8;
  }
}

.btn-notext.btn-lg{
  padding:  $sa-spacer-7;
  &::before{
    left: 0;
    right: 0;
  }
  &::after{
    left: 0;
    right: 0;
  }
  &.btn-forward{
   padding:  $sa-spacer-7 $sa-spacer-9;
  }
  &.btn-back{
    padding:  $sa-spacer-7 $sa-spacer-9;
  }
}

.btn-notext.btn-sm{
  padding:  $sa-spacer-4;
  &::before{
    left: 0;
    right: 0;
  }
  &::after{
    left: 0;
    right: 0;
  }
  &.btn-forward{
   padding:  $sa-spacer-4 $sa-spacer-6;
  }
  &.btn-back{
    padding:  $sa-spacer-4 $sa-spacer-6;
  }
}

.btn-notext.btn-xs{
  padding:  0 $sa-spacer-2;
  &::before{
    left: 0;
    right: 0;
  }
  &::after{
    left: 0;
    right: 0;
  }
  &.btn-cancel{
    padding: 0 $sa-spacer-3;
  }
  &.btn-forward{
    padding: 0 $sa-spacer-3;
  }
  &.btn-back{
    padding: 0 $sa-spacer-3;
  }
  &.btn-refresh{
    padding: 0 $sa-spacer-3;
  }
  &.btn-upload{
    padding: 0 $sa-spacer-3;
  }
  &.btn-download{
    padding: 0 $sa-spacer-3;
  }
}

.btn-save{
  padding-left: $sa-spacer-14;
  &.btn-lg{
    padding-left: $sa-spacer-18;
  }
  &.btn-sm{
    padding-left: $sa-spacer-12;
  }
  &.btn-xs{
    padding-left: $sa-spacer-8;
  }
  &.btn-notext{
    padding-left: $sa-spacer-7;
  }
}

// Button Outlines ==============================
.btn.btn-outline-primary{
  color: $user-primary-colour;
  border-color: $user-primary-colour;
  &:hover{
    background-color: $user-primary-colour;
    color: white;
  }
}
.btn-outline-primary:not(:disabled):not(.disabled).active, .btn-outline-primary:not(:disabled):not(.disabled):active, .show>.btn-outline-primary.dropdown-toggle{
  background-color: darken($user-primary-colour, 15%);
  border-color: darken($user-primary-colour, 15%);
}

.btn.btn-outline-secondary{
  color: $user-primary-colour-dark;
  border-color: $user-primary-colour-dark;
  &:hover{
    background-color: $user-primary-colour-dark;
    color: white;
  }
}
.btn-outline-secondary:not(:disabled):not(.disabled).active, .btn-outline-secondary:not(:disabled):not(.disabled):active, .show>.btn-outline-secondary.dropdown-toggle{
  background-color: darken($user-primary-colour-dark, 15%);
  border-color: darken($user-primary-colour-dark, 15%);
}

.btn.btn-outline-default{
  color: $btn-default-colour;
  border-color: $btn-default-colour;
  &:hover{
    background-color: $btn-default-colour;
    color: white;
  }
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($btn-default-colour, .5);
  }
}
.btn-outline-default:not(:disabled):not(.disabled).active, .btn-outline-default:not(:disabled):not(.disabled):active, .show>.btn-outline-default.dropdown-toggle{
  background-color: darken($btn-default-colour, 15%);
  border-color: darken($btn-default-colour, 15%);
}

.btn.btn-outline-light{
  color: $sa-grey-06;
  border-color: $sa-grey-06;
  &:hover{
    color: $sa-grey-10;
  }
}


.btn.btn-outline-warning{
  color: $text;
  &:hover{
    color: $text;
  }
}

.btn-outline-primary,
.btn-outline-secondary,
.btn-outline-success,
.btn-outline-danger,
.btn-outline-warning,
.btn-outline-info,
.btn-outline-light,
.btn-outline-dark,
.btn-outline-default{
  border-width: 2px;
}

// Button Groups ================================
.btn-group .btn{
  box-shadow: none;
}
.btn-group{
  border-radius: 2rem;
  box-shadow:         0px 1px 1px 0px rgba(0,0,0,0.2);
}

.buttons-grouped .btn{
  margin:2.5px 0;
}
// Cards ========================================

// Base class
.card{
  border:1px solid transparent;
  margin-bottom: $sa-margin;
  
  & .card-header, .card-footer{
    border:none;
    color: white;
  }
}
.card-body {
  padding: $sa-body-padding;
  margin: -1px;
  @include clearfix;
}
.card-body.border-top{
  border-color: white!important;
  margin-top: -0.5px!important;
}
.card-body.border-bottom{
  border-color: white!important;
  margin-bottom: -0.5px!important;
}
.card-body hr{
  border-color: white;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.card-body p:last-child {
    margin-bottom: 0;
}

.card-body p + hr{
  margin-top: -0.5rem;
}
.card-title{
  margin-bottom: initial;
}



// Optional heading
.card-header {
  padding: $sa-heading-padding;
  border-bottom: 1px solid transparent;
  background-color: $sa-heading-bg;
  margin: -1px;
  overflow: hidden;

  font-size: $sa-heading-font-size;
  font-weight: 300;
  line-height: $sa-heading-line-height;
  color: $sa-heading-text-color;

  > .dropdown .dropdown-toggle {
    color: inherit;
  }
  &:first-child {
    @include border-radius($card-inner-border-radius $card-inner-border-radius 0 0);
  }
}

.card-header h3,
.card-header h4{
  margin: 0;
  font-size: $sa-heading-font-size;
  line-height: $sa-heading-line-height;
  font-weight: $sa-heading-font-weight;
  color: $sa-heading-text-color;
}


// Optional footer (stays gray in every modifier class)
.card-footer {
  padding: $sa-footer-padding;
  background-color: $sa-footer-bg;
  color: $sa-heading-text-color;
  font-weight: $sa-heading-font-weight;
  border-top: 1px solid $sa-inner-border;
  @include border-bottom-radius(($sa-border-radius - 1));
  margin: -1px;

  &:last-child {
    @include border-radius( 0 0 $card-inner-border-radius $card-inner-border-radius);
  }
}


// SARD Cards ===================================

.card.card-sard, .card.card-default{
  background-color: $sa-bg;
  & .card-header, .card-footer{
    background-color: $sa-heading-bg;
    & .text-muted { 
      color: lighten($sa-heading-bg, 30%) !important;
    }
  }
}
.card.card-sard.outline, .card.card-default.outline{
  background-color: white;
  border-color: $sa-heading-bg;
  & .card-body.border-bottom{
    border-color: $sa-heading-bg!important;
  }
  & .card-body.border-top{
    border-color: $sa-heading-bg!important;
  }
  & .card-body hr{
    border-color: $sa-heading-bg!important;
  }
}


.card.card-primary{
  background-color: $user-primary-colour;
  & .card-header, .card-footer{
    background-color: darken($user-primary-colour, 15%);
    & .text-muted { 
      color: darken($user-primary-colour, 25%) !important;
    }
  }
}
.card.card-primary.outline{
  background-color: white;
  border-color: $user-primary-colour;
  & .card-body.border-bottom{
    border-color: $user-primary-colour!important;
  }
  & .card-body.border-top{
    border-color: $user-primary-colour!important;
  }
  & .card-body hr{
    border-color: $user-primary-colour;
  }
}

.card.card-secondary{
  background-color: $user-secondary-colour;
  & .card-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: white;
    }
  }
  & .card-header, .card-footer{
    background-color: darken($user-secondary-colour, 5%);
    & .text-muted { 
      color: lighten($user-secondary-colour, 10%) !important;
    }
  }
}
.card.card-secondary.outline{
  background-color: white;
  border-color: $user-secondary-colour;
  & .card-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: $text;
    }
  }
  & .card-body.border-bottom{
    border-color: $user-secondary-colour!important;
  }
  & .card-body.border-top{
    border-color: $user-secondary-colour!important;
  }
  & .card-body hr{
    border-color: $user-secondary-colour;
  }
}







.card.card-success{
  background-color: $success;
  & .card-header, .card-footer{
    background-color: darken($success, 10%);
    & .text-muted { 
      color: darken($success, 25%) !important;
    }
  }
}
.card.card-success.outline{
  background-color: white;
  border-color: $success;
  & .card-body.border-bottom{
    border-color: $success!important;
  }
  & .card-body.border-top{
    border-color: $success!important;
  }
  & .card-body hr{
    border-color: $success;
  }
}

.card.card-danger{
  background-color: $danger;
  & .card-header, .card-footer{
    background-color: darken($danger, 15%);
    & .text-muted { 
      color: lighten($text, 25%) !important;
    }
  }
  & .card-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: white;
    }
  }
}
.card.card-danger.outline{
  background-color: white;
  border-color: $danger;
  & .card-body.border-bottom{
    border-color: $danger!important;
  }
  & .card-body.border-top{
    border-color: $danger!important;
  }
  & .card-body hr{
    border-color: $danger;
  }
  & .card-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: $text;
    }
  }
}

.card.card-warning{
  background-color: $warning;
  & .card-header, .card-footer{
    background-color: $text;
    & .text-muted { 
      color: lighten($text, 25%) !important;
    }
  }
}
.card.card-warning.outline{
  background-color: white;
  border-color: $warning;
  & .card-body.border-bottom{
    border-color: $warning!important;
  }
  & .card-body.border-top{
    border-color: $warning!important;
  }
  & .card-body hr{
    border-color: $warning;
  }
}


.card.card-info{
  background-color: $info;
  & .card-header, .card-footer{
    background-color: darken($info, 20%);
    & .text-muted { 
      color: darken($info, 50%) !important;
    }
  }
}
.card.card-info.outline{
  background-color: white;
  border-color: $info;
  & .card-body.border-bottom{
    border-color: $info!important;
  }
  & .card-body.border-top{
    border-color: $info!important;
  }
  & .card-body hr{
    border-color: $info;
  }
}


.card.card-dark{
  background-color: $sa-grey-14;
  & .card-header, .card-footer{
    background-color: $sa-heading-bg;
    & .text-muted { 
      color: lighten($text, 25%) !important;
    }
  }
  & .card-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: white;
    }
  }
}
.card.card-dark.outline{
  background-color: white;
  border-color: $sa-heading-bg;
  & .card-body.border-bottom{
    border-color: $sa-heading-bg!important;
  }
  & .card-body.border-top{
    border-color: $sa-heading-bg!important;
  }
  & .card-body hr{
    border-color: $sa-heading-bg;
  }
  & .card-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: $text;
    }
  }
}

.card.card-white{
  background-color: white;
  & .card-header, .card-footer{
    background-color: white;
    color: $text;
    & .text-muted { 
      color: lighten($text, 25%) !important;
    }
  }
  & .card-header{
    border-bottom: 1px solid $sa-grey-04;
    margin-bottom: -2px;
  }
  & .card-footer{
    border-top: 1px solid $sa-grey-04;
    margin-top: -2px;
  }
  & .card-body.border-bottom{
    border-color: $sa-grey-04!important;
  }
  & .card-body.border-top{
    border-color: $sa-grey-04!important;
  }
  & .card-body hr{
    border-color: $sa-grey-04;
  }
}
.card.card-white.outline{
  background-color: transparent;
  border-color: white;
  & .card-header, .card-footer{
    background-color: transparent;
    color: $text;
  }
  & .card-header{
    border-bottom: 1px solid white;
    margin-bottom: -2px;
  }
  & .card-footer{
    border-top: 1px solid white;
    margin-top: -2px;
  }
  & .card-body.border-bottom{
    border-color: white!important;
  }
  & .card-body.border-top{
    border-color: white!important;
  }
  & .card-body hr{
    border-color: white;
  }
}



// Collapse =====================================

$accordian-bg: $sa-grey-16;
$accordian-bg-hover: $sa-grey-18;
$accordian-bg-open: $sa-grey-18;
$accordian-bg-open-hover: black;


// Accordions =======================================================

// Vertical alignment
.accordion .card,
.accordion .panel,
.accordion fieldset {
  margin-bottom: 0;
}
.accordion {
  margin-bottom: $sa-spacer-16;
}

// Make Accordion Headings as a link ============

/* set panel-heading paddings to <a> instead of h3 */    
.accordion .card-header,
.accordion .panel-heading,
.accordion .panel-header,
.accordion legend { 
  display: block;
  padding:0px;
  color:white!important;
}

// This makes the entire heading a link
.accordion .card-header,
.accordion .panel-heading,
.accordion .panel-header,
.accordion legend { 
  & .btn,
  & a{
    padding: $sa-heading-padding;
    color:white!important;
    text-decoration:none;
    display: block;
    width: 100%;
    text-align: left;
    border-radius: 0;
    border: 1px solid transparent;
  
    font-size: $sa-heading-font-size;
    font-weight: 300;
    line-height: $sa-heading-line-height;
    color: $sa-heading-text-color;
  }
}

.accordion .card-header h3,
.accordion .panel-heading h3,
.accordion .panel-header h3,
.accordion legend h3 { 
  margin:0; // Adjusts some strange overlap of the panel-heading
}

// Adjustments for panels & fieldsets
.accordion>.card,
.accordion>.panel,
.accordion>fieldset {
  overflow: hidden;
}
.accordion>.card:not(:first-of-type):not(:last-of-type),
.accordion>.panel:not(:first-of-type):not(:last-of-type),
.accordion>fieldset:not(:first-of-type):not(:last-of-type){
  border-bottom: 0;
  border-radius: 0;
}
.accordion>.card:first-of-type,
.accordion>.panel:first-of-type,
.accordion>fieldset:first-of-type {
  border-bottom: 0;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.accordion>.card:last-of-type,
.accordion>.panel:last-of-type,
.accordion>fieldset:last-of-type {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

// Collapsable Cards & Panels =======================================

// Make Headings as a link ======================

/* set heading paddings to <a> instead of h3 */    
.card.collapsable .card-header,
.panel.collapsable .panel-heading,
.panel.collapsable .panel-header,
fieldset.collapsable legend { 
  display: block;
  padding:0px;
  color:white;
  border-radius: $sa-border-radius;
  overflow: visible;
}
// This makes the entire heading a link
.card.collapsable .card-header,
.panel.collapsable .panel-heading,
.panel.collapsable .panel-header,
fieldset.collapsable legend { 
  & .btn,
  & a {
    padding: $sa-heading-padding;
    color:white!important;
    text-decoration:none;
    display: block;
    width: 100%;
    text-align: left;
    border-radius: $sa-border-radius $sa-border-radius 0 0;
    box-shadow: none;
    border: 1px solid transparent;
  
    font-size: $sa-heading-font-size;
    font-weight: 300;
    line-height: $sa-heading-line-height;
    color: $sa-heading-text-color;
  }
}
.card.collapsable .card-header,
.panel.collapsable .panel-heading,
.panel.collapsable .panel-header,
fieldset.collapsable legend{
  & .btn.collapsed,
  & a.collapsed{
    border-radius: $sa-border-radius;
  }
}

.card.collapsable .card-header h3,
.panel.collapsable .panel-heading h3,
.panel.collapsable .panel-header h3,
fieldset.collapsable legend h3 { 
  margin:0; // Adjusts some strange overlap of the panel-heading
}

// Toggle Icon ==================================
.accordion .card-header,
.accordion .panel-heading,
.accordion .panel-header,
.accordion fieldset legend,
.card.collapsable .card-header,
.panel.collapsable .panel-heading,
.panel.collapsable .panel-header,
fieldset.collapsable legend{
  & .btn::after,
  & a::after{
    font-family: "Font Awesome 5 Free"; 
    content: "\f106" ;
    font-weight: 900;
    padding-right: $sa-spacer-8 ;
    color:$user-primary-colour;
    font-size: 1.75rem;
    position: absolute;
    right: 2px;
  }
}
.accordion .card-header,
.accordion .panel-heading,
.accordion .panel-header,
.accordion fieldset legend,
.card.collapsable .card-header,
.panel.collapsable .panel-heading,
.panel.collapsable .panel-header,
fieldset.collapsable legend{
  & .btn.collapsed::after,
  & a.collapsed::after{
    font-family: "Font Awesome 5 Free"; 
    content: "\f107" ;
    font-weight: 900;
    padding-right: $sa-spacer-8;
    color:$user-primary-colour;
    font-size: 1.75rem;
    position: absolute;
    right: 2px;
  }
}


// Accordion Mixed Items Adjust
.accordion-mixed>.card,
.accordion-mixed>.panel,
.accordion-mixed>fieldset {
  overflow: hidden;
}

.accordion-mixed>.accordion-mixed-item .card-header,
.accordion-mixed>.accordion-mixed-item .panel-header,
.accordion-mixed>.accordion-mixed-item .panel-heading,
.accordion-mixed>.accordion-mixed-item legend {
  overflow: hidden;
}
.accordion-mixed>.accordion-mixed-item:not(:first-child):not(:last-child)  {
  border-bottom: 0;
  border-radius: 0;
}
.accordion-mixed>.accordion-mixed-item:first-child  {
  border-bottom: 0;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.accordion-mixed>.accordion-mixed-item:last-child  {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: $sa-border-radius;
  border-bottom-left-radius: $sa-border-radius;
}



// Colouring ====================================

.accordion .card-sard .card-header,
.accordion .panel-sard .panel-heading,
.accordion .panel-sard .panel-header,
.accordion fieldset legend,
.card.card-sard.collapsable .card-header,
.panel.collapsable .panel-heading,
.panel.collapsable .panel-header,
fieldset.collapsable legend {
  & button,
  & .btn,
  & a{
    background-color: $accordian-bg-open;
    &:hover.collapsed{
      background-color: $accordian-bg-hover;
    }
    &.collapsed{
      background-color: $accordian-bg;
    }
    &:hover{
      background-color: $accordian-bg-open-hover;
    }
  }
}

// Dropdowns ====================================

$default_dropdown_visited:      darken($user-primary-colour, 5%);
$default_dropdown_hover:        $sa-grey-04;
$default_dropdown_active:       $user-primary-colour;
$default_dropdown_hover_click:  darken($user-primary-colour, 10%);

.dropdown-menu{
  border-color: $user-primary-colour;
  box-shadow:$sa-box-shadow;
  padding: 0 ;
  margin: 0 ;
  .dropdown-header{
    @include roboto-bold;
    font-size: 1rem; 
    color: $text;
    padding: $sa-spacer-4 $sa-spacer-8;
  }
  hr{
    margin: 0;
  }
}
.dropdown-item{
  color: $text;
  padding: $sa-spacer-4 $sa-spacer-8;
  &:visited { 
    color: $text;
  }
  &:focus{
    background-color: $default_dropdown_active;
  }
  &:hover{
    background-color: $default_dropdown_hover;
  }
  &:active{
    background-color: $default_dropdown_hover_click;
    color: white;
  }
  &.active{
    background-color: $default_dropdown_active;
    color: white;
  }
  &.active:hover{
    background-color: $default_dropdown_active;
  }
}

.dropdown-item:first-of-type{
  border-top-left-radius: 6px;
  border-top-right-radius: 6px;
}
.dropdown-item:last-of-type{
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
}




$admin-primary-colour_dropdown_visited:      darken($admin-primary-colour, 5%);
$admin-primary-colour_dropdown_hover:        $sa-grey-04;
$admin-primary-colour_dropdown_active:       $admin-primary-colour;
$admin-primary-colour_dropdown_hover_click:  darken($admin-primary-colour, 10%);

.btn-secondary + .dropdown-menu{
  border-color: $admin-primary-colour;
}
.btn-secondary + .dropdown-menu .dropdown-item{
  &:focus{
    background-color: $admin-primary-colour_dropdown_active;
  }
  &:hover{
    background-color: $admin-primary-colour_dropdown_hover;
  }
  &:active{
    background-color: $admin-primary-colour_dropdown_hover_click;
  }
  &.active{
    background-color: $admin-primary-colour_dropdown_active;
  }
  &.active:hover{
    background-color: $admin-primary-colour_dropdown_active;
  }
}


$success_dropdown_visited:      darken($success, 5%);
$success_dropdown_hover:        $sa-grey-04;
$success_dropdown_active:       $success;
$success_dropdown_hover_click:  darken($success, 10%);

.btn-success + .dropdown-menu{
  border-color: $success;
}
.btn-success + .dropdown-menu .dropdown-item{
  &:focus{
    background-color: $success_dropdown_active;
  }
  &:hover{
    background-color: $success_dropdown_hover;
  }
  &:active{
    background-color: $success_dropdown_hover_click;
  }
  &.active{
    background-color: $success_dropdown_active;
  }
  &.active:hover{
    background-color: $success_dropdown_active;
  }
}

$info_dropdown_visited:      darken($info, 5%);
$info_dropdown_hover:        $sa-grey-04;
$info_dropdown_active:       $info;
$info_dropdown_hover_click:  darken($info, 10%);

.btn-info + .dropdown-menu{
  border-color: $info;
}
.btn-info + .dropdown-menu .dropdown-item{
  &:focus{
    background-color: $info_dropdown_active;
  }
  &:hover{
    background-color: $info_dropdown_hover;
  }
  &:active{
    background-color: $info_dropdown_hover_click;
  }
  &.active{
    background-color: $info_dropdown_active;
  }
  &.active:hover{
    background-color: $info_dropdown_active;
  }
}

$warning_dropdown_visited:      darken($warning, 5%);
$warning_dropdown_hover:        $sa-grey-04;
$warning_dropdown_active:       $warning;
$warning_dropdown_hover_click:  darken($warning, 10%);

.btn-warning + .dropdown-menu{
  border-color: $warning;
}
.btn-warning + .dropdown-menu .dropdown-item{
  &:focus{
    background-color: $warning_dropdown_active;
  }
  &:hover{
    background-color: $warning_dropdown_hover;
  }
  &:active{
    background-color: $warning_dropdown_hover_click;
  }
  &.active{
    background-color: $warning_dropdown_active;
  }
  &.active:hover{
    background-color: $warning_dropdown_active;
  }
}

$danger_dropdown_visited:      darken($danger, 5%);
$danger_dropdown_hover:        $sa-grey-04;
$danger_dropdown_active:       $danger;
$danger_dropdown_hover_click:  darken($danger, 10%);

.btn-danger + .dropdown-menu{
  border-color: $danger;
}
.btn-danger + .dropdown-menu .dropdown-item{
  &:focus{
    background-color: $danger_dropdown_active;
  }
  &:hover{
    background-color: $danger_dropdown_hover;
  }
  &:active{
    background-color: $danger_dropdown_hover_click;
  }
  &.active{
    background-color: $danger_dropdown_active;
  }
  &.active:hover{
    background-color: $danger_dropdown_active;
  }
}

$secondary_dropdown_visited:      darken($secondary, 5%);
$secondary_dropdown_hover:        $sa-grey-04;
$secondary_dropdown_active:       $secondary;
$secondary_dropdown_hover_click:  darken($secondary, 10%);

.btn-secondary + .dropdown-menu{
  border-color: $secondary;
}
.btn-secondary + .dropdown-menu .dropdown-item{
  &:focus{
    background-color: $secondary_dropdown_active;
  }
  &:hover{
    background-color: $secondary_dropdown_hover;
  }
  &:active{
    background-color: $secondary_dropdown_hover_click;
  }
  &.active{
    background-color: $secondary_dropdown_active;
  }
  &.active:hover{
    background-color: $secondary_dropdown_active;
  }
}

.dropwown-menu-item{
  padding: 0 $sa-spacer-8;
}
// Fieldsets ====================================

// Base class

fieldset{
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0; // See https://github.com/twbs/bootstrap/pull/22740#issuecomment-305868106
  word-wrap: break-word;
  background-color: $sa-bg;
  background-clip: border-box;
  border:1px solid transparent;
  @include border-radius($sa-border-radius);

  // padding: $sa-body-padding;
  margin-bottom: $sa-margin;

  & legend{
    // min-width: calc(100% + #{$sa-spacer-x-2x} + 2px ); // Kept for Reference
    min-width: calc(100% + 2px );

    margin: 0 -1px;
    overflow: hidden;

    padding: $sa-heading-padding;

    background-color: $sa-heading-bg;
    font-size: $sa-heading-font-size;
    font-weight: 300;
    line-height: $sa-heading-line-height;
    color: $sa-heading-text-color;

    border-top-left-radius: $sa-border-radius;
    border-top-right-radius: $sa-border-radius;
  }

  & .form-group{
    padding: $sa-body-padding;
    margin: -1px;
  }
  
  & hr{
    border-color: white;
    margin: 0 8px;
  }
  & .border-bottom, .border-top{
    border-color: white!important;
  }
  & .form-footer,
  & footer{
    min-width: calc(100% + 2px );
    margin: -1px;
    margin-top: -3px;
    overflow: hidden;
    padding: $sa-heading-padding;
    background-color: $sa-heading-bg;
    color: $sa-heading-text-color;
    border-bottom-left-radius: $sa-border-radius;
    border-bottom-right-radius: $sa-border-radius;
    font-weight: $sa-heading-font-weight;
  }
}
.form-group p:last-child {
  margin-bottom: 0;
}
.form-group hr{
  margin: 0;
  margin-bottom: .5rem;
}
.form-group p+hr {
  margin-top: -.5rem;
}


// Fieldsets within Cards or Panels -------------

.card fieldset, .panel fieldset{
  border-color: $sa-border-color;
  @include border-radius($border-radius-sm);
  margin-bottom: $sa-margin-sm;
  & legend{
    border-top-left-radius: $border-radius-sm;
    border-top-right-radius: $border-radius-sm;
  }
  & hr{
    border-color: $sa-border-color;
    margin: 0 ;
  }
  & .border-bottom, .border-top{
    border-color: $sa-border-color!important;
  }
}
.card fieldset:first-child, .panel fieldset:first-child{
  margin-top: 2px;
}
.card fieldset:last-child, .panel fieldset:last-child{
  margin-bottom: 0;
}

 //BS3 specific
// Forms ========================================

legend{
  font-size: $sa-heading-font-size;
  font-weight: 400;
  line-height: $sa-heading-line-height;
}
label {
    margin-bottom: .25rem;
}

// Form Control =============
.form-control {
  color: $text;
  border: 2px solid $sa-grey-08;
  border-radius: .375rem;
}

.form-control:focus {
  color: $text;
  border-color: $user-primary-colour;
  box-shadow: 0 0 0 0.1rem $user-primary-colour;
}

.custom-select:focus {
  border-color: $user-primary-colour;
    outline: 0;
  box-shadow: 0 0 0 0.1rem $user-primary-colour;
}

// Form Group adjustments =======================
.form-group:last-of-type{
  margin-bottom: 0;
}

.form-group .form-check:last-of-type,
.form-group .sa-checkbox:last-of-type{
  margin-bottom: -8px;
}
.form-group.form-buttons{
  text-align: right;
}

.form-group.row, .form-group .row{
  margin-right: -4px;
  margin-left: -4px;
}
.form-group.row>.col, .form-group.row>[class*=col-],
.form-group .row>.col, .form-group .row>[class*=col-] {
  padding-right: 4px;
  padding-left: 4px;
}

.form-row{
  margin-bottom: 1rem;
}
.form-row:last-of-type{
  margin-bottom: 0;
}
.form-row>.col, .form-row>[class*=col-] {
  padding-right: 4px;
  padding-left: 4px;
}

// Range Inputs =================================
// Styled using http://danielstern.ca/range.css/#/
$range-track-bg: white;

input[type=range] {
  -webkit-appearance: none;
  width: 100%;
  margin: 5px 0;
  background-color: transparent;
}
input[type=range]:focus {
  outline: none;
}
input[type=range]::-webkit-slider-runnable-track {
  width: 100%;
  height: 10px;
  cursor: pointer;
  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3) inset, 0px 0px 1px rgba(13, 13, 13, 0.3) inset;
  background-color: $range-track-bg;
  border-radius: 10px;
  border: 0px solid rgba(1, 1, 1, 0);
}
input[type=range]::-webkit-slider-thumb {
  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3), 0px 0px 1px rgba(13, 13, 13, 0.3);
  border: 1px solid rgba(0, 0, 0, 0);
  height: 20px;
  width: 20px;
  border-radius: 20px;
  background-color: $user-primary-colour;
  cursor: pointer;
  -webkit-appearance: none;
  margin-top: -5px;
}
input[type=range]:focus::-webkit-slider-runnable-track {
  background-color: $range-track-bg;
}
input[type=range]::-moz-range-track {
  width: 100%;
  height: 10px;
  cursor: pointer;
  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3) inset, 0px 0px 1px rgba(13, 13, 13, 0.3) inset;
  background-color: $range-track-bg;
  border-radius: 10px;
  border: 0px solid rgba(1, 1, 1, 0);
}
input[type=range]::-moz-range-thumb {
  box-shadow: 1px 1px 2.1px rgba(0, 0, 0, 0.3), 0px 0px 1px rgba(13, 13, 13, 0.3);
  border: 1px solid rgba(0, 0, 0, 0);
  height: 20px;
  width: 20px;
  border-radius: 20px;
  background-color: $user-primary-colour;
  cursor: pointer;
}
input[type=range]::-ms-track {
  width: 100%;
  height: 10px;
  cursor: pointer;
  background-color: transparent;
  border-color: transparent;
  color: transparent;
}
input[type=range]::-ms-fill-lower {
  background-color: $range-track-bg;
  border: 0px solid rgba(1, 1, 1, 0);
  border-radius: 20px;
  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3) inset, 0px 0px 1px rgba(13, 13, 13, 0.3) inset;
}
input[type=range]::-ms-fill-upper {
  background-color: $range-track-bg;
  border: 0px solid rgba(1, 1, 1, 0);
  border-radius: 20px;
  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3) inset, 0px 0px 1px rgba(13, 13, 13, 0.3) inset;
}
input[type=range]::-ms-thumb {
  box-shadow: 1px 1px 2.1px rgba(0, 0, 0, 0.3), 0px 0px 1px rgba(13, 13, 13, 0.3);
  border: 1px solid rgba(0, 0, 0, 0);
  height: 20px;
  width: 20px;
  border-radius: 20px;
  background-color: $user-primary-colour;
  cursor: pointer;
  height: 10px;
}
input[type=range]:focus::-ms-fill-lower {
  background-color: $range-track-bg;
}
input[type=range]:focus::-ms-fill-upper {
  background-color: $range-track-bg;
}


// Input Groups =================================

// OLD STyles =====
// .input-group{
//   margin-top:10px;
//   margin-bottom:5px;
// }
//  .input-group:first-of-type{
//   margin-top:0px;
// }
//  .input-group:last-of-type{
//   margin-top:5px;
// }

// .input-group label{
//   padding: 0px;
// }

//  .input-group .form-control{
//   margin-bottom:0px;
// }

//  .input-group-addon{
//   background-color:$sa-grey-16;
//   color:white;
//   border-color:$sa-grey-16;
// }

//  .input-group-btn > .btn{
//   padding: 6px 12px;
//   font-size: 14px;
//   line-height: 1.6;
// }
//  .input-group-lg > .input-group-btn > .btn {
//   height: 46px;
//   padding: 10px 16px;
//   font-size: 18px;
//   line-height: 1.3333333;
// }
//  .input-group-sm > .input-group-btn > .btn {
//   height: 30px;
//   padding: 5px 10px;
//   font-size: 12px;
//   line-height: 1.5;
// }
.input-group>.custom-file+.custom-file, .input-group>.custom-file+.custom-select, .input-group>.custom-file+.form-control, .input-group>.custom-select+.custom-file, .input-group>.custom-select+.custom-select, .input-group>.custom-select+.form-control, .input-group>.form-control+.custom-file, .input-group>.form-control+.custom-select, .input-group>.form-control+.form-control, .input-group>.form-control-plaintext+.custom-file, .input-group>.form-control-plaintext+.custom-select, .input-group>.form-control-plaintext+.form-control,
.input-group>.input-group-prepend+textarea {
  margin-left: -2px; // Overrides BS Default of 1px
}

.input-group>.input-group-prepend>.input-group-text{
  border-radius: 2rem 0 0 2rem;
  padding: 0 $sa-spacer-8;
  background-color: $user-primary-colour;
  color: white;
  border-color: $user-primary-colour;
}
.input-group>.input-group-append>.input-group-text{
  border-radius: 0 2rem 2rem 0;
  padding: 0 $sa-spacer-8;
  background-color: $user-primary-colour;
  color: white;
  border-color: $user-primary-colour;
}

.input-group>.input-group-prepend,
.input-group>.input-group-append{
  .btn{
    padding-top: 5px;
    padding-bottom: 5px;
    box-shadow: none;
  }
}
.input-group>.input-group-prepend + input{
  border-left:none;
}
.input-group-prepend{
  z-index: 2;
}
.input-group-append{
  margin-left: -1px;
  z-index: 2;
}

.input-group > .form-control,
.input-group > .custom-select{
  &:focus{
    border-color: $user-primary-colour;
    box-shadow: none;
  }
}

// Custom Select ================================

.custom-select{
  border-width: 2px;
  // border-radius: 1.1rem ;
}

// BS File Imputs and Uploads ===================

.input-group>.custom-file .custom-file-input:focus~.custom-file-label, .input-group>.custom-select:focus, .input-group>.form-control:focus{
  border-color: darken($user-primary-colour, 10%);
  box-shadow: none!important;
}

.custom-file-label{
  border-radius: 0 1.1rem 1.1rem 0;
  border: 2px solid $user-primary-colour;
}
.custom-file-label::after{
  top: -1px;
  right: -1px;
  border-radius: 0 1.1rem 1.1rem 0;
  background-color: $user-primary-colour;
  color: white;
  border: none;
}
.custom-file + .input-group-append{
  border-left:1px solid white;
}

.custom-file-label{
  border-radius: 1.1rem ;
}
.custom-file-input~.custom-file-label::after{
  background-color: $user-primary-colour;
}
.custom-file-input:hover~.custom-file-label::after{
  background-color: darken($user-primary-colour, 5%);
  border-color: darken($user-primary-colour, 5%);
}
.custom-file-input:focus~.custom-file-label::after{
  background-color: darken($user-primary-colour, 10%);
  border-color: darken($user-primary-colour, 10%);
}

// SARD File Imputs and Uploads =================

.input-group.sa-file-upload{
  // & label {margin-bottom: 0; }
  & label:first-child .btn{
   border-top-right-radius: 0;
   border-bottom-right-radius: 0;
   cursor: pointer;
 }
 & label:last-child .btn{
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    cursor: pointer;
  }
  & label input{ display: none;}
  & input.form-control{
    background-color: white;
    border-color: $user-primary-colour;
    height: calc(1.5em + .75rem + 3px);
    cursor: default;
    &:focus{
      box-shadow: none;
    }
  }
  & .btn{ 
    box-shadow: none; 
    border-width: .125rem; // 2px
    padding-top: 0.3125rem; // 5px
    background-color: $user-primary-colour;
    border-color: $user-primary-colour;
    &:hover { 
      background-color: darken($user-primary-colour, 5%); 
      border-color: darken($user-primary-colour, 5%); 
    }
    &:active {
      background-color: darken($user-primary-colour, 10%);
      border-color: darken($user-primary-colour, 10%);
    }
  }
}

// Colouring of inputs text and place holders
input.form-control::placeholder {
  color: $sa-grey-10;
}
.custom-file-label{
  color: $sa-grey-10;
}

// List Groups ==================================

.list-group-item{
  padding: $sa-spacer-8 $sa-spacer-10;
  border:1px solid $sa-grey-04;
}

// In Cards, Panels, Fieldsets
.card, .panel, fieldset{
  & .list-group-item{
    border-right: none;
    border-left: none;
  }
  & .list-group-item:first-child{
    border-top: none;
  }
  & .list-group-item:last-child{
    border-bottom: none;
  }
}

// list-group-flush =========
.card, .panel, fieldset{
  & .list-group.list-group-flush:first-of-type{
    margin: -$sa-spacer-10;
    & .list-group-item{
      border:1px solid $sa-grey-03;
      // margin: -1px;
    }
    & .list-group-item:first-child{
      border-top: none;
    }
  }
  & .list-group.list-group-flush:last-of-type{
    & .list-group-item:last-child{
      border-bottom-left-radius: $sa-border-radius;
      border-bottom-right-radius: $sa-border-radius;
    }
  }
}

// Horizontal ===============
.card, .panel, fieldset{
  & .list-group-horizontal {
    & .list-group-item{
      border:1px solid $sa-grey-04;
      border-top: none;
      border-bottom: none;
      width: -webkit-fill-available;
    }
    & .list-group-item:first-child{
      border-left: none;
    }
    & .list-group-item:last-child{
      border-right: none;
    }
  }
}

.card, .panel, fieldset{
  & .list-group.list-group-flush.list-group-horizontal{
    margin-top: -$sa-spacer-8;
    & .list-group-item{
      border:1px solid $sa-grey-04;
      border-top: none;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      width: -webkit-fill-available;
    }
    & .list-group-item{
    }
    & .list-group-item:first-child{
    }
    & .list-group-item:last-child{
      border-bottom-left-radius: 0;
    }
  }
}

// Contextual ===============

a.list-group-item-action{
  color: darken($user-primary-colour, 0%);
  &:visited{
    color: darken($user-primary-colour, 0%);
  }
  &:focus,
  &:hover{
    color: darken($user-primary-colour, 20%);
    background-color: $sa-grey-03;
  } 
  &:active{
    color: darken($user-primary-colour, 20%);
    background-color: $sa-grey-04;
  }
  & small.text-muted{ color: $sa-grey-10!important;}
}


// a.list-group-item-primary{
//   color: darken($user-primary-colour, 0%);
//   border-color: darken($user-primary-colour, 0%);
//   &:visited{
//     color: darken($user-primary-colour, 0%);
//   }
//   &:focus,
//   &:hover{
//     color: darken($user-primary-colour, 20%);
//     background-color: $sa-grey-03;
//   } 
//   &:active{
//     color: darken($user-primary-colour, 20%);
//     background-color: $sa-grey-04;
//   }
//   &.active{
//     color: white;
//     background-color: darken($user-primary-colour, 0%);
//   }
//   & small.text-muted{ color: $sa-grey-10!important;}
// }



a.list-group-item-primary{
  background-color:white;
  color: darken($user-primary-colour, 20%);
  &:visited{
    color: white;
  }
}
.list-group-item-primary.list-group-item-action:focus, .list-group-item-primary.list-group-item-action:hover{
  background-color: darken($user-primary-colour, 3%);
  color: white;
}
.list-group-item-primary.list-group-item-action:active{
  background-color: darken($user-primary-colour, 6%);
  color: white;
}


a.list-group-item-secondary{
  background-color: white;
  color: darken($secondary, 20%);
  &:visited{
    color: white;
  }
}
.list-group-item-secondary.list-group-item-action:focus, .list-group-item-secondary.list-group-item-action:hover{
  background-color: darken($secondary, 3%);
  color: white;
}
.list-group-item-secondary.list-group-item-action:active{
  background-color: darken($secondary, 6%);
  color: white;
}

a.list-group-item-success{
  background-color: $success;
  color: darken($success, 20%);
  &:visited{
    color: white;
  }
}
.list-group-item-success.list-group-item-action:focus, .list-group-item-success.list-group-item-action:hover{
  background-color: darken($success, 3%);
  color: white;
}
.list-group-item-success.list-group-item-action:active{
  background-color: darken($success, 6%);
  color: white;
}

a.list-group-item-danger{
  background-color: $danger;
  color: darken($danger, 20%);
  &:visited{
    color: white;
  }
}
.list-group-item-danger.list-group-item-action:focus, .list-group-item-danger.list-group-item-action:hover{
  background-color: darken($danger, 3%);
  color: white;
}
.list-group-item-danger.list-group-item-action:active{
  background-color: darken($danger, 6%);
  color: white;
}

a.list-group-item-warning{
  background-color: $warning;
  color: darken($warning, 20%);
  &:visited{
    color: $text;
  }
}
.list-group-item-warning.list-group-item-action:focus, .list-group-item-warning.list-group-item-action:hover{
  background-color: darken($warning, 3%);
  color: $text;
}
.list-group-item-warning.list-group-item-action:active{
  background-color: darken($warning, 6%);
  color: $text;
}

a.list-group-item-info{
  background-color: $info;
  color: darken($info, 20%);
  &:visited{
    color: white;
  }
}
.list-group-item-info.list-group-item-action:focus, .list-group-item-info.list-group-item-action:hover{
  background-color: darken($info, 3%);
  color: white;
}
.list-group-item-info.list-group-item-action:active{
  background-color: darken($info, 6%);
  color: white;
}

a.list-group-item-light{
  background-color: $light;
  color: darken($light, 20%);
  &:visited{
    color: darken($user-primary-colour, 10%);
  }
}
.list-group-item-light.list-group-item-action:focus, .list-group-item-light.list-group-item-action:hover{
  background-color: darken($light, 3%);
  color: darken($user-primary-colour, 20%);
}
.list-group-item-light.list-group-item-action:active{
  background-color: darken($light, 6%);
  color: darken($user-primary-colour, 20%);
}

a.list-group-item-dark{
  background-color: $dark;
  color: darken($dark, 20%);
  &:visited{
    color: white;
  }
}
.list-group-item-dark.list-group-item-action:focus, .list-group-item-dark.list-group-item-action:hover{
  background-color: darken($dark, 5%);
  color: white;
}
.list-group-item-dark.list-group-item-action:active{
  background-color: darken($dark, 10%);
  color: white;
}

a.list-group-item-action.active{
  & small{ color: white;}
  &:visited{
    color: darken($user-primary-colour, 0%);
  }
  &:focus,
  &:hover{
    color: white;
    background-color: darken($user-primary-colour, 5%);
  } 
  &:active{
    color: white;
    background-color: darken($user-primary-colour, 10%);
  }
}


// Models =======================================

@mixin modal-padding{
  padding: $sa-spacer-8 $sa-spacer-12;
}
.modal-dialog {
  padding-top: 3.5rem; // Allows for navbar and breadbrumbs
}


.modal-dialog.modal-dialog-centered {
  padding-top: 0; // Allows for navbar and breadbrumbs
}

.modal-header .close{
  background-color: white;
  min-width: 30px;
  width: 30px;
  min-height: 30px;
  height: 30px;
  border-radius: 50%;
  padding: 0;
  margin: -24px -30px auto auto;
  text-align: center;
  opacity: 1;
  border: 2px solid white;
  & span {
    font-size: 28px;
    line-height: 28px;
    color: $sa-red;
  }
}
.modal-header .close:not(:disabled):not(.disabled):hover{
  opacity: 1;
  background-color: $sa-red;
  & span{
    color: white;
    line-height: 26px;
  }
}

.modal-content {
  border-radius: 12px;
  border: 2px solid white;
}

.modal-header{
  background-color: $sa-heading-bg;
  border-top-left-radius: 11px;
  border-top-right-radius: 11px;
  min-height: 43px;
  max-height: auto;
  @include modal-padding;
  font-size: 21px;
  line-height: 21.3px;
  color: white;
}
.modal-header h1.modal-title,
.modal-header h2.modal-title,
.modal-header h3.modal-title,
.modal-header h4.modal-title,
.modal-header h5.modal-title,
.modal-header h6.modal-title{
  padding: 0;
  margin: 0;
  padding-top: 1px;
} 

.modal-title{
  @include roboto-regular;
  font-size: $sa-heading-font-size;
  font-weight: 300;
  line-height: $sa-heading-line-height;
  color: $sa-heading-text-color;
  padding-top: 1px;
}

.modal-body{
  padding: 0 $sa-spacer-12;
  margin: $sa-spacer-8 0;
}

.modal-body p:last-of-type{
  margin-bottom: $sa-spacer-8;
}

.modal-footer {
  margin-top: 0px;
  margin-left: -2px;
  width: calc(100% + 4px);
  @include modal-padding;
  border-top: 1px solid $sa-grey-08;
}

.modal-footer .btn, .modal-footer .btn + .btn {
  margin-top: 3px;
  margin-bottom: 3px;
}

// Scrollable
.modal-dialog-scrollable .modal-content{
  overflow: visible; 
}


// SARD Colour Variations =======================

// Modal Info -----------------------------------
.modal-info .modal-content{
  background-color: $sa-info;
}

.modal-info .modal-header {
  background-color: darken($sa-info, 20%);
  color: white;
  border-bottom: none;
}

.modal-info .modal-footer {
  border-color: darken($sa-info, 20%);
  color: white;
}
.modal-info .modal-body h1,
.modal-info .modal-body h2,
.modal-info .modal-body h3,
.modal-info .modal-body h4,
.modal-info .modal-body h5,
.modal-info .modal-body h6{
  color:white;
}

.modal-info .modal-body ul li:before {
  color: white;
}

.modal-info .modal-body a:link {color: white;}
.modal-info .modal-body a:visited {color: white;}
.modal-info .modal-body a:hover {color: darken($sa-info, 20%);}
.modal-info .modal-body a:focus {color: darken($sa-info, 25%)!important;}
.modal-info .modal-body a:active {color: darken($sa-info, 25%)!important;}

.modal-info .modal-body hr{
  border-color: white;
}

.modal-info .modal-footer {
  margin-left: 0px;
  width: 100%;
}

.modal-info ::-webkit-scrollbar-thumb {
  background-color: darken($sa-info, 20%)!important;
}


// Modal Primary ----------------------------------

.modal-primary .modal-header {
  background-color: $user-primary-colour;
  color: white;
  border-bottom: none;
}

.modal-primary .modal-footer {
  background-color: $user-primary-colour;
  border-top: none;
  color: white;
}

.modal-primary .modal-body a:link {color: white;}
.modal-primary .modal-body a:visited {color: white;}
.modal-primary .modal-body a:hover {color: darken($user-primary-colour, 20%);}
.modal-primary .modal-body a:focus {color: darken($user-primary-colour, 25%)!important;}
.modal-primary .modal-body a:active {color: darken($user-primary-colour, 25%)!important;}

.modal-primary .modal-body hr{
  border-color: $user-primary-colour;
}

.modal-primary .modal-footer {
  margin-left: 0px;
  width: 100%;
}

.modal-primary ::-webkit-scrollbar-thumb {
  background-color: darken($user-primary-colour, 20%)!important;
}


// Modal User ----------------------------------

.modal-secondary .modal-header {
  background-color: $secondary;
  color: white;
  border-bottom: none;
}

.modal-secondary .modal-footer {
  background-color: $secondary;
  border-top: none;
  color: white;
}

.modal-secondary .modal-body a:link {color: white;}
.modal-secondary .modal-body a:visited {color: white;}
.modal-secondary .modal-body a:hover {color: darken($secondary, 20%);}
.modal-secondary .modal-body a:focus {color: darken($secondary, 25%)!important;}
.modal-secondary .modal-body a:active {color: darken($secondary, 25%)!important;}

.modal-secondary .modal-body hr{
  border-color: $secondary;
}

.modal-secondary .modal-footer {
  margin-left: 0px;
  width: 100%;
}

.modal-secondary ::-webkit-scrollbar-thumb {
  background-color: darken($secondary, 0%)!important;
}


// Modal Default --------------------------------

$modal-default: $sa-grey-14;
.modal-default .modal-header {
  background-color: $modal-default;
  color: white;
  border-bottom: none;
}

.modal-default .modal-footer {
  background-color: $modal-default;
  border-top: none;
  color: white;
}

.modal-default .modal-body a:link {color: white;}
.modal-default .modal-body a:visited {color: white;}
.modal-default .modal-body a:hover {color: darken($modal-default, 20%);}
.modal-default .modal-body a:focus {color: darken($modal-default, 25%)!important;}
.modal-default .modal-body a:active {color: darken($modal-default, 25%)!important;}

.modal-default .modal-body hr{
  border-color: $modal-default;
}

.modal-default .modal-footer {
  margin-left: 0px;
  width: 100%;
}

.modal-default ::-webkit-scrollbar-thumb {
  background-color: darken($modal-default, 0%)!important;
}

// Modal Form -----------------------------------

.modal-form fieldset:first-of-type{
  margin-top: 8px;
}

.modal-form fieldset:last-of-type{
  margin-bottom: 0px;
}

.modal-form .modal-footer{
  border-top: none;
  padding-top: 0px;
}

// Modal Roles ----------------------------------
// Used specifically in in Admin/Users/Roles & Admin Users/New User/Form. 

.modal-roles .close{
  background-color: white;
  min-width: 30px;
  width: 30px;
  min-height: 30px;
  height: 30px;
  border-radius: 50%;
  padding: 0;
  position: absolute;
  top: -16px;
  right: -16px;
  text-align: center;
  opacity: 1;
  border: 2px solid white;
  z-index: 100;
  & span {
    font-size: 28px;
    line-height: 28px;
    color: $sa-red;
  }
}
.modal-roles .close:not(:disabled):not(.disabled):hover{
  opacity: 1;
  background-color: $sa-red;
  & span{
    color: white;
    line-height: 26px;
  }
}

.modal-roles .modal-content{
  background-color: $sa-info;
}

.modal-roles .modal-header {
  border-bottom: none;
  color: white;
}

.modal-roles .modal-dialog-scrollable .modal-body {
  overflow-x: hidden;
  overflow-y: auto;
}

.modal-roles .modal-body{
  padding-top: 0;
  margin-top: 0;
}

.modal-roles .modal-body h3{
  background-color: darken($sa-info, 20%);
  border-top-left-radius: 16px;
  border-top-right-radius: 16px;
  min-height: 43px;
  max-height: auto;
  padding:7.5px 15px;
  font-size: 21px;
  color: white; 
  margin-top: 0;
  margin-left: -15px;
  margin-right: -15px;
  margin-bottom: 10px;
}
.modal-roles .modal-body h1,
.modal-roles .modal-body h2,
.modal-roles .modal-body h4,
.modal-roles .modal-body h5,
.modal-roles .modal-body h6{
  font-size: 16px;
  line-height: 18px;
  @include roboto-bold;
  color: $text;
  margin-bottom: 0;
}
.modal-roles .modal-body p{
  font-size: 15px;
  line-height: 17px;
  color: $text;
}
.modal-roles .modal-body ul li{
  color: $text;
}
.modal-roles .modal-body ul li:before {
  color: white;
}

.modal-roles .modal-body ul li:last-child{
  padding-bottom: 0;
}

.modal-roles .modal-body hr{
  border-color: white;
}

.modal-roles .modal-footer {
  margin-left: 0px;
  width: 100%;
  border-color: darken($sa-info, 20%);
  color: white;
}

.modal-roles .modal-body a:link {color: white;}
.modal-roles .modal-body a:visited {color: white;}
.modal-roles .modal-body a:hover {color: darken($sa-info, 20%);}
.modal-roles .modal-body a:focus {color: darken($sa-info, 25%)!important;}
.modal-roles .modal-body a:active {color: darken($sa-info, 25%)!important;}


.modal-roles ::-webkit-scrollbar-thumb {
  background-color: darken($sa-info, 20%)!important;
}

// Modal Button colours -------------------------

.modal-info .btn-info,
.modal-primary .modal-footer .btn-info,
.modal-secondary .modal-footer .btn-info,
.modal-roles .btn-info { 
  background-color: darken($sa-info, 20%); 
  border-color: darken($sa-info, 20%);
}
.modal-info .btn-info:visited,
.modal-primary .modal-footer .btn-info:visited,
.modal-secondary .modal-footer .btn-info:visited,
.modal-roles .btn-info:visited { 
  background-color: darken($sa-info, 20%); 
  border-color: darken($sa-info, 20%);
}
.modal-info .btn-info:hover,
.modal-primary .modal-footer .btn-info:hover,
.modal-secondary .modal-footer .btn-info:hover,
.modal-roles .btn-info:hover { 
  background-color: darken($sa-info, 25%); 
  border-color: darken($sa-info, 25%); 
}
.modal-info .btn-info:focus,
.modal-primary .modal-footer .btn-info:focus,
.modal-secondary .modal-footer .btn-info:focus,
.modal-roles .btn-info:focus { 
  background-color: darken($sa-info, 27%)!important; 
  border-color: darken($sa-info, 27%)!important;
}
.modal-info .btn-info:active,
.modal-primary .modal-footer .btn-info:active,
.modal-secondary .modal-footer .btn-info:active,
.modal-roles .btn-info:active  { 
  background-color: darken($sa-info, 28%)!important; 
  border-color: darken($sa-info, 28%)!important;
}

.modal-info .btn-danger,
.modal-primary .modal-footer .btn-danger,
.modal-secondary .modal-footer .btn-danger,
.modal-roles .btn-danger { 
  background-color: darken($sa-danger, 10%);
  border-color: darken($sa-danger, 10%); 
}
.modal-info .btn-danger:visited,
.modal-primary .modal-footer .btn-danger:visited,
.modal-secondary .modal-footer .btn-danger:visited,
.modal-roles .btn-danger:visited { 
  background-color: darken($sa-danger, 10%); 
  border-color: darken($sa-danger, 10%); 
}
.modal-info .btn-danger:hover,
.modal-primary .modal-footer .btn-danger:hover,
.modal-secondary .modal-footer .btn-danger:hover,
.modal-roles .btn-danger:hover { 
  background-color: darken($sa-danger, 15%); 
  border-color: darken($sa-danger, 15%); 
}
.modal-info .btn-danger:focus,
.modal-primary .modal-footer .btn-danger:focus,
.modal-secondary .modal-footer .btn-danger:focus,
.modal-roles .btn-danger:focus { 
  background-color: darken($sa-danger, 17%)!important; 
  border-color: darken($sa-danger, 17%)!important; 
}
.modal-info .btn-danger:active,
.modal-primary .modal-footer .btn-danger:active,
.modal-secondary .modal-footer .btn-danger:active,
.modal-roles .btn-danger:active  { 
  background-color: darken($sa-danger, 18%)!important; 
  border-color: darken($sa-danger, 18%)!important; 
}

.modal-info .btn-success,
.modal-primary .modal-footer .btn-success,
.modal-secondary .modal-footer .btn-success,
.modal-roles .btn-success { 
  background-color: darken($sa-success, 10%);
  border-color: darken($sa-success, 10%);
}
.modal-info .btn-success:visited,
.modal-primary .modal-footer .btn-success:visited,
.modal-secondary .modal-footer .btn-success:visited,
.modal-roles .btn-success:visited { 
  background-color: darken($sa-success, 10%);
  border-color: darken($sa-success, 10%);
}
.modal-info .btn-success:hover,
.modal-primary .modal-footer .btn-success:hover,
.modal-secondary .modal-footer .btn-success:hover,
.modal-roles .btn-success:hover { 
  background-color: darken($sa-success, 15%);
  border-color: darken($sa-success, 15%);
}
.modal-info .btn-success:focus,
.modal-primary .modal-footer .btn-success:focus,
.modal-secondary .modal-footer .btn-success:focus,
.modal-roles .btn-success:focus { 
  background-color: darken($sa-success, 17%)!important;
  border-color: darken($sa-success, 17%)!important;
}
.modal-info .btn-success:active,
.modal-primary .modal-footer .btn-success:active,
.modal-secondary .modal-footer .btn-success:active,
.modal-roles .btn-success:active  { 
  background-color: darken($sa-success, 18%)!important;
  border-color: darken($sa-success, 18%)!important;
}

.modal-info .btn-save,
.modal-primary .modal-footer .btn-save,
.modal-secondary .modal-footer .btn-save,
.modal-roles .btn-save { 
  background-color: darken($sa-success, 10%);
  border-color: darken($sa-success, 10%);
}
.modal-info .btn-save:visited,
.modal-primary .modal-footer .btn-save:visited,
.modal-secondary .modal-footer .btn-save:visited,
.modal-roles .btn-save:visited { 
  background-color: darken($sa-success, 10%);
  border-color: darken($sa-success, 10%);
}
.modal-info .btn-save:hover,
.modal-primary .modal-footer .btn-save:hover,
.modal-secondary .modal-footer .btn-save:hover,
.modal-roles .btn-save:hover { 
  background-color: darken($sa-success, 15%);
  border-color: darken($sa-success, 15%);
}
.modal-info .btn-save:focus,
.modal-primary .modal-footer .btn-save:focus,
.modal-secondary .modal-footer .btn-save:focus,
.modal-roles .btn-save:focus { 
  background-color: darken($sa-success, 17%)!important;
  border-color: darken($sa-success, 17%)!important;
}
.modal-info .btn-save:active,
.modal-primary .modal-footer .btn-save:active,
.modal-secondary .modal-footer .btn-save:active,
.modal-roles .btn-save:active  { 
  background-color: darken($sa-success, 18%)!important;
  border-color: darken($sa-success, 18%)!important;
}


// Modals in Card, Panel & Fieldset Headings ----

.card-header a.modal-info-circle,
.panel-header a.modal-info-circle,
.panel-heading a.modal-info-circle,
legend a.modal-info-circle{
  background-color: $sa-info;
  height: 22px;
  width: 22px;
  border:2px solid white;
  position: relative;
  top: 2px;
  right: 0px;
  border-radius: 11px;
  float: right;
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f129" ;
    color:white;
    font-weight: 900;
    font-size: 11px;
    position: relative;
    top: -5.5px;
    right: -6.5px;
  }
}

.card-body a.modal-info-circle,
.panel-body a.modal-info-circle,
.form-group a.modal-info-circle{
  background-color: $sa-info;
  height: 22px;
  width: 22px;
  border:2px solid white;
  position: relative;
  top: 2px;
  right: 0px;
  border-radius: 11px;
  float: right;
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f129" ;
    color:white;
    font-weight: 900;
    font-size: 11px;
    position: relative;
    top: -3.5px;
    right: -6.5px;
  }
}

.card-footer a.modal-info-circle,
.panel-footer a.modal-info-circle,
.form-footer a.modal-info-circle{
  background-color: $sa-info;
  height: 22px;
  width: 22px;
  border:2px solid white;
  position: relative;
  top: 0px;
  right: 0px;
  border-radius: 11px;
  float: right;
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f129" ;
    color:white;
    font-weight: 900;
    font-size: 11px;
    position: relative;
    top: -3.5px;
    right: -6.5px;
  }
}

p > a.modal-info-circle-inline{
  background-color: $sa-info;
  height: 22px;
  width: 22px;
  border:2px solid white;
  display: inline-block;
  border-radius: 11px;
  clear: both;
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f129" ;
    color:white;
    font-weight: 900;
    font-size: 11px;
    display: block;
    position: relative;
    top: -2px;
    right: -7.5px;
  }
}
// Navbar =======================================

// To allow for Side tabs

@media (max-width: 991.98px){
  .navbar-expand-lg>.container, .navbar-expand-lg>.container-fluid {
      padding-right: 8px;
      padding-left: 8px;
  }
}
@media (max-width: 575.98px){
  .navbar-expand-lg>.container, .navbar-expand-lg>.container-fluid {
      padding-right: 14px;
      padding-left: 14px;
  }
}

// Base styles
.navbar.fixed-top{
  box-shadow: $sa-box-shadow;
}
/* change the background color */
.navbar {
  padding: 0rem 1rem;
  z-index: 3002;
}

/* change the padding for height */
.navbar .navbar-nav .nav-link {
  padding: $sa-spacer-15 $sa-spacer-8;
}

/* change the color of active or hovered links */
.navbar .nav-item:focus .nav-link {
  background-color: $sa-grey-04; 
}
.navbar .nav-item:hover .nav-link {
  background-color: $sa-grey-06;
}
.navbar .nav-item:active .nav-link {
  background-color: $sa-grey-08;
}
.navbar .nav-item.active .nav-link{
  background-color: $sa-grey-08; /* add background-color to active links */
  color: white;
}
.navbar .nav-item.active .nav-link:hover{
  background-color: $sa-grey-10; /* add background-color to active links */
}
.navbar .nav-item.active .nav-link:focus{
  background-color: $sa-grey-12; /* add background-color to active links */
}

.navbar-brand{
  padding: 0 ;
  @media (max-width: 991.98px){
    max-height: 35px;
    height: 35px;
  }
}

// Dropdown Menu

.navbar {
  .dropdown-menu{
    border-color: $sa-grey-08;
  }
  .dropdown-item{
    color: $text;
    padding: $sa-spacer-4 $sa-spacer-8;
    &:visited { 
      color: $text;
    }
    &:hover{
      background-color: $sa-grey-04;
    }
    &:focus,
    &.active,
    &.active:hover{
      background-color: $sa-grey-06;
    }
    &:active{
      background-color: $sa-grey-08;
    }
  }
  
  .dropdown-item:first-of-type{ // Override Dopdown styles
    border-top-left-radius: 0px;
    border-top-right-radius: 0px;
  }
  .dropdown-item:last-of-type{
    border-bottom-left-radius: 0px;
    border-bottom-right-radius: 0px;
  }
  .dropdown-menu li:first-of-type .dropdown-item{
    border-top-left-radius: $sa-inner-border-radius;
    border-top-right-radius: $sa-inner-border-radius;
  }
  .dropdown-menu li:last-of-type .dropdown-item{
    border-bottom-left-radius: $sa-inner-border-radius;
    border-bottom-right-radius: $sa-inner-border-radius;
  }
}



// Navbar Toggler
.navbar .navbar-toggler{
  background-color: $sa-grey-14;
  border:none;
  padding: 0 $sa-spacer-4;
  &:hover{
    background-color: $sa-grey-16;
  }
  &:focus,
  &:active{
    background-color: $sa-grey-18;
  }
}

.navbar .navbar-toggler .navbar-toggler-icon{
  background-image: none;
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f0c9" ;
    color:white;
    font-weight: 900;
    line-height: 1.75rem;
  }
}

// Disabled
// https://stackoverflow.com/questions/1107551/css-strikethrough-different-color-from-text
.navbar .nav-item a.disabled{
  color:         rgba(225, 225, 225, 0.5);
  text-decoration: line-through;
  /*noinspection CssOverwrittenProperties*/
  text-decoration: white line-through; /* Ignored in CSS1/CSS2 UAs */
}
.navbar .nav-item:focus .nav-link.disabled,
.navbar .nav-item:hover .nav-link.disabled {
  // color:         rgba(225, 225, 225, 0.5);
  background-color: transparent; 
  cursor: not-allowed;
}


// Dropdown Submenu - Added as not included in BS4
// https://stackoverflow.com/questions/44467377/bootstrap-4-multilevel-dropdown-inside-navigation
.dropdown-submenu {
  position: relative;
}

.dropdown-submenu a::after {
  transform: rotate(-90deg);
  position: absolute;
  right: 6px;
  top: .8em;
}

.dropdown-submenu .dropdown-menu {
  // overflow: visible;
  top: 0;
  left: 100%;
  // margin-left: .1rem;
  // margin-right: .1rem;
}

// .dropdown-submenu a:last-of-type{
//   // border-bottom-left-radius: $sa-inner-border-radius;
//   // border-bottom-right-radius: $sa-inner-border-radius;
// }

.navbar-primary .dropdown-submenu .dropdown-menu{
  border-left: 1px solid darken($user-primary-colour, 30%);
}


// ==============================================
// Navbar Dark ==================================

.navbar-dark {
  background-color: $sa-grey-14;
}

/* change the color of active or hovered links */
.navbar-dark .nav-item:hover .nav-link {
  background-color: $sa-grey-16; 
}
.navbar-dark .nav-item:focus .nav-link {
  background-color: $sa-grey-18; 
}
.navbar-dark .nav-item:active .nav-link {
  background-color: $sa-grey-16  
}
// add background-color to active links
.navbar-dark .nav-item.active .nav-link{ 
  background-color: $sa-grey-16 
}
.navbar-dark .nav-item.active .nav-link:hover{
  background-color: $sa-grey-18 
}
.navbar-dark .nav-item.active .nav-link:focus{
  background-color: black
}

// Dropdown Menu

.navbar-dark .nav-item.dropdown.show .nav-link.dropdown-toggle{
  background-color: $sa-grey-18;
}
.navbar-dark .dropdown-menu{
  border:none;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  background-color: $sa-grey-14;
}

.navbar-dark .dropdown-menu .dropdown-item{
  color: white;
  border-color: $user-primary-colour;
  &:hover{
    background-color: $sa-grey-16;
    color: white;
  }
  &:focus{
    background-color: $sa-grey-18;
    color: white;
  }
  &:active{
    background-color: black;
    color: white;
  }
}

// Submenu

.navbar-dark .dropdown-submenu .dropdown-menu{
  border:none;
  border-top-left-radius: $sa-border-radius;
  border-top-right-radius: $sa-border-radius;
}
.navbar-dark .dropdown-menu .dropdown-divider {
    border-color: white;
}

// Dropdown header
.navbar-dark .dropdown-menu .dropdown-header{
  color: white;
}


// Navbar Toggler
.navbar-dark .dropdown-menu .dropdown-item.dropdown-toggle:active,
.navbar-dark .dropdown-menu .dropdown-item.dropdown-toggle.active{
  background-color: darken($user-primary-colour, 30%);
}
.navbar-dark .navbar-toggler{
  background-color: $sa-grey-04;
  &:hover{
    background-color: $sa-grey-06;
  }
  &:focus,
  &:active{
    background-color: $sa-grey-08;
  }
}

.navbar-dark .navbar-toggler .navbar-toggler-icon{
  background-image: none;
  &::before{
    color:$text;
  }
}

// Navbar SARD ==================================

.navbar-primary {
  background-color: $user-primary-colour;
}

.navbar-primary .navbar-brand,
.navbar-primary .navbar-text {
    color: white;
}

.navbar-primary .navbar-nav .nav-link {
  color: white;
}

/* change the color of active or hovered links */
.navbar-primary .nav-item:hover .nav-link {
  background-color: darken($user-primary-colour, 15%); 
}
.navbar-primary .nav-item:focus .nav-link {
  background-color: darken($user-primary-colour, 10%); 
}
.navbar-primary .nav-item:active .nav-link {
  background-color: darken($user-primary-colour, 20%); 
}
// add background-color to active links
.navbar-primary .nav-item.active .nav-link{ 
  background-color: darken($user-primary-colour, 20%); 
}
.navbar-primary .nav-item.active .nav-link:hover{
  background-color: darken($user-primary-colour, 25%); 
}
.navbar-primary .nav-item.active .nav-link:focus{
  background-color: darken($user-primary-colour, 30%); 
}

.navbar-primary .nav-item:focus .nav-link.disabled,
.navbar-primary .nav-item:hover .nav-link.disabled {
  color:         rgba(225, 225, 225, 0.5);
}

// Dropdown Menu
.navbar-primary .dropdown-menu{
  border:none;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  background-color: darken($user-primary-colour, 15%);
  color: white;
}

.navbar-primary .nav-item.dropdown.show .nav-link.dropdown-toggle{
  background-color: darken($user-primary-colour, 25%);
}

.navbar-primary .dropdown-menu .dropdown-item{
  color: white;
  border-color: $user-primary-colour;
  
  &:focus,
  &.active{
    background-color: darken($user-primary-colour, 25%);
  }
  &.active:hover{
    background-color: darken($user-primary-colour, 30%);
  }
  &:hover{
    background-color: darken($user-primary-colour, 25%);
  }
  &:active{
    background-color: darken($user-primary-colour, 30%);
  }
}


// Submenu
.navbar-primary .dropdown-menu .dropdown-item.dropdown-toggle:active,
.navbar-primary .dropdown-menu .dropdown-item.dropdown-toggle.active{
  background-color: darken($user-primary-colour, 30%);
}
.navbar-primary .dropdown-submenu .dropdown-menu{
  border:none;
  border-top-left-radius: $sa-border-radius;
  border-top-right-radius: $sa-border-radius;
}
.navbar-primary .dropdown-menu .dropdown-divider {
    border-color: white;
}

.navbar-primary .dropdown-submenu.active .dropdown-item.dropdown-toggle{
  background-color: darken($user-primary-colour, 25%);
}
.navbar-primary .dropdown-submenu.active .dropdown-item.dropdown-toggle:hover{
  background-color: darken($user-primary-colour, 30%);
}

// Dropdown header
.navbar-primary .dropdown-menu .dropdown-header{
  color: white;
}

// Navbar Toggler
.navbar-primary .navbar-toggler{
  background-color: darken($user-primary-colour, 20%);
  &:hover{
    background-color: darken($user-primary-colour, 25%);
  }
  &:focus,
  &:active{
    background-color: darken($user-primary-colour, 30%);
  }
}

.navbar-primary .navbar-toggler .navbar-toggler-icon{
  background-image: none;
  &::before{
    color:white;
  }
}


// Navbar SECONDARY =============================

.navbar-secondary {
  background-color: $admin-primary-colour;
}

.navbar-secondary .navbar-brand,
.navbar-secondary .navbar-text {
    color: white;
}

.navbar-secondary .navbar-nav .nav-link {
  color: white;
}

/* change the color of active or hovered links */
.navbar-secondary .nav-item:hover .nav-link {
  background-color: darken($admin-primary-colour, 15%); 
}
.navbar-secondary .nav-item:focus .nav-link {
  background-color: darken($admin-primary-colour, 10%); 
}
.navbar-secondary .nav-item:active .nav-link {
  background-color: darken($admin-primary-colour, 20%); 
}
// add background-color to active links
.navbar-secondary .nav-item.active .nav-link{ 
  background-color: darken($admin-primary-colour, 20%); 
}
.navbar-secondary .nav-item.active .nav-link:hover{
  background-color: darken($admin-primary-colour, 25%); 
}
.navbar-secondary .nav-item.active .nav-link:focus{
  background-color: darken($admin-primary-colour, 30%); 
}

.navbar-secondary .nav-item:focus .nav-link.disabled,
.navbar-secondary .nav-item:hover .nav-link.disabled {
  color:         rgba(225, 225, 225, 0.5);
}

// Dropdown Menu
.navbar-secondary .dropdown-menu{
  border:none;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  background-color: darken($admin-primary-colour, 10%);
  color: white;
}

.navbar-secondary .nav-item.dropdown.show .nav-link.dropdown-toggle{
  background-color: darken($admin-primary-colour, 25%);
}

.navbar-secondary .dropdown-menu .dropdown-item{
  color: white;
  border-color: $admin-primary-colour;
  &:focus{
    background-color: darken($admin-primary-colour, 25%);
  }
  &:hover{
    background-color: darken($admin-primary-colour, 25%);
  }
  &:active{
    background-color: darken($admin-primary-colour, 30%);
  }
}


// Submenu
.navbar-secondary .dropdown-menu .dropdown-item.dropdown-toggle:active,
.navbar-secondary .dropdown-menu .dropdown-item.dropdown-toggle.active{
  background-color: darken($admin-primary-colour, 30%);
}

.navbar-primary .dropdown-submenu.active .dropdown-item.dropdown-toggle{
  background-color: darken($admin-primary-colour, 25%);
}
.navbar-primary .dropdown-submenu.active .dropdown-item.dropdown-toggle:hover{
  background-color: darken($admin-primary-colour, 30%);
}

.navbar-secondary .dropdown-submenu .dropdown-menu{
  border:none;
  border-top-left-radius: $sa-border-radius;
  border-top-right-radius: $sa-border-radius;
}
.navbar-secondary .dropdown-menu .dropdown-divider {
    border-color: white;
}

// Dropdown header
.navbar-secondary .dropdown-menu .dropdown-header{
  color: white;
}

// Navbar Toggler
.navbar-secondary .navbar-toggler{
  background-color: darken($admin-primary-colour, 20%);
  &:hover{
    background-color: darken($admin-primary-colour, 25%);
  }
  &:focus,
  &:active{
    background-color: darken($admin-primary-colour, 30%);
  }
}

.navbar-secondary .navbar-toggler .navbar-toggler-icon{
  background-image: none;
  &::before{
    color:white;
  }
}

// Navbar dropdowns at small screens
@media (max-width: 991px){
  .navbar .navbar-nav .nav-link {
    padding: $sa-spacer-4 $sa-spacer-8;
  }
  .navbar .searchbar-sard {
    margin-bottom: $sa-spacer-8;
  }
}

@media (max-width: 991px){
  .dropdown-submenu a::after{
    transform: rotate(0deg);
  }
  .dropdown-submenu .dropdown-menu{
    margin-left: $sa-spacer-8;
    margin-right: $sa-spacer-8;
  }
}
// Dark
@media (max-width: 991px){
  .navbar-dark .dropdown-submenu .dropdown-menu.show{
    border: 1px solid white;
  }

  .navbar-dark .dropdown-submenu .dropdown-menu.show{
    border: 0px ;
    background-color: darken($sa-grey-14, 10%);
  }

  .navbar-dark .dropdown-submenu .dropdown-menu .dropdown-item{
    &:hover{
      background-color: darken($sa-grey-14, 15%);
    }
    &:focus{
      background-color: darken($sa-grey-14, 20%);
    }
    &:active{
      background-color: darken($sa-grey-14, 25%);
    }
  }
  // t
  .navbar-dark .dropdown-submenu .dropdown-menu .dropdown-submenu .dropdown-menu.show{
    border: 0px solid white;
    background-color: darken($sa-grey-14, 20%);
  }

  .navbar-dark .dropdown-submenu .dropdown-menu .dropdown-submenu .dropdown-menu .dropdown-item{
    &:hover{
      background-color: darken($sa-grey-14, 25%);
    }
    &:focus{
      background-color: darken($sa-grey-14, 30%);
    }
    &:active{
      background-color: darken($sa-grey-14, 35%);
    }
  }
} // End small sizes

  // SARD
@media (max-width: 991px){
  .navbar-primary .dropdown-submenu .dropdown-menu.show{
    border: 1px solid white;
  }

  .navbar-primary .dropdown-submenu .dropdown-menu.show{
    border: 0px ;
    background-color: darken($user-primary-colour, 10%);
  }

  .navbar-primary .dropdown-submenu .dropdown-menu .dropdown-item{
    &:hover{
      background-color: darken($user-primary-colour, 15%);
    }
    &:focus{
      background-color: darken($user-primary-colour, 20%);
    }
    &:active{
      background-color: darken($user-primary-colour, 25%);
    }
  }
  // t
  .navbar-primary .dropdown-submenu .dropdown-menu .dropdown-submenu .dropdown-menu.show{
    border: 0px solid white;
    background-color: darken($user-primary-colour, 15%);
  }

  .navbar-primary .dropdown-submenu .dropdown-menu .dropdown-submenu .dropdown-menu .dropdown-item{
    &:hover{
      background-color: darken($user-primary-colour, 20%);
    }
    &:focus{
      background-color: darken($user-primary-colour, 25%);
    }
    &:active{
      background-color: darken($user-primary-colour, 30%);
    }
  }
} // End small sizes

  // Trust
  @media (max-width: 991px){
    .navbar-trust .dropdown-submenu .dropdown-menu.show{
      border: 1px solid white;
    }
  
    .navbar-trust .dropdown-submenu .dropdown-menu.show{
      border: 0px ;
      background-color: darken($user-primary-colour, 10%);
    }
  
    .navbar-trust .dropdown-submenu .dropdown-menu .dropdown-item{
      &:hover{
        background-color: darken($user-primary-colour, 15%);
      }
      &:focus{
        background-color: darken($user-primary-colour, 20%);
      }
      &:active{
        background-color: darken($user-primary-colour, 25%);
      }
    }
    // t
    .navbar-trust .dropdown-submenu .dropdown-menu .dropdown-submenu .dropdown-menu.show{
      border: 0px solid white;
      background-color: darken($user-primary-colour, 15%);
    }
  
    .navbar-trust .dropdown-submenu .dropdown-menu .dropdown-submenu .dropdown-menu .dropdown-item{
      &:hover{
        background-color: darken($user-primary-colour, 20%);
      }
      &:focus{
        background-color: darken($user-primary-colour, 25%);
      }
      &:active{
        background-color: darken($user-primary-colour, 30%);
      }
    }
  } // End small sizes

    // Secondary
    @media (max-width: 991px){
      .navbar-secondary .dropdown-submenu .dropdown-menu.show{
        border: 1px solid white;
      }
    
      .navbar-secondary .dropdown-submenu .dropdown-menu.show{
        border: 0px ;
        background-color: darken($admin-primary-colour, 10%);
      }
    
      .navbar-secondary .dropdown-submenu .dropdown-menu .dropdown-item{
        &:hover{
          background-color: darken($admin-primary-colour, 15%);
        }
        &:focus{
          background-color: darken($admin-primary-colour, 20%);
        }
        &:active{
          background-color: darken($admin-primary-colour, 25%);
        }
      }
      // t
      .navbar-secondary .dropdown-submenu .dropdown-menu .dropdown-submenu .dropdown-menu.show{
        border: 0px solid white;
        background-color: darken($admin-primary-colour, 15%);
      }
    
      .navbar-secondary .dropdown-submenu .dropdown-menu .dropdown-submenu .dropdown-menu .dropdown-item{
        &:hover{
          background-color: darken($admin-primary-colour, 20%);
        }
        &:focus{
          background-color: darken($admin-primary-colour, 25%);
        }
        &:active{
          background-color: darken($admin-primary-colour, 30%);
        }
      }
    } // End small sizes




// Navs =========================================

$sa-nav-colour: $sa-grey-14;

.nav.nav-tabs .nav-item{
  .nav-link{
    color: $sa-nav-colour;
    &:visited{
      color: $sa-nav-colour;
    }
    &:hover{
      background-color: $sa-grey-02;
    }
    &:focus,
    &:active{
      background-color: $sa-grey-04;
    }
  }
}

.nav.nav-pills .nav-link{
  border-radius: $sa-spacer-6;
  color: $sa-nav-colour;
  &:visited{
    color: $sa-nav-colour;
  }
  &:hover{
    background-color: lighten($sa-nav-colour, 55%);
  }
  &:focus,
  &:active{
    background-color: lighten($sa-nav-colour, 45%);
  }
}

.nav.nav-pills .nav-link.active{
  &:focus,
  &:active{
    background-color: $sa-nav-colour;
  }
}

.nav-pills .nav-link.active, .nav-pills .show>.nav-link {
  background-color: $sa-nav-colour;
}

.nav.nav-pills .nav-item,
.nav.nav-pills .nav-link{
  & a{
    color: $sa-nav-colour;
  }
}
.nav.nav-pills .nav-link.active{
  background-color: $sa-nav-colour;
  color: white;
  &:focus,
  &:active{
    background-color: $sa-nav-colour;
  }
}

// Colour variations ----------------------------

.nav-primary.nav.nav-pills .nav-item,
.nav-primary.nav.nav-pills .nav-link{
  & a{
    color: $user-primary-colour;
  }
}
.nav-primary.nav.nav-pills .nav-link.active{
  background-color: $user-primary-colour;
  color: white;
  &:focus,
  &:active{
    background-color: $user-primary-colour;
  }
}

.nav-secondary.nav.nav-pills .nav-item,
.nav-secondary.nav.nav-pills .nav-link{
  & a{
    color: $secondary;
  }
}
.nav-secondary.nav.nav-pills .nav-link.active{
  background-color: $secondary;
  color: white;
  &:focus,
  &:active{
    background-color: $secondary;
  }
}

// Navs in Cards --------------------------------

.card-header-tabs{
 margin-left: 0;
 margin-right: 0;
 margin-top: $sa-spacer-6;
 margin-bottom: -$sa-spacer-10;
}
.nav.nav-tabs.card-header-tabs .nav-item{
  .nav-link{
    // border: 1px solid white;
    color: $sa-nav-colour;
    background-color: white;
    margin-right: 1px;
    padding-top: $sa-spacer-2;
    // padding-bottom: $sa-spacer-6;
    &:visited{
      color: $sa-nav-colour;
    }
    &:hover{
      background-color: $sa-grey-02;
    }
    &:focus,
    &:active{
      background-color: $sa-grey-04;
    }
    &.active{
      background-color: $sa-grey-02;
    }
  }
}
// Panels =======================================

// Base class
.panel{
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0; // See https://github.com/twbs/bootstrap/pull/22740#issuecomment-305868106
  word-wrap: break-word;
  background-color: $sa-bg;
  background-clip: border-box;
  border:1px solid transparent;
  @include border-radius($sa-border-radius);
  margin-bottom: $sa-margin;

  & .panel-heading, .panel-header, .panel-footer{
    border:none;
    color: white;
  }
}
.panel-body {
  padding: $sa-body-padding;
  margin: -1px;
  @include clearfix;
}
.panel-body.border-top{
  border-color: white!important;
  margin-top: -0.5px!important;
}
.panel-body.border-bottom{
  border-color: white!important;
  margin-bottom: -0.5px!important;
}
.panel-body hr{
  border-color: white;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}

.panel-body p:last-child {
  margin-bottom: 0;
}

.panel-body p + hr{
  margin-top: -0.5rem;
}
.panel-title{
  margin-bottom: initial;
}



// Optional heading
.panel-heading, .panel-header  {
  padding: $sa-heading-padding;
  border-bottom: 1px solid transparent;
  background-color: $sa-heading-bg;
  margin: -1px;
  overflow: hidden;

  font-size: $sa-heading-font-size;
  font-weight: 300;
  line-height: $sa-heading-line-height;
  color: $sa-heading-text-color;

  > .dropdown .dropdown-toggle {
    color: inherit;
  }
  &:first-child {
    @include border-radius($sa-inner-border-radius $sa-inner-border-radius 0 0);
  }
}

.panel-heading h3, .panel-header h3,
.panel-heading h4, .panel-header h4{
  margin: 0;
  font-size: $sa-heading-font-size;
  line-height: $sa-heading-line-height;
  font-weight: $sa-heading-font-weight;
  color: $sa-heading-text-color;
}


// Optional footer (stays gray in every modifier class)
.panel-footer {
  padding: $sa-footer-padding;
  background-color: $sa-footer-bg;
  color: $sa-heading-text-color;
  font-weight: $sa-heading-font-weight;
  border-top: 1px solid $sa-inner-border;
  @include border-bottom-radius(($sa-border-radius - 1));
  margin: -1px;

  &:last-child {
    @include border-radius( 0 0 $sa-inner-border-radius $sa-inner-border-radius);
  }
}


// SARD panels ===================================

.panel.panel-sard, .panel.panel-default{
  // background-color: $sa-bg;
  & .panel-heading, .panel-header, .panel-footer{
    background-color: $sa-heading-bg;
    & .text-muted { 
      color: lighten($sa-heading-bg, 30%) !important;
    }
  }
}
.panel.panel-sard.outline, .panel.panel-default.outline{
  background-color: white;
  border-color: $sa-heading-bg;
  & .panel-body.border-bottom{
    border-color: $sa-heading-bg!important;
  }
  & .panel-body.border-top{
    border-color: $sa-heading-bg!important;
  }
  & .panel-body hr{
    border-color: $sa-heading-bg!important;
  }
}


.panel.panel-primary{
  background-color: $user-primary-colour;
  & .panel-heading, .panel-header, .panel-footer{
    background-color: darken($user-primary-colour, 15%);
    & .text-muted { 
      color: darken($user-primary-colour, 25%) !important;
    }
  }
}
.panel.panel-primary.outline{
  background-color: white;
  border-color: $user-primary-colour;
  & .panel-body.border-bottom{
    border-color: $user-primary-colour!important;
  }
  & .panel-body.border-top{
    border-color: $user-primary-colour!important;
  }
  & .panel-body hr{
    border-color: $user-primary-colour;
  }
}

.panel.panel-secondary{
  background-color: $user-secondary-colour;
  & .panel-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: white;
    }
  }
  & .panel-heading, .panel-header, .panel-footer{
    background-color: darken($user-secondary-colour, 5%);
    & .text-muted { 
      color: lighten($user-secondary-colour, 10%) !important;
    }
  }
}
.panel.panel-secondary.outline{
  background-color: white;
  border-color: $user-secondary-colour;
  & .panel-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: $text;
    }
  }
  & .panel-body.border-bottom{
    border-color: $user-secondary-colour!important;
  }
  & .panel-body.border-top{
    border-color: $user-secondary-colour!important;
  }
  & .panel-body hr{
    border-color: $user-secondary-colour;
  }
}

.panel.panel-success{
  background-color: $success;
  & .panel-heading, .panel-header, .panel-footer{
    background-color: darken($success, 10%);
    & .text-muted { 
      color: darken($success, 25%) !important;
    }
  }
}
.panel.panel-success.outline{
  background-color: white;
  border-color: $success;
  & .panel-body.border-bottom{
    border-color: $success!important;
  }
  & .panel-body.border-top{
    border-color: $success!important;
  }
  & .panel-body hr{
    border-color: $success;
  }
}

.panel.panel-danger{
  background-color: $danger;
  & .panel-heading, .panel-header, .panel-footer{
    background-color: darken($danger, 15%);
    & .text-muted { 
      color: lighten($text, 25%) !important;
    }
  }
  & .panel-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: white;
    }
  }
}
.panel.panel-danger.outline{
  background-color: white;
  border-color: $danger;
  & .panel-body.border-bottom{
    border-color: $danger!important;
  }
  & .panel-body.border-top{
    border-color: $danger!important;
  }
  & .panel-body hr{
    border-color: $danger;
  }
  & .panel-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: $text;
    }
  }
}

.panel.panel-warning{
  background-color: $warning;
  & .panel-heading, .panel-header, .panel-footer{
    background-color: $text;
    & .text-muted { 
      color: lighten($text, 25%) !important;
    }
  }
}
.panel.panel-warning.outline{
  background-color: white;
  border-color: $warning;
  & .panel-body.border-bottom{
    border-color: $warning!important;
  }
  & .panel-body.border-top{
    border-color: $warning!important;
  }
  & .panel-body hr{
    border-color: $warning;
  }
}


.panel.panel-info{
  background-color: $info;
  & .panel-heading, .panel-header, .panel-footer{
    background-color: darken($info, 20%);
    & .text-muted { 
      color: darken($info, 50%) !important;
    }
  }
}
.panel.panel-info.outline{
  background-color: white;
  border-color: $info;
  & .panel-body.border-bottom{
    border-color: $info!important;
  }
  & .panel-body.border-top{
    border-color: $info!important;
  }
  & .panel-body hr{
    border-color: $info;
  }
}


.panel.panel-dark{
  background-color: $sa-heading-bg;
  & .panel-heading, .panel-header, .panel-footer{
    background-color: $sa-heading-bg;
    & .text-muted { 
      color: lighten($text, 25%) !important;
    }
  }
  & .panel-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: white;
    }
  }
}
.panel.panel-dark.outline{
  background-color: white;
  border-color: $sa-heading-bg;
  & .panel-body.border-bottom{
    border-color: $sa-heading-bg!important;
  }
  & .panel-body.border-top{
    border-color: $sa-heading-bg!important;
  }
  & .panel-body hr{
    border-color: $sa-heading-bg;
  }
  & .panel-body{
    & h1, h2, h3, h4, h5, h6, p{
      color: $text;
    }
  }
}

.panel.panel-white{
  background-color: white;
  & .panel-heading, .panel-header, .panel-footer{
    background-color: white;
    color: $text;
    & .text-muted { 
      color: lighten($text, 25%) !important;
    }
  }
  & .panel-heading, .panel-header{ 
    border-bottom: 1px solid $sa-grey-04;
    margin-bottom: -2px;
  }
  & .panel-footer{
    border-top: 1px solid $sa-grey-04;
    margin-top: -2px;
  }
  & .panel-body.border-bottom{
    border-color: $sa-grey-04!important;
  }
  & .panel-body.border-top{
    border-color: $sa-grey-04!important;
  }
  & .panel-body hr{
    border-color: $sa-grey-04;
  }
}
.panel.panel-white.outline{
  background-color: transparent;
  border-color: white;
  & .panel-heading, .panel-header, .panel-footer{
    background-color: transparent;
    color: $text;
  }
  & .panel-heading, .panel-header{ 
    border-bottom: 1px solid white;
    margin-bottom: -2px;
  }
  & .panel-footer{
    border-top: 1px solid white;
    margin-top: -2px;
  }
  & .panel-body.border-bottom{
    border-color: white!important;
  }
  & .panel-body.border-top{
    border-color: white!important;
  }
  & .panel-body hr{
    border-color: white;
  }
}


 //BS3 specific
// Tables =======================================

$sa-table-head-bg:          $sa-grey-14;
$sa-table-dark-head-bg:     $sa-grey-18;
// Base styles

.panel-body .table, .card-body .table, .form-group .table{
  margin: -$sa-spacer-x;
  min-width: calc(100% + #{$sa-spacer-x-2x});
  font-size: 0.875rem; // 14px
}


// Table Responsive ---------
.table-responsive{
  margin: -8px -10px -10px -10px;
  width: calc(100% + 20px);
  .table-sard{
    margin: 0;
  }
}

@media (max-width: 575.98px) {
  .table-responsive-sm{
    margin: -8px -10px -10px -10px;
    width: calc(100% + 20px);
    .table-sard{
      margin: 0;
    }
  }
}

@media (max-width: 767.98px) {
  .table-responsive-md{
    margin: -8px -10px -10px -10px;
    width: calc(100% + 20px);
    .table-sard{
      margin: 0;
    }
  }
}

@media (max-width: 991.98px) {
  .table-responsive-lg{
    margin: -8px -10px -10px -10px;
    width: calc(100% + 20px);
    .table-sard{
      margin: 0;
    }
  }
}

@media (max-width: 1199.98px) {
  .table-responsive-xl{
    margin: -8px -10px -10px -10px;
    width: calc(100% + 20px);
    .table-sard{
      margin: 0;
    }
  }
}



// ==========================
// Table Sard styles

.table.table-sard > thead > tr > th,
.table.table-sard > tbody > tr > th,
.table.table-sard > tfoot > tr > th,
.table.table-sard > thead > tr > td,
.table.table-sard > tbody > tr > td,
.table.table-sard > tfoot > tr > td {
  padding: $sa-spacer-6 $sa-spacer-10;
}

.table-sard td, .table-sard th{
  border-color: white;
}

.table-sard thead th{
  background-color: $sa-table-head-bg;
  color: white;
  border-bottom: none;
  border-top: none;
}

.table-sard tbody tr:first-child td,
.table-sard tbody tr:first-child th{
  border-top: none;
}

// ==========================
// Inverted(dark) table
.table-sard.table-dark{
  background-color: $sa-heading-bg;
  margin-bottom: 0;
}
.table-sard.table-dark thead th{
  background-color: $sa-table-dark-head-bg;
}

// Hoverable table
.table-sard.table-hover tbody tr:hover{
  background-color: $sa-grey-04;
}

// Striped table
.table-sard.table-striped{
  margin-bottom: 0;
}
.table-sard.table-striped tbody tr:last-child td, .table-sard.table-striped tbody tr:last-child th{
  border-bottom: 1px solid white;
}
.table-sard.table-striped tbody tr:nth-of-type(odd){
  background-color: $sa-grey-03;
}
.table-sard.table-striped.table-hover tbody tr:nth-of-type(odd):hover{
  background-color: $sa-grey-04;
}

// Bordered table
.table-sard.table-bordered{
  border: none;
}
.table-sard.table-bordered td, .table-sard.table-bordered th{
  border-color: white;
}

.table-sard.table-bordered td:first-child, .table-sard.table-bordered th:first-child{
  border-left: none;
}
.table-sard.table-bordered td:last-child, .table-sard.table-bordered th:last-child{
  border-right: none;
}
.table-sard.table-bordered tr:last-child td, .table-sard.table-bordered tr:last-child th{
  border-bottom: none;
}

// Small table 
.table.table-sard.table-sm>tbody>tr>td, 
.table.table-sard.table-sm>tbody>tr>th, 
.table.table-sard.table-sm>tfoot>tr>td, 
.table.table-sard.table-sm>tfoot>tr>th, 
.table.table-sard.table-sm>thead>tr>td, 
.table.table-sard.table-sm>thead>tr>th{
  padding: $sa-spacer-3;
}
.table.table-sard.table-sm>tbody>tr>td:first-child, 
.table.table-sard.table-sm>tbody>tr>th:first-child, 
.table.table-sard.table-sm>tfoot>tr>td:first-child, 
.table.table-sard.table-sm>tfoot>tr>th:first-child, 
.table.table-sard.table-sm>thead>tr>td:first-child, 
.table.table-sard.table-sm>thead>tr>th:first-child{
  padding-left: $sa-spacer-10;
}
.table.table-sard.table-sm>tbody>tr>td:last-child, 
.table.table-sard.table-sm>tbody>tr>th:last-child, 
.table.table-sard.table-sm>tfoot>tr>td:last-child, 
.table.table-sard.table-sm>tfoot>tr>th:last-child, 
.table.table-sard.table-sm>thead>tr>td:last-child, 
.table.table-sard.table-sm>thead>tr>th:last-child{
  padding-right: $sa-spacer-10;
}

// Table head options
.table.table-sard .thead-dark th{
  background-color: $sa-grey-18;
  color: white;
}

.table.table-sard .thead-light th{
  background-color: $sa-grey-12;
  color: white;
}

.table.table-sard .thead-white th{
  background-color: white;
  color: $text;
}
.table.table-sard .thead-white th:first-child{
  border-left: 1px solid $sa-grey-04;
  padding-left: 9px;
}
.table.table-sard .thead-white th:last-child{
  border-right: 1px solid $sa-grey-04;
  padding-right: 9px;
}

.table.table-sard .thead-info th{
  background-color: $sa-info;
  color: white;
}

// ==========================
// Captions
.table-sard caption{
  caption-side: top;
  color: $text;
  padding: $sa-spacer-6 $sa-spacer-10
}
.table-sard caption.caption-bottom{
  caption-side: bottom;
  border-top: 1px solid white;
}
.table-sard.table-dark caption{
  background-color: $sa-heading-bg;
  color: white;
  padding: $sa-spacer-6 $sa-spacer-10
}

// Popovers =====================================


.popover{
  border: 2px solid $user-primary-colour;
  box-shadow: 5px 5px 10px -5px rgba(0,0,0,0.5);
}

.bs-popover-auto[x-placement^=right]>.arrow::before, .bs-popover-right>.arrow::before {
  border-right-color: $user-primary-colour;
}
.bs-popover-auto[x-placement^=right]>.arrow::after, .bs-popover-right>.arrow::after{
  left: 3px;
}

.bs-popover-auto[x-placement^=top]>.arrow::before, .bs-popover-top>.arrow::before {
  border-top-color: $user-primary-colour;
}
.bs-popover-auto[x-placement^=top]>.arrow::after, .bs-popover-top>.arrow::after {
  bottom: 3px;
}

.bs-popover-auto[x-placement^=bottom]>.arrow::before, .bs-popover-bottom>.arrow::before {
  border-bottom-color: $user-primary-colour;
}
.bs-popover-auto[x-placement^=bottom]>.arrow::after, .bs-popover-bottom>.arrow::after{
  top: 3px;
}

.bs-popover-auto[x-placement^=left]>.arrow::before, .bs-popover-left>.arrow::before {
  border-left-color: $user-primary-colour;
}
.bs-popover-auto[x-placement^=left]>.arrow::after, .bs-popover-left>.arrow::after{
  right: 3px;
}


.popover-header{
  background-color: $user-primary-colour;
  margin-top: 0;
  color: white;
  border:none;
  border-top-left-radius: calc(.5rem - 3px);
  border-top-right-radius: calc(.5rem - 3px);
}


// Progress Bars ================================

.progress-bar {
  background-color: $user-primary-colour;
}
// validation ===================================

// Look at: https://mdbootstrap.com/docs/jquery/forms/validation/

// Bootstrap Validation Overrides and addons
.needs-validation > .required label::after,
.needs-validation label.required::after{
    font-family: "Font Awesome 5 Free"; 
    content: "\f069" ;
    padding-left: $link-icon-padding ;
    color:$text;
    font-size: 0.5rem;
    font-weight: 900;
    position: relative;
    top: -5px;
  }




// Global Components
//  These are the SARD global components, used across the various systems.
// Navbar Admin =================================

#navbar-admin{
  background-color:$user-secondary-colour;
  height: 35px;
  display: table;
  width: 100%;
  z-index: 3001;
}

// Navbar Toggler -----------
#navbar-admin.navbar .navbar-toggler{
  background-color: $user-primary-colour;
  border:none;
  padding: 0 $sa-spacer-6;
  margin-top: 5px;
  &:hover{
    background-color: darken($user-primary-colour, 5%);
  }
  &:focus,
  &:active{
    background-color: darken($user-primary-colour, 10%);
  }
}

#navbar-admin.navbar .navbar-toggler .navbar-toggler-icon{
  font-size: 1rem;
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f0c9" ;
    color:white;
    font-weight: 900;
    line-height: 1.5rem;
  }
}

// Nav links ----------------
#navbar-admin.navbar .navbar-nav .nav-link {
  padding: 0.475rem .5rem;
  color: white;
  &:hover{ background-color: darken($user-secondary-colour, 5%);}
  &:focus, &:active{ background-color: darken($user-secondary-colour, 10%);}
}


// Megamenu =====================================

// =================================================================
// Megamenu ============================================
// http://stackoverflow.com/questions/32094344/how-to-make-full-width-mega-menu-in-bootstrap
// http://jsfiddle.net/ztczg6h7/1/


#megamenu{
  display: contents;
  .dropdown {
    position: static !important; // This make the menu full body width
  }

  // Mega Menu Size =================
  .dropdown-menu.show{
    background-color: transparent;
    box-shadow: none;
    display: flex;
    justify-content: center;
    width: 100%;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border: none;
  }
  .megamenu{
    overflow-y: auto;
    border-bottom-left-radius: 6px;
    border-bottom-right-radius: 6px;
    box-shadow: 1px 1px 2px 0 rgba(0,0,0,.2);
    
    @media (min-width: 1589px) { // XXL 
      max-height: 400px;
      width: 1502px ;
    }
    @media (max-width: 1588.98px){ // XL
      width: 1112px ;
    }
    @media (max-width: 1199.98px) { // LG
      max-height: 400px;
      width: 904px ;
    }
    @media (max-width: 991.98px) { // MD
      max-height: 400px;
      width: 670px ;
    }
    @media (max-width: 991.98px) { // SM
      max-height: 400px;
      width: 100% ;
    }
    @media (max-width: 767.98px) { // XS
      max-height: 200px;
      width: 100% ;
    }
    @media (max-width: 575.98px) { // XXS
      max-height: 200px;
      width:100%;
    }
  }

  // Mega Menu ==============
  .megamenu{
    padding: $sa-spacer-8 $sa-spacer-4 $sa-spacer-8 $sa-spacer-8;
    background-color:white;
    @include roboto-regular;
    border:1px solid darken($user-primary-colour, 15%);
    border-top: none;

    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;

    @media (max-width: 767.98px){
      display: block;
    }
  }


  // Mega Menu layout =======

  .mega-column{
    flex-grow: 1;
  }

  .mega-list-title{
    padding: 10px 5px 3px 5px;
    margin: 0;
    @include roboto-bold;
    color: $user-primary-colour;
  }
  .mega-list-title:first-child{
    padding-top: 0;
  }
    
  .mega-item a{
    display: block;
    padding: 3px 5px;
    margin-right: 8px;
    color: $text; 
    &:hover{
      background-color: $sa-grey-02;
    }
    &:focus, &:active{
      background-color: $sa-grey-04;
    }
    &.active{
      background-color: $user-primary-colour;
      color: white; 
      &:hover{
        background-color: darken($user-primary-colour, 5%);
      }
      &:focus, &:active{ background-color: darken($user-primary-colour, 10%); }
    }
  }

  a.mega-sub-item{
    padding-left: 15px;
  }

  hr{
    margin: 5px 8px 5px 5px;
  }

  .mega-item.super-admin a:after{
    font-family: "sard-icons" !important;
    line-height: initial;
    content: "\e00a";
    color:$sa-grey-10;
    margin-left: 5px;
    position: relative;
    top: 2px;
  }

  @media (max-width: 767.98px){
    .mega-column{
      margin-top: 5px;
      padding-top: 5px;
      margin-right: 8px;
      border-top: 1px solid $user-primary-colour;
    }
    .mega-column:first-child{
    margin-top: 0px;
    padding-top: 0px;
    border-top: none;
    }
    .mega-item a{
      margin-right: 0px;
    }
    hr {
      margin: 5px 0px 5px 5px;
    }
  }

} // END #megamenu

// Checkboxes ===================================

$checkbox-background:           white;
$checkbox-background-checked:   $user-primary-colour;
$checkbox-background-border:    $sa-grey-08;
$checkbox-background-disabled:  transparent;

// SARD Checkboxes ===========================
// https://www.templatemonster.com/blog/style-checkboxes-radio-buttons-css/



.sa-checkbox,
.sa-checkbox-after{
  span.checkbox{ // This overrides the default Bootstrap settings
    display: inline-block; // Original: block
    margin-top:5px; // Original: 10px
    margin-bottom:5px; // Original: 10px
  }
}

.sa-checkbox.form-check,
.sa-checkbox-after.form-check{
  padding-left: 0;
}

.sa-checkbox input[type="checkbox"],
.sa-checkbox-after input[type="checkbox"]{
  display: none;
}

.sa-checkbox label {
  position: relative;
  padding-left: 28px;
  padding-right: 30px;
  line-height: 1.2em;
  cursor: pointer;
}

.sa-checkbox span.checkbox{
  padding-left: 0px;
  cursor: pointer;
}

.sa-checkbox span.checkbox::before,
.sa-checkbox span.checkbox::after {
  content: '';
  position: absolute;
  top: 4px;
  bottom: 0;
  margin: auto;
  margin-top:0px;
}

.sa-checkbox span.checkbox::before {
  left: 0px;
  width: 20px;
  height: 20px;
  box-sizing: border-box;
  border-radius: 5px;
  font-family: "Font Awesome 5 Free"; 
  content: "\f00c" ;
  font-weight: 900;
  color: transparent;
  text-align: center;
  font-size: 100%;
  line-height: 1.15em;
  border: 2px solid $checkbox-background-border;
  background-color: $checkbox-background;
}
.sa-checkbox input[type="checkbox"][disabled] + label{
  cursor: not-allowed;
}
.sa-checkbox input[type="checkbox"][disabled] + label span.checkbox::before{
  background-color: $checkbox-background-disabled;
  cursor: not-allowed;
}

.sa-checkbox input[type="checkbox"]:checked + label span.checkbox::before {
  color: $checkbox-background;
  background-color: $checkbox-background-checked;
  border-color: $checkbox-background-checked;
}

.sa-checkbox.right label{
  padding-right: 0px;
  right:-10px;
}

// Checkbox after
.sa-checkbox-after span.checkbox::before{
  display:none;
}
.sa-checkbox-after label {
  position: relative;
  padding-left: 0px;
  padding-right: 28px;
  line-height: 1.2em;
  cursor: pointer;
}

.sa-checkbox-after span.checkbox{
  padding-left: 0px;
  cursor: pointer;
}

.sa-checkbox-after span.checkbox::after {
  content: '';
  position: absolute;
  top: 4px;
  bottom: 0;
  margin: auto;
  margin-top:0px;
}

.sa-checkbox-after span.checkbox::after {
  width: 20px;
  height: 20px;
  box-sizing: border-box;
  border-radius: 5px;
  font-family: "Font Awesome 5 Free"; 
  content: "\f00c" ;
  color: transparent;
  text-align: center;
  font-size: 100%;
  font-weight: 900;
  line-height: 1.15em;
  border: 2px solid $checkbox-background-border;
  background-color: $checkbox-background;
  margin-left: 8px;
}
.sa-checkbox-after span.checkbox.right::after{
  right:0;
}

.sa-checkbox-after input[type="checkbox"][disabled] + label{
  cursor: not-allowed;
}
.sa-checkbox-after input[type="checkbox"][disabled] + label span.checkbox::after{
  background-color: $checkbox-background-disabled;
  cursor: not-allowed;
}

.sa-checkbox-after input[type="checkbox"]:checked + label span.checkbox::after {
  color: $checkbox-background;
  background-color: $checkbox-background-checked;
  border-color: $checkbox-background-checked;
}

// Hover effect
.sa-checkbox:hover span.checkbox::before,
.sa-checkbox-after:hover span.checkbox::after{
  border-color: $checkbox-background-checked;
}

.sa-checkbox:hover input[type="checkbox"][disabled] + label span.checkbox::before,
.sa-checkbox-after:hover input[type="checkbox"][disabled] + label span.checkbox::after{
  border-color: $checkbox-background-border;
}



// Adjustments
.sa-checkbox-after.right { // When in a range right column
  text-align: right;
  .sa-radio-buttons .radio-button{
    padding-right:0;
    margin-left:10px;
  }
}



// SARD Radio Buttons ============================================

// This Works (2018-01-25) =======================================
// http://cssdeck.com/labs/radio-button-styling-in-css

.sa-radio-buttons{
  margin-top: 5px;
  margin-bottom: 5px;
}

.sa-radio-buttons.form-check,
.sa-radio-buttons-after.form-check{
  padding-left: 0;
}
.sa-radio-buttons.form-check-inline{
  margin-right: 0;
}
.sa-radio-buttons label{
  padding-top: 0;
}

.sa-radio-buttons .radio-button{
  display: inline;
  position:relative;
  padding-left:25px;
  padding-right:10px;
  cursor: pointer;
}

.sa-radio-buttons .radio-button:after{
  content:'';
  width:20px;
  height:20px;
  border:2px solid $checkbox-background-border;
  background-color: $checkbox-background;
  position:absolute;
  left:0;
  margin-top:1px;
  border-radius:100%;
  box-sizing:border-box;
}
.sa-radio-buttons input[type="radio"]{
  cursor: pointer;
  position:absolute;
  width:30px;
  height:30px;
  z-index: 1;
  opacity: 0;
  filter: alpha(opacity=0);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"
}


.sa-radio-buttons input[type="radio"]:checked + .radio-button:after {
  background-color: $checkbox-background-checked;
  border-color: $checkbox-background-checked;
}
.sa-radio-buttons input[type="radio"]:checked + .radio-button:before{
  content:'';
  width:10px;
  height:10px;
  position:absolute;
  background:$checkbox-background;
  left:5px;
  top:4px;
  border-radius:100%;
  z-index: 2;
}
.form-check-inline.sa-radio-buttons input[type="radio"]:checked + .radio-button:before{
  margin-top:2px;
}

.sa-radio-buttons input[type="radio"]:disabled{
  cursor: not-allowed;
}
.sa-radio-buttons input[type="radio"]:disabled + .radio-button{
  cursor: not-allowed;
}

.sa-radio-buttons input[type="radio"]:disabled + .radio-button:after{
  background-color: $checkbox-background-disabled;
  cursor: not-allowed;
}
.sa-radio-buttons input[type="radio"]:disabled:checked + .radio-button:after{
  border-color: mix($checkbox-background-disabled, $checkbox-background-checked, 50%);
  background-color: mix($checkbox-background-disabled, $checkbox-background-checked, 50%);
  cursor: not-allowed;
}
.sa-radio-buttons input[type="radio"]:disabled:checked + .radio-button:before{
  background-color: $checkbox-background-disabled;
  cursor: not-allowed;
}


// Radio Buttons After = when button is to the right of the label =============
.sa-radio-buttons-after{
  margin-top: 5px;
  margin-bottom: 5px;
}

.sa-radio-buttons-after .control-label{
  padding-top: 0;
}

.sa-radio-buttons-after .radio-button{
  display: inline;
  position:relative;
  padding-right:25px;
  cursor: pointer;
}

.sa-radio-buttons-after .radio-button:after{
  content:'';
  width:20px;
  height:20px;
  border:2px solid $checkbox-background-border;
  background-color: $checkbox-background;
  position:absolute;
  right:0;
  margin-top:1px;
  border-radius:100%;
  box-sizing:border-box;
}
.sa-radio-buttons-after input[type="radio"]{
  cursor: pointer;
  position:absolute;
  width:30px;
  height:30px;
  z-index: 1;
  opacity: 0;
  filter: alpha(opacity=0);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"
}


.sa-radio-buttons-after input[type="radio"]:checked + .radio-button:after {
  color:#0B8;
  background-color: $checkbox-background-checked;
  border-color: $checkbox-background-checked;
}
.sa-radio-buttons-after input[type="radio"]:checked + .radio-button:before{
  content:'';
  width:10px;
  height:10px;
  position:absolute;
  background:$checkbox-background;
  right:5px;
  top:4px;
  border-radius:100%;
  z-index: 2;
}

.form-check-inline.sa-radio-buttons-after input[type="radio"]:checked + .radio-button:before{
  top:6px;
}

.sa-radio-buttons-after input[type="radio"]:disabled{
  cursor: not-allowed;
}
.sa-radio-buttons-after input[type="radio"]:disabled + .radio-button{
  cursor: not-allowed;
}
.sa-radio-buttons-after input[type="radio"]:disabled + .radio-button:after{
  background-color: $checkbox-background-disabled;
  cursor: not-allowed;
}
.sa-radio-buttons-after input[type="radio"]:disabled:checked + .radio-button:after{
  border-color: mix($checkbox-background-disabled, $checkbox-background-checked, 50%);
  background-color: mix($checkbox-background-disabled, $checkbox-background-checked, 50%);
  cursor: not-allowed;
}
.sa-radio-buttons-after input[type="radio"]:disabled:checked + .radio-button:before{
  background-color: $checkbox-background-disabled;
  cursor: not-allowed;
}

// Hover effect
.sa-radio-buttons:hover .radio-button:after,
.sa-radio-buttons-after:hover .radio-button:after{
  border-color: $checkbox-background-checked;
}

.sa-radio-buttons:hover input[type="radio"]:disabled + .radio-button:after,
.sa-radio-buttons-after:hover input[type="radio"]:disabled + .radio-button:after{
  border-color: $checkbox-background-border;
}


// Adjustments
.sa-radio-buttons-after.right { // When in a range right column
  text-align: right;
  .sa-radio-buttons .radio-button{
    padding-right:0;
    margin-left:10px;
  }
}
.form-check-inline.sa-radio-buttons-after:last-of-type{
  margin-right: 0;
}

.sa-radio-buttons .position-static,
sa-radio-buttons-after .position-static{
  position: absolute!important;
}

.form-group-row .sa-radio-buttons{
  margin-top: 7px;
  margin-bottom: 7px;
}

// ERRORS =================

.sa-radio-buttons.error + .radio-button:after {
  color:#0B8;
}

.sa-radio-buttons{
  .radio-button.radio-inline{display: table-cell;}
  .radio-button.radio-inline + span{
    display: table-cell;
    padding-top: 2px;
  }
}




// SARD Toggle Switch ==================================
// https://codepen.io/morganfeeney/pen/KiBty
// http://codersblock.com/blog/checkbox-trickery-with-css/
// https://www.w3schools.com/howto/howto_css_switch.asp
.sa-toggle-switch-right input[type="checkbox"],
.sa-toggle-switch input[type="checkbox"]{
  display: none;
  cursor: pointer;
  opacity: 0;
  filter: alpha(opacity=0);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"
}

.sa-toggle-switch label {
  position: relative;
  padding-left: 50px;
  margin-bottom: 8px;
}

.sa-toggle-switch span::before,
.sa-toggle-switch span::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}
.sa-toggle-switch span.slider{
  padding-top: 4px;
}
.sa-toggle-switch span.slider:hover {
  cursor: pointer;
}
.sa-toggle-switch span.slider::before {
  left: 0px;
  width: 45px;
  height: 25px;
  background-color: $checkbox-background;
  border-radius: 50px;
  border: 2px solid $checkbox-background-border;
}
.sa-toggle-switch:hover span.slider::before{
  border-color: $checkbox-background-checked;
}
.sa-toggle-switch input[type="checkbox"]:checked + label span.slider::before{
  border-color: $checkbox-background-checked;
}

.sa-toggle-switch span.slider::after {
  left: 4px;
  // top:1px;
  width: 17px;
  height: 17px;
  border-radius: 10px;
  background-color: $checkbox-background-border;
  transition: .25s, background-color .25s;
}
.sa-toggle-switch input[type="checkbox"]:checked + label{
  @include roboto-bold;
}
.sa-toggle-switch input[type="checkbox"]:checked + label span.slider::after {
  left: 24px;
  background-color: $checkbox-background-checked;
}

// right variation
.sa-toggle-switch-right{
  text-align: right;
}
.sa-toggle-switch-right label {
  position: relative;
  padding-right: 50px;
  margin-bottom: 8px;
}
.sa-toggle-switch-right span::before,
.sa-toggle-switch-right span::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}
.sa-toggle-switch-right span.slider{
  padding-top: 4px;
}
.sa-toggle-switch-right span.slider:hover {
  cursor: pointer;
}

.sa-toggle-switch-right span.slider::before {
  right: 0px;
  width: 45px;
  height: 25px;
  background-color: $checkbox-background;
  border-radius: 50px;
  border: 2px solid $checkbox-background-border;
}
.sa-toggle-switch-right:hover span.slider::before{
  border-color: $checkbox-background-checked;
}
.sa-toggle-switch-right input[type="checkbox"]:checked + label span.slider::before{
  border-color: $checkbox-background-checked;
}

.sa-toggle-switch-right span.slider::after {
  right: 24px;
  // top:1px;
  width: 17px;
  height: 17px;
  border-radius: 10px;
  background-color: $checkbox-background-border;
  transition: .25s, background-color .25s;
}
.sa-toggle-switch-right input[type="checkbox"]:checked + label{
  @include roboto-bold;
}
.sa-toggle-switch-right input[type="checkbox"]:checked + label span.slider::after {
  right: 4px;
  background-color: $checkbox-background-checked;
}



// SARD Radio Toggles =========================
// https://www.templatemonster.com/blog/style-checkboxes-radio-buttons-css/

.sa-radio-toggle input[type="radio"]{
  display: none;
  cursor: pointer;
  opacity: 0;
  filter: alpha(opacity=0);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"
}

.sa-radio-toggle label {
  position: relative;
  padding-left: 50px;
  margin-bottom: 8px;
}

.sa-radio-toggle span::before,
.sa-radio-toggle span::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}
.sa-radio-toggle span.radio{
  padding-top: 4px;
}
.sa-radio-toggle span.radio:hover {
  cursor: pointer;
}
.sa-radio-toggle span.radio::before {
  left: 0px;
  width: 45px;
  height: 25px;
  background-color: $checkbox-background;
  border-radius: 50px;
  border: 2px solid $checkbox-background-border;
}
.sa-radio-toggle:hover span.radio::before{
  border-color: $checkbox-background-checked;
}
.sa-radio-toggle input[type="radio"]:checked + label span.radio::before{
  border-color: $checkbox-background-checked;
}

.sa-radio-toggle span.radio::after {
  left: 4px;
  // top:1px;
  width: 17px;
  height: 17px;
  border-radius: 10px;
  background-color: $checkbox-background-border;
  transition: .25s, background-color .25s;
}
.sa-radio-toggle input[type="radio"]:checked + label{
  @include roboto-bold;
}
.sa-radio-toggle input[type="radio"]:checked + label span.radio::after {
  left: 24px;
  background-color: $checkbox-background-checked;
}

// sa-radio-toggle Right ==============

.sa-radio-toggle-right input[type="radio"]{
  display: none;
  cursor: pointer;
  opacity: 0;
  filter: alpha(opacity=0);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"
}


.sa-radio-toggle-right{
  text-align: right;
}
.sa-radio-toggle-right label {
  position: relative;
  padding-right: 50px;
  margin-bottom: 8px;
}

.sa-radio-toggle-right span::before,
.sa-radio-toggle-right span::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}
.sa-radio-toggle-right span.radio{
  padding-top: 4px;
}
.sa-radio-toggle-right span.radio:hover {
  cursor: pointer;
}
.sa-radio-toggle-right span.radio::before {
  right: 0px;
  width: 45px;
  height: 25px;
  background-color: $checkbox-background;
  border-radius: 50px;
  border: 2px solid $checkbox-background-border;
}
.sa-radio-toggle-right:hover span.radio::before{
  border-color: $checkbox-background-checked;
}
.sa-radio-toggle-right input[type="radio"]:checked + label span.radio::before{
  border-color: $checkbox-background-checked;
}
.sa-radio-toggle-right span.radio::after {
  right: 24px;
  // top:1px;
  width: 17px;
  height: 17px;
  border-radius: 10px;
  background-color: $checkbox-background-border;
  transition: .25s, background-color .25s;
}
.sa-radio-toggle-right input[type="radio"]:checked + label{
  @include roboto-bold;
}
.sa-radio-toggle-right input[type="radio"]:checked + label span.radio::after {
  right: 4px;
  background-color: $checkbox-background-checked;
}

// SARD Toggle Check ===============================================================
// This is the Yes/No Switch used in Appraisals
// https://codepen.io/anon/pen/GgpdwY

.sa-toggle-check,
.sa-toggle-check-right{
  input[type="checkbox"]{
    display: none;
  }
}

.sa-toggle-check{

  .toggle-check-input {
    width: 1px;
    height: 1px;
    position: absolute;
  }

  .toggle-check-text {
    display: inline-block;
    position: relative;
    text-transform: uppercase;
    background: $checkbox-background;
    padding: 0em 0.5em 0em 2em;
    border-radius: 1em;
    min-width: 4.2em;
    width: 4.2em;
    cursor: pointer;
    transition: background-color 0.15s;
    border: 2px solid $checkbox-background-border;
  }
  .toggle-check-text:hover{
    border-color: $checkbox-background-checked;
  }

  .toggle-check-text:after {
    content: ' ';
    display: block;
    background: $checkbox-background-border;
    width: 1.1em;
    height: 1.1em;
    border-radius: 50%;
    position: absolute;
    left: 0.2em;
    top: 0.2em;
    transition: 0.15s, margin-left 0.15s;
  }

  .toggle-check-text:before {
    content: 'No';
    color: $checkbox-background-border;
  }

  .toggle-check-input:checked ~ .toggle-check-text {
    background: $checkbox-background-checked;
    border-color: $checkbox-background-checked;
    padding-left: 0.5em;
  }

  .toggle-check-input:checked ~ .toggle-check-text:before {
    content: 'Yes';
    color: $checkbox-background;
    @include roboto-bold;
  }

  .toggle-check-input:checked ~ .toggle-check-text:after {
    left: 100%;
    margin-left: -1.3em;
    background: $checkbox-background;
  }
}

// Right Version
.sa-toggle-check-right{
  text-align: right;

  .toggle-check-input {
    width: 1px;
    height: 1px;
    position: absolute;
  }

  .toggle-check-text {
    display: inline-block;
    position: relative;
    text-transform: uppercase;
    background: $checkbox-background;
    padding: 0em 0.5em 0em 2em;
    border-radius: 1em;
    min-width: 4.2em;
    width: 4.2em;
    cursor: pointer;
    transition: background-color 0.15s;
    border: 2px solid $checkbox-background-border;
    text-align: left;
  }
  .toggle-check-text:hover{
    border-color: $checkbox-background-checked;
  }

  .toggle-check-text:after {
    content: ' ';
    display: block;
    background: $checkbox-background-border;
    width: 1.1em;
    height: 1.1em;
    border-radius: 50%;
    position: absolute;
    left: 0.2em;
    top: 0.2em;
    transition: left 0.15s, margin-left 0.15s;
  }

  .toggle-check-text:before {
    content: 'No';
    color: $checkbox-background-border;
  }

  .toggle-check-input:checked ~ .toggle-check-text {
    background: $checkbox-background-checked;
    border-color: $checkbox-background-checked;
    padding-left: 0.5em;
  }

  .toggle-check-input:checked ~ .toggle-check-text:before {
    content: 'Yes';
    color: $checkbox-background;
    @include roboto-bold;
  }

  .toggle-check-input:checked ~ .toggle-check-text:after {
    left: 100%;
    margin-left: -1.3em;
    background: $checkbox-background;
  }
}


// ==================================================================

// Inferred Checkbox ============
// Used in Admin / Directorates / Edit Form

.sa-inferred-checkbox{
  padding-top: 4px;
  padding-bottom: 3px;
  float:left;
  margin-right: 10px;
  border-right: 1px solid $checkbox-background;
}

.sa-inferred-checkbox input[type="checkbox"],
.sa-inferred-checkbox-after input[type="checkbox"]{
  display: none;
}

.sa-inferred-checkbox label {
  position: relative;
  padding-right: 30px;
  @include roboto-bold;
  line-height: 1.2em;
}

.sa-inferred-checkbox span.checkbox{
  padding-left: 0px;
}

.sa-inferred-checkbox span.checkbox::before,
.sa-inferred-checkbox span.checkbox::after {
  content: '';
  position: absolute;
  top: 4px;
  bottom: 0;
  margin: auto;
  margin-top:0px;
}

.sa-inferred-checkbox span.checkbox::before {
  left: 0px;
  width: 20px;
  height: 20px;
  box-sizing: border-box;
  border-radius: 50%;
  font-family: "Font Awesome 5 Free"; 
  content: "\f00c" ;
  font-weight: 900;
  color: transparent;
  text-align: center;
  font-size: 100%;
  line-height: 1.15em;
  border: 2px solid $checkbox-background-border;
  background-color: $checkbox-background;
}

.sa-inferred-checkbox input[type="checkbox"]:checked + label span.checkbox::before {
  color: $admin-secondary-colour;
}

.sa-inferred-checkbox input[type="checkbox"][disabled] + label span.checkbox::before{
  background-color: $checkbox-background-disabled;
  cursor: not-allowed;
}

.sa-inferred-checkbox input[type="checkbox"][disabled]:checked + label span.checkbox::before{
  color: $sa-grey-10;
}

// SARD Rag Status ==============================

$rag-red:          $sa-red;
$rag-amber:        $sa-yellow;
$rag-green:        $sa-green;
$rag-na:           $sa-grey-12;
$rag-white:        $white;

// Colouring
.rag-red{ background-color:$rag-red; }

.rag-amber{ background-color:$rag-amber; }

.rag-green{ background-color:$rag-green; }

.rag-na{ background-color:$rag-na; }

.rag-white{ background-color:$rag-white; }

.rag-default{ background-color:$sa-grey-16; }
// Off Canvas Options ===========================
// http://blog.themearmada.com/off-canvas-slide-menu-for-bootstrap/

//#160757827 scroll bar covers options menu on IE
body { -ms-overflow-style: scrollbar; }


@mixin off-canvas-transmission {
  transition: all 320ms ease!important;
}
// navigation button ----------------------------

a.options-nav-expander {
  background: $sa-grey-18;
  color: #FFFFFF;
  display: block;

  margin-right: 0;
  position: absolute;
  top: 130px;
  right: 0px;
  text-decoration: none;

  width: 30px;
  height: 110px;
  z-index: 12;

  border-radius: 6px 0px 0px 6px;
  border: 2px solid white;
  border-right: none;

  @include off-canvas-transmission;
}

a.options-nav-expander .title{
  position: absolute;
  bottom: 25px;
  right: -18px;
  color:white;
  @include roboto-light;
  font-size: 1.2em;
  transform: rotate(-90deg);
}

a.options-nav-expander:after{
  content: "\71";
  font-family: "sard-icons";
  color:white;
  font-size: 1.25em;
  position: absolute;
  top: 3px;
  right: 5px;

  @include off-canvas-transmission;
}
.options-nav-expanded a.options-nav-expander:after{
  transform: rotate(180deg);
}

a.options-nav-expander:hover {
  cursor: pointer;
  color: white!important;
}


a.options-nav-expander.fixed {
  position: fixed;
}

.options-nav-expanded a.options-nav-expander.fixed {
  right: 300px;
}

@include respond-to(md-break-down) { // Small Screens
    a.options-nav-expander{
      width: 30px;
      height: 35px;
    }

    a.options-nav-expander .title{
      display: none;
    }

    a.options-nav-expander:after{
      top: 1px;
    }
}

// canvas menu & menu container -----------------

nav.options-menu {
  background: $sa-grey-16;
  display: block;
  height: 100%;
  overflow: auto;
  position: fixed;
  right: -300px;
  top: 0;
  width: 300px;
  z-index: 6000;
  border-left: 4px solid ;

  @include off-canvas-transmission;
}

.options-nav-expanded nav.options-menu {
  right: 0;
}

body.options-nav-expanded {
  margin-left: 0em;
  @include off-canvas-transmission;
}

#options-nav-close {
  height:133px;
}
#options-nav-close:hover{
  background-color: darken($sa-grey-16, 3%);
  cursor: pointer;
}
#options-nav-close:hover:before{
  content: 'Close';
  color: white;
  position: relative;
  top: 40%;
  left: 45%;
}

#options-nav-close:after {
  content: "\6d";
  font-family: "sard-icons";
  color:white;
  font-size: 1.5em;
  position: absolute;
  top: 10px;
  right: 10px;
}

//  menu and animations -------------------------

.options-menu .main-menu li {
  padding: 0px;
}

.options-menu .main-menu li a {
  position: relative;
  color: white;
  text-decoration: none;
  display: block;
  width: 100%;
  margin: 0px;
  padding: 7px 10px;
  padding-right: 30px;
  font-size: 16px;
  @include roboto-light;
}

.options-menu .main-menu li a:visited{
  color: white;
}

.options-menu .main-menu li a:active,
.options-menu .main-menu li a:focus,
.options-menu .main-menu li a:hover {
  background: $sa-grey-18;
}

.options-menu .main-menu hr{
  margin-top: 5px;
  margin-bottom: 5px;
}
.options-menu .main-menu li.sub-title{
  padding: 7px 10px;
  text-indent: 0;
  color: white;
  font-size: 16px;
  @include roboto-regular;
}

// Animated Icon --------------------------------

.options-menu .main-menu li a:after {
  font-family: "Font Awesome 5 Free";
  font-style: normal;
  font-variant: normal;
  font-weight: 900;
  font-size: 1.2em;
  line-height: 1;
  text-transform: none;
  content: '\f054';
  position: absolute;
  top: 7px;
  right: 0px;
  color: white;
}

.options-menu .main-menu li a:after {
  float: right;
  margin: 0.1rem 1.7rem -0.1rem 0;
  opacity: 0;
  @include off-canvas-transmission;
}

.options-menu .main-menu li a:hover:after {
  float: right;
  margin: 0.1rem -0.3rem -0.1rem 0;
  opacity: 1;
}

// Icons ----------------------------------------

.options-menu .main-menu li:before{ // Removes Bullets
  content: none;
  display:none;
}

.options-menu .main-menu li.icon a{
  text-indent: -1.8em;
  padding-left: 2.5em;
}

.options-menu .main-menu li.icon a:before{
  font-family: "Font Awesome 5 Free";
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  font-size: 1em;
  line-height: 1;
  text-transform: none;
  padding-right: 10px;
}

.options-menu .main-menu li.new a:before,
.options-menu .main-menu li.add a:before{
  content: '\f067';
  font-weight: 900;
  padding-right: 12px;
}

.options-menu .main-menu li.new-set a:before{
  content: '\f0c5';
  font-size: 1.1rem;
  padding-right: 12px;
}

.options-menu .main-menu li.edit a:before{
  content: '\f303';
  font-weight: 900;
  padding-right: 12px;
}

.options-menu .main-menu li.export a:before{
  content: '\f56e';
  font-weight: 900;
}

.options-menu .main-menu li.download a:before,
.options-menu .main-menu li.import a:before{
  content: '\f381';
  font-weight: 900;
  padding-right: 8px;
}

.options-menu .main-menu li.action-needed a:before,
.options-menu .main-menu li.warning a:before{
  content: '\f071';
  font-weight: 900;
}

.options-menu .main-menu li.view a:before{
  content: '\f06e';
  font-size: 1.1rem;
  padding-right: 8px;
}

.options-menu .main-menu li.back a:before{
  content: '\f0a8';
  font-weight: 900;
  font-size: 1.1rem;
  padding-right: 10px;
}

.options-menu .main-menu li.questionnaire a:before{
  content: '\f46c';
  font-weight: 900;
  font-size: 1.1rem;
  padding-right: 15px;
}

.options-menu .main-menu li.pdf a:before{
  content: '\f1c1';
  font-size: 1.1rem;
  padding-right: 16px;
}

.options-menu .main-menu li.zip a:before{
  content: '\f1c6';
  font-size: 1.1rem;
  padding-right: 16px;
}

.options-menu .main-menu li.email a:before{
  content: '\f0e0';
  padding-right: 14px;
}

.options-menu .main-menu li.cancel a:before{
  content: '\f05e';
  font-weight: 900;
  font-size: 1.1rem;
  padding-right: 12px;
}

.options-menu .main-menu li.info a:before{
  content: '\f05a';
  font-weight: 900;
  font-size: 1.1rem;
  padding-right: 12px;
}

.options-menu .main-menu li.video a:before{
  content: '\f03d';
  font-weight: 900;
  padding-right: 12px;
}

.options-menu .main-menu li.apply a:before{
  content: '\f058';
  padding-right: 12px;
  font-size: 1.1rem;
}

.options-menu .main-menu li.refresh a:before{
  content: '\f2f1';
  font-weight: 900;
  padding-right: 14px;
}

.options-menu .main-menu li.user a:before{
  content: '\f007';
  font-weight: 900;
  font-size: 1.1rem;
  padding-right: 13px;
}

.options-menu .main-menu li.user-md a:before{
  content: '\f0f0';
  font-weight: 900;
  font-size: 1.1rem;
  padding-right: 13px;
}

.options-menu .main-menu li.all-users a:before{
  content: '\f0c0';
  font-weight: 900;
}

.options-menu .main-menu li.new-user a:before{
  content: '\f234';
  font-weight: 900;
}

.options-menu .main-menu li.destroy a:before,
.options-menu .main-menu li.delete a:before{
  content: '\f2ed';
  font-size: 1.1rem;
  padding-right: 14px;
}


// Add Super Admin Icon to sidebar
  .options-menu .main-menu li.super-admin a:after{
    font-family: "sard-icons";
    content: "\e00a";
    color:$sa-grey-10;
    margin:  0;
    position: relative;
    top: 2px;
    right: -30px;
    opacity: 1;
    padding-right: 0px;
  }




// Only needed if we use dropdowns within the menu
// DROPDOWN ------------------------------
// .main-menu a .caret {
//   width: 0;
//   height: 0;
//   display: inline-block;
//   vertical-align: top;
//   border-top: 4px solid #4f5963;
//   border-right: 4px solid transparent;
//   border-left: 4px solid transparent;
//   content: "";
//     margin-top: 8px;
// }

// .main-menu a:hover .caret {
//   border-top-color: #4f5963;
// }

// .main-menu li.open > a > .caret {
//   border-top: none;
//   border-bottom: 4px solid #4f5963;
//   border-right: 4px solid transparent;
//   border-left: 4px solid transparent;
// }

// .main-menu li.open > a:hover > .caret {
//   border-bottom-color: #4f5963;
// }

// .main-menu li .sub-nav {
//   border-bottom: 0px;
//   padding: 4px;
// }


// Off Canvas Rag Key ===========================
// http://blog.themearmada.com/off-canvas-slide-menu-for-bootstrap/

//#160757827 scroll bar covers options menu on IE

$rag-tab:             $sa-grey-04;
$rag-tab-open:        $sa-grey-16;
// $user-primary-colour:        $client;
// $user-primary-colour-admin:  $admin;

body { -ms-overflow-style: scrollbar; }


@mixin off-canvas-rag-transmission {
  transition: all 320ms ease!important;
}

// navigation button ----------------------------

a.rag-key-expander {
  background-color: $rag-tab;
  color: $text;
  display: block;

  margin-right: 0;
  position: absolute;
  bottom: 80px;
  right: 0px;
  text-decoration: none;

  width: 30px;
  height: 110px;
  z-index: 12;

  border-radius: 6px 0px 0px 6px;
  border: 2px solid white;
  border-right: none;

  @include off-canvas-rag-transmission;
}

a.rag-key-expander .title{
  position: absolute;
  bottom: 5px;
  left: 5px;
  @include roboto-regular;
}
a.rag-key-expander .title img{
  width: 20px;
  padding-top: 3px;
}

a.rag-key-expander:after{
  content: "\71";
  font-family: "sard-icons";
  color:$text;
  font-size: 1.25em;
  position: absolute;
  top: 3px;
  right: 3px;

  @include off-canvas-rag-transmission;
}


a.rag-key-expander.fixed {
  position: fixed;
}

.rag-key-expanded a.rag-key-expander.fixed {
    right: 300px;
    background-color: $rag-tab-open;
}

.rag-key-expanded a.rag-key-expander:after{
  transform: rotate(180deg);
  color: white;
}

a.rag-key-expander:hover {
  cursor: pointer;
  background-color: $rag-tab-open;
}
a.rag-key-expander:hover:after{
  color: white;
}

@media (max-width: 767px) { // Small Screens
    a.rag-key-expander{
      width: 30px;
      height: 35px;
    }

    a.rag-key-expander .title{
      display: none;
    }

    a.rag-key-expander:after{
      top: 1px;
    }
}

// canvas menu & menu container -----------------

nav.rag-key-menu {
  background: $sa-grey-02;
  display: block;
  height: 100%;
  overflow: auto;
  position: fixed;
  right: -300px;
  top: 0;
  width: 300px;
  z-index: 6000;
  border-left: 4px solid $rag-tab-open;

  @include off-canvas-rag-transmission;
}

nav.rag-key-menu hr{
    border-top: 1px solid white;
    margin-top: 15px;
    margin-bottom: 15px;
    margin-left: 10px;
    margin-right: 10px;
}

.rag-key-expanded nav.rag-key-menu {
  right: 0;
}

body.rag-key-expanded {
  margin-left: 0em;
  @include off-canvas-rag-transmission;
}

#rag-key-close {
  min-height:70px;
  height:70px;
}
#rag-key-close:hover{
  background-color: darken($sa-grey-02, 3%);
  cursor: pointer;
}
#rag-key-close:hover:before{
  content: 'Close';
  color:$text;
  position: relative;
  top: 35%;
  left: 45%;
}

#rag-key-close:after {
  content: "\6d";
  font-family: "sard-icons";
  color:$text;
  font-size: 1.5em;
  position: absolute;
  top: 10px;
  right: 10px;
}

//  menu and icons ------------------------------

.rag-key-menu h3{
  font-size: 20px;
  padding-left: 10px;
  padding-bottom: 10px;
}
.rag-key{
  min-height: 30px;
  background-repeat: no-repeat;
  background-size: 30px 30px;
  overflow: visible;
  margin-left: 5px;
  padding-left: 35px;
  background-color: transparent;
}
.rag-key.icon-danger{
  background-image: url("../rag-icons/rag-icon-danger-sm@2x.png");
}
.rag-key.icon-warning{
  background-image: url("../rag-icons/rag-icon-warning-sm@2x.png");
}
.rag-key.icon-danger-plus{
  background-image: url("../rag-icons/rag-icon-danger-plus-sm@2x.png");
}
.rag-key.icon-warning-plus{
  background-image: url("../rag-icons/rag-icon-warning-plus-sm@2x.png");
}
.rag-key.icon-approved{
  background-image: url("../rag-icons/rag-icon-approved-sm@2x.png");
}
.rag-key.icon-unavailable{
  background-image: url("../rag-icons/rag-icon-unavailable-sm@2x.png");
}
.rag-key.icon-success{
  background-image: url("../rag-icons/rag-icon-success-sm@2x.png");
}
.rag-key.icon-draft{
  background-image: url("../rag-icons/rag-icon-draft-sm@2x.png");
}
.rag-key.icon-submitted{
  background-image: url("../rag-icons/rag-icon-submitted-sm@2x.png");
}
.rag-key.icon-recommended{
  background-image: url("../rag-icons/rag-icon-recommended-sm@2x.png");
}
.rag-key.icon-abandoned{
  background-image: url("../rag-icons/rag-icon-abandoned-sm@2x.png");
}
.rag-key.icon-due{
  background-image: url("../rag-icons/rag-icon-due-sm@2x.png");
}
.rag-key p{
  padding-top: 6px;
}


// Off Canvas sa-sidemenu ===========================
// http://blog.themearmada.com/off-canvas-slide-menu-for-bootstrap/

//#160757827 scroll bar covers sa-sidemenu menu on IE
body { -ms-overflow-style: scrollbar; }


@mixin off-canvas-transmission {
  transition: all 320ms ease!important;
}

// Posistioning -------------

// Closed state
.sa-sidemenu{
  position: fixed;
  display: block;
  height: 100%;
  top: 0;
  width: 30px;
  z-index: 6000;
  overflow: hidden;
  @include off-canvas-transmission;
}

.sa-sidemenu{ 
  .menu-top{
    position: relative;
    top: 0px;
    left: 0px;
    height:50px;
  }

  .brand-area{
    display: none;
  }

  .open-icon{
    display: inline-block;
    position: absolute;
    top: 0px;
    right: 0px;
    width: 30px;
    max-width: 30px;
    height:50px;
    z-index: 6001;
  }
  .menu-list{
    display: none;
  }
}

// Open state
.sa-sidemenu.open{
  @include off-canvas-transmission;
  width: 250px;
}

.sa-sidemenu.open{
  .menu-top{
    width: 250px;
    max-width: 250px;
  }
  .brand-area{
    display: inline-block;
    max-width: 220px;
    height: 50px;
  }
  .menu-list{
    position: relative;
    left: 0;
    display: block;
    width: 100%;
    padding: 0 ;
    padding-top: 20px;
    overflow-y: auto;
    height:100%;
  }
}

// Styling ------------------

.sa-sidemenu{
  background: $sa-grey-16;
  color: white;
  cursor: pointer;
}

.sa-sidemenu .menu-top{
  background: $sa-grey-18;
}

.sa-sidemenu .open-icon::before{
  color:white;
  font-family: "Font Awesome 5 Free"; 
  content: "\f038";
  font-weight: 700; 
  font-size: 1.25em;
  position: absolute;
  top: 10px;
  right: 5px;
}
.sa-sidemenu.open .open-icon::before{
  content: "\f036";
}

.sa-sidemenu .menu-list a{
  display: flex;
  margin: 0px;
  padding: 5px 10px;
  @include roboto-light;
  font-size: 16px;
  color: white;
  text-decoration: none;
}

.sa-sidemenu .menu-list a:visited{
  color: white;
}

.sa-sidemenu .menu-list a:active,
.sa-sidemenu .menu-list a:focus,
.sa-sidemenu .menu-list a:hover {
  background: $sa-grey-18;
}

.sa-sidemenu .menu-list hr{
  margin-top: 5px;
  margin-bottom: 5px;
}
.sa-sidemenu .menu-list .sub-title{
  padding: 5px 10px 0px 10px;
  text-indent: 0;
  @include roboto-bold;
  font-size: 16px;
  color: white;
}

.sa-sidemenu .menu-list a{
  i {
    padding-right: 0.5rem ; // 8px
  }
}

// Screen variations --------

@include respond-to(lg-break-down){
  .sa-sidemenu .menu-top{
    height:35px;
  }
  .sa-sidemenu .brand-area{
    height:35px;
  }
  .sa-sidemenu .open-icon{
  height:35px;
  }
  .sa-sidemenu .open-icon::before{
    top: 5px;
  }
}

@include respond-to(xs-screens){
  .sa-sidemenu{
    width: 20px;
  }

  .sa-sidemenu .open-icon{
    width: 20px;
  }

  .sa-sidemenu .open-icon::before{
    font-size: 1em;
    top: 6px;
  }
}

// Dropdowns
.sa-sidemenu .menu-list li:before{ // Removes Bullets
  content: none;
  display:none;
}
.sa-sidemenu .menu-list ul li{
  padding: 5px 0px;
}
.sa-sidemenu .menu-list ul li a{
  padding: 5px 20px;
}
.sa-sidemenu .menu-list ul li a::after{
  margin-left: 0.5em;
  position: relative;
  top: 7px;
}

.sa-sidemenu .dropdown-menu.show{
  background: $sa-grey-14;
  border-color: $sa-grey-18;
  border-top: none;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  margin-left: 5px;
  width: calc(100% - 20px);
}

.sa-sidemenu .dropdown-item:first-of-type {
  border-top-left-radius: 0px;
  border-top-right-radius: 0px;
}
.sa-sidemenu .dropdown-item:last-of-type {
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
}
// sard-nav-tabs ================================

// Elements specific to a page can be found in their relative page css

$tab-colour:              $sa-grey-03;
$tab-colour-hover:        $sa-grey-05;
$tab-shadow:              $sa-grey-07;
$tab-colour-active:       $sa-grey-14;
$tab-number-bg:           $sa-grey-12;


// Structure ------------------------------------
.sard-nav-tabs{
  @include respond-to(md-break-down){
    display: block;
    @include breakout;
  }
  @include respond-to(md-break-up) {
    display: table;
    width:100%;
    vertical-align: top;
  }
}

.sard-nav-tabs{
  .snt-main-nav{
    @include respond-to(md-break-down){
      display: block;
    }
    @include respond-to(md-screens){
      display: table-cell;
      vertical-align: top;
      width: 25%;
    }
    @include respond-to(lg-screens){
      display: table-cell;
      vertical-align: top;
      width: 25%;
    }

    @include respond-to(xl-break-up) {
      display: table-cell;
      vertical-align: top;
      width: 25%;
    }
  }

  .nav-info{
    display: table;
    vertical-align: top;
    min-width: 100%;
  }
  .nav-col{
    display: block;
  }

  .nav-row {
    display: table;
    width: 100%;
    @include respond-to(md-break-up){
      margin-bottom: 5px;
    }
}

  .snt-main-section{
    @include respond-to(md-break-down){
      display: block;
    }
    @include respond-to(md-break-up){
      display: table-cell;
      vertical-align: top;
    }
  }
} // End .sard-nav-tabs

.section-view{
  display: block;
}

// Styling --------------------------------------

// snt-main-nav -------------
.sard-nav-tabs{
  #left-activity-summary{
    position: relative; 
    zoom: 1;
  }

  #left-activity-summary-toggles{
    border: 1px solid $tab-colour-active;
    border-top: none;
    padding-top: 7px;
    padding-left: 10px;
    margin-top: -20px;
    @include respond-to(md-break-up){
      border-right: none;
    }
    .sa-checkbox label {
      padding-right: 10px;
    }
  }

  #on-call{
    padding: 10px;
    margin-bottom: 10px;
    border-bottom: 1px solid $tab-colour-active;
  }

  .nav-info-buttons p{
    margin-bottom: 10px;
  }

  .submit-button {
    margin-top: 10px;
    @include respond-to(md-break-up){
      margin-right: 10px;
    }
  }
} // End .sard-nav-tabs

// Tabs ---------------------
.sard-nav-tabs{
  .nav-row a {
    display: table-cell;
    background-color: $tab-colour;
    color: $text;
    &:hover{
      background-color: $tab-colour-hover;
    }
    @include respond-to(md-break-down){
      border-top: 1px solid white;
    }
    @include respond-to(md-break-up){
      box-shadow: inset -5px 0px 0px 0px $tab-shadow;
    }
  }

  .nav-row.active a,{
    background-color: $tab-colour-active;
    color: white;
    @include respond-to(md-break-up){
      box-shadow: none;
    }
  }
 
} // End .sard-nav-tabs 

// Tab Numbers --------------
.sard-nav-tabs .nav-row .number{
  color: white;
  display: table-cell;
  text-align: center;
  letter-spacing: $tight;
  @include respond-to(md-break-down){ 
    vertical-align: top;
    min-width: 25px;
    width: 25px;
    min-height: 25px;
    height: 25px;

    @include roboto-regular;
    font-size: 14px;
  }

  @include respond-to(md-break-up){ 
    vertical-align: top;    
    min-width: 40px;
    width: 40px;
    min-height: 40px;
    height: 40px;

    @include roboto-light;
    font-size: 24px;
    line-height: 1em;
    padding-top: 8px;
  }
} 

// Tab Titles ---------------
.sard-nav-tabs .nav-row .title{
  display: table-cell;
  padding: 5px 8px;
  @include roboto-regular;
  font-size: 14px;
  line-height: 1.2em;
  
  @include respond-to(md-break-up){ 
    vertical-align: top;
    padding: 7px 8px 8px 8px;
    padding-right: 10px;
  }
}


// Main Section -------------
.sard-nav-tabs{
  .snt-main-section{
    border: 1px solid $tab-colour-active;
    padding-left: 20px;
    padding-right: 20px;

    @include respond-to(md-break-down){
      border-top-width: 10px;
      border-left-width: 1px;
    }
    @include respond-to(md-break-up){
      border-top-width: 1px;
      border-left-width: 10px;
    }
  }
} // End .sard-nav-tabs


// Searchbars ===================================

// Look at: https://mdbootstrap.com/docs/jquery/forms/search/?

// Base styles
.searchbar-sard{
  border-radius:8px;
  margin: 0 -2px; // Visual overhang
}

.searchbar-sard .form-control{

  width: 100%;
  box-shadow: none;
}
.searchbar-sard input{
    padding: 10px;
    padding-right: 38px;
    margin-right: -38px;
    border-radius: 4px;
    background-color: white;
    border: 0;
    box-shadow: none;
    border-radius: 20px;
    height:36px;
    border:2px solid $sa-grey-06;
    &:hover{
      border-color: $sa-grey-10;
    }
    &:focus{
      border-color: $sa-grey-14;
    }
}


.searchbar-sard .btn-search{
  float:right;
  width:36px;
  height:36px;
  border-radius: 0 20px 20px 0;
  border:none;
  border-left: none;
  box-shadow: none;
  &::before{
    font-family: "Font Awesome 5 Free"; 
    content: "\f002" ;
    padding-right: $link-icon-padding ;
    color:$sa-grey-14;
    font-weight: 900;
    font-size: 1.2rem;
    position: relative;
    top: -2px;
    right: 4px;
  }
}

.searchbar-sard .btn-search:hover{
  &::before{
    color: $sa-grey-16;
  }
}
.searchbar-sard .btn-search:focus{
  &::before{
    color: $sa-grey-18;
  }
}

.searchbar-sard input:hover + .btn-search{
  &::before{
    color: $sa-grey-16;
  }
}
.searchbar-sard input:focus + .btn-search{
  &::before{
    color: $sa-grey-18;
  }
}

// Colour variations ============================

// Searchbar Primary ============================

.searchbar-sard.searchbar-primary input{
  border:2px solid darken($user-primary-colour, 0%);
  &:hover{
    border-color: darken($user-primary-colour, 5%);
  }
  &:focus{
    border-color: darken($user-primary-colour, 15%);
  }
}

.searchbar-sard.searchbar-primary .btn-search{
  &::before{
    color:darken($user-primary-colour, 5%);
  }
}

.searchbar-sard.searchbar-primary .btn-search:hover{
  &::before{
    color: darken($user-primary-colour, 10%);
  }
}
.searchbar-sard.searchbar-primary .btn-search:focus{
  &::before{
    color: darken($user-primary-colour, 15%);
  }
}

.searchbar-sard.searchbar-primary input:hover + .btn-search{
  &::before{
    color: darken($user-primary-colour, 10%);
  }
}
.searchbar-sard.searchbar-primary input:focus + .btn-search{
  &::before{
    color: darken($user-primary-colour, 15%);
  }
}

// Searchbar Secondary ==========================

.searchbar-sard.searchbar-secondary input{
  border:2px solid darken($user-secondary-colour, 0%);
  &:hover{
    border-color: darken($user-secondary-colour, 5%);
  }
  &:focus{
    border-color: darken($user-secondary-colour, 15%);
  }
}

.searchbar-sard.searchbar-secondary .btn-search{
  &::before{
    color:darken($user-secondary-colour, 5%);
  }
}

.searchbar-sard.searchbar-secondary .btn-search:hover{
  &::before{
    color: darken($user-secondary-colour, 10%);
  }
}
.searchbar-sard.searchbar-secondary .btn-search:focus{
  &::before{
    color: darken($user-secondary-colour, 15%);
  }
}

.searchbar-sard.searchbar-secondary input:hover + .btn-search{
  &::before{
    color: darken($user-secondary-colour, 10%);
  }
}
.searchbar-sard.searchbar-secondary input:focus + .btn-search{
  &::before{
    color: darken($user-secondary-colour, 15%);
  }
}


// Perforations =================================

// Horizontal Rules =========
hr{
  border-bottom: none!important;
  border-color: $sa-grey-08;
}

hr.x2{ border-width: 2px; }
hr.x4{ border-width: 4px; }
hr.x8{ border-width: 8px; }
hr.x12{ border-width: 12px; }
hr.x16{ border-width: 16px; }

hr.dashed{ border-style: dashed;}
hr.dotted{ border-style: dotted;}

hr.black{ border-color: $text; }
hr.grey { background-color: $sa-grey-08; }
hr.trust{ border-color: $trust-primary-colour; }
hr.admin{ border-color: $admin-primary-colour; }
hr.primary{ border-color: $primary; }
hr.secondary{ border-color: $secondary; }
hr.white{ border-color: white; }


// Perfs in Cards etc =======

.card-body + .perf,
.panel-body + .perf,
.form-group + .perf{
  height: 8px;
  background-color: white;
  margin: 0px -1px;
  width: calc(100% + 2px);
}

.card-body .perf,
.panel-body .perf,
.form-group .perf{
  height: 8px;
  background-color: white;
  margin: 0px -10px 10px -10px;
  width: calc(100% + 20px);
}

// Perfs ====================

.perf{
  display:block;
  width:100%;
  height: 1px;
  background-repeat: repeat-x;
  mask-image: url("../images/perf-mask.svg");
}

.perf.x2{ height: 2px; }
.perf.x4{ height: 4px; }
.perf.x8{ height: 8px; }
.perf.x12{ height: 12px; }
.perf.x16{ height: 16px; }


.perf { background-color: $sa-grey-08; }
.perf.black { background-color: $text; }
.perf.grey { background-color: $sa-grey-08; }
.perf.trust { background-color: $trust-primary-colour; }
.perf.admin { background-color: $admin-primary-colour; }
.perf.primary { background-color: $primary; }
.perf.secondary { background-color: $secondary; }
.perf.white { background-color: white; }



// Pagination ===================================

// Pagination Sard
.pagination-sard{
  a.page-link span{
    display: none;
  }
}

.pagination-sard .page-item.active .page-link{
  background-color: darken($user-primary-colour, 0%);
  border-color: darken($user-primary-colour, 0%);
  color: white;
  &:hover{
    background-color: darken($user-primary-colour, 3%);
    border-color: darken($user-primary-colour, 3%);
  }
  &:focus{
    background-color: darken($user-primary-colour, 6%);
    border-color: darken($user-primary-colour, 6%);
  }
}

.pagination-sard .page-link{
  color: darken($user-primary-colour, 0%);
  
  &:hover{
    background-color: darken($user-primary-colour, 3%);
    border-color: darken($user-primary-colour, 3%);
    color: white;
  }
  &:focus{
    background-color: darken($user-primary-colour, 6%);
    border-color: darken($user-primary-colour, 6%);
    color: white;
    box-shadow: none;
  }
}

.pagination-sard{
  .page-link[aria-label="Previous"],
  .page-link[aria-label="Next"] {
    padding: 0px;
    max-width: 36px;
    width: 36px;
    max-height: 36px;
    height: 36px;
    &::before{
      font-family: "Font Awesome 5 Free"; 
      font-weight: 900;
      color: $user-primary-colour;
      font-size: 1.21rem;
      position: relative;
      top: 6px;
      left: 7px;
      }
      &:hover::before,
      &:focus::before{
        color: white;
      }
  } 
}

.pagination-sard{
  .page-link[aria-label="Previous"] {
    border-top-left-radius: 6px;
    border-bottom-left-radius: 6px;
    &::before{
      content: "\f0a8" ;
    }
  }
}
.pagination-sard{
  .page-link[aria-label="Next"] {
    border-top-right-radius: 6px;
    border-bottom-right-radius: 6px;
    &::before{
      content: "\f0a9" ;
    }
  }
}

// sizing
.pagination-sard.pagination-lg{
  .page-link[aria-label="Previous"],
  .page-link[aria-label="Next"] {
    max-width: 54px;
    width: 54px;
    max-height: 54px;
    height: 54px;
    &::before{
      font-size: 1.75rem;
      position: relative;
      top: 6px;
      left: 12px;
    }
  } 
}

.pagination-sard.pagination-sm{
  .page-link[aria-label="Previous"],
  .page-link[aria-label="Next"] {
    max-width: 29px;
    width: 29px;
    max-height: 29px;
    height: 29px;
    &::before{
      font-size: 1.05rem;
      position: relative;
      top: 1px;
      left: 6px;
    }
  } 
}

// Within Cards, Panels and Fieldsets

.card-body .pagination-div,
.panel-body .pagination-div,
.form-group .pagination-div{
  border-top: 1px solid $user-primary-colour;
  padding-top: 1rem;
  
  .pagination{
    float: right;
    margin-bottom: 0rem;
  }
}
.form-group .pagination-div{
  .pagination{
    margin-bottom: 0.7rem;
  }
}


.pagination-entries{
  display:inline-block;
  float:left;
  margin-top: -0.3rem;
  @media (max-width: 991px) { // Small Screens
    min-width:100%;
    width:100%;
  } 
}
// Footer =======================================

.sa-footer{
  
  #accordion {
    z-index: 5000;
    position: fixed;
    bottom: 0;
    width: 100%;  
    border-top:4px solid white;  
  }
  
  .footer-header {
    background: $sa-grey-18;
    border-radius: none;
    padding: 8px 0px;
    color: white;
    em, h1, h2, h3, h4, h5, h6, p, a{
      color: white;
      margin: 0 ;
      padding: 0 ;
      display: inline;
      font-size: 0.9375rem; // 15px
      line-height: 1rem;
    }
  }
  
  .footer-header a {
    color: white;
    &:hover{
      color: $user-primary-colour;
    }
  }

  .footer-header.collapsable .expand-button::before{
    content: "Expand" ;
  }
  .footer-header.collapsable .expand-button::after{
    font-family: "Font Awesome 5 Free"; 
    content: "\f106" ;
    font-weight: 900;
    padding-left: $sa-spacer-6;
    color:$user-primary-colour;
    font-size: 1.75rem;
    line-height: 0.5rem;
    position: relative;
    top: 5px;
  }
  
  .footer-header.collapsable .expand-button[aria-expanded="true"]::before{
    content: "Close" ;
  }
  .footer-header.collapsable .expand-button[aria-expanded="true"]::after{
    content: "\f107" ;
  }

  .footer-header .slash { color:$sa-grey-12;}
  
  .footer-body{
    background-color: $sa-grey-02;
    padding: 8px 0px;
  }

} // End Footer




// DON'T ADD SYSTEM OR LOCAL STYLES HERE


